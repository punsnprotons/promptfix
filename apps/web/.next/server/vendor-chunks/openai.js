"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/openai";
exports.ids = ["vendor-chunks/openai"];
exports.modules = {

/***/ "(rsc)/./node_modules/openai/_vendor/partial-json-parser/parser.mjs":
/*!********************************************************************!*\
  !*** ./node_modules/openai/_vendor/partial-json-parser/parser.mjs ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MalformedJSON: () => (/* binding */ MalformedJSON),\n/* harmony export */   PartialJSON: () => (/* binding */ PartialJSON),\n/* harmony export */   partialParse: () => (/* binding */ partialParse)\n/* harmony export */ });\nconst STR = 1;\nconst NUM = 2;\nconst ARR = 4;\nconst OBJ = 8;\nconst NULL = 16;\nconst BOOL = 32;\nconst NAN = 64;\nconst INFINITY = 128;\nconst MINUS_INFINITY = 256;\nconst INF = INFINITY | MINUS_INFINITY;\nconst SPECIAL = NULL | BOOL | INF | NAN;\nconst ATOM = STR | NUM | SPECIAL;\nconst COLLECTION = ARR | OBJ;\nconst ALL = ATOM | COLLECTION;\nconst Allow = {\n    STR,\n    NUM,\n    ARR,\n    OBJ,\n    NULL,\n    BOOL,\n    NAN,\n    INFINITY,\n    MINUS_INFINITY,\n    INF,\n    SPECIAL,\n    ATOM,\n    COLLECTION,\n    ALL\n};\n// The JSON string segment was unable to be parsed completely\nclass PartialJSON extends Error {\n}\nclass MalformedJSON extends Error {\n}\n/**\n * Parse incomplete JSON\n * @param {string} jsonString Partial JSON to be parsed\n * @param {number} allowPartial Specify what types are allowed to be partial, see {@link Allow} for details\n * @returns The parsed JSON\n * @throws {PartialJSON} If the JSON is incomplete (related to the `allow` parameter)\n * @throws {MalformedJSON} If the JSON is malformed\n */ function parseJSON(jsonString, allowPartial = Allow.ALL) {\n    if (typeof jsonString !== \"string\") {\n        throw new TypeError(`expecting str, got ${typeof jsonString}`);\n    }\n    if (!jsonString.trim()) {\n        throw new Error(`${jsonString} is empty`);\n    }\n    return _parseJSON(jsonString.trim(), allowPartial);\n}\nconst _parseJSON = (jsonString, allow)=>{\n    const length = jsonString.length;\n    let index = 0;\n    const markPartialJSON = (msg)=>{\n        throw new PartialJSON(`${msg} at position ${index}`);\n    };\n    const throwMalformedError = (msg)=>{\n        throw new MalformedJSON(`${msg} at position ${index}`);\n    };\n    const parseAny = ()=>{\n        skipBlank();\n        if (index >= length) markPartialJSON(\"Unexpected end of input\");\n        if (jsonString[index] === '\"') return parseStr();\n        if (jsonString[index] === \"{\") return parseObj();\n        if (jsonString[index] === \"[\") return parseArr();\n        if (jsonString.substring(index, index + 4) === \"null\" || Allow.NULL & allow && length - index < 4 && \"null\".startsWith(jsonString.substring(index))) {\n            index += 4;\n            return null;\n        }\n        if (jsonString.substring(index, index + 4) === \"true\" || Allow.BOOL & allow && length - index < 4 && \"true\".startsWith(jsonString.substring(index))) {\n            index += 4;\n            return true;\n        }\n        if (jsonString.substring(index, index + 5) === \"false\" || Allow.BOOL & allow && length - index < 5 && \"false\".startsWith(jsonString.substring(index))) {\n            index += 5;\n            return false;\n        }\n        if (jsonString.substring(index, index + 8) === \"Infinity\" || Allow.INFINITY & allow && length - index < 8 && \"Infinity\".startsWith(jsonString.substring(index))) {\n            index += 8;\n            return Infinity;\n        }\n        if (jsonString.substring(index, index + 9) === \"-Infinity\" || Allow.MINUS_INFINITY & allow && 1 < length - index && length - index < 9 && \"-Infinity\".startsWith(jsonString.substring(index))) {\n            index += 9;\n            return -Infinity;\n        }\n        if (jsonString.substring(index, index + 3) === \"NaN\" || Allow.NAN & allow && length - index < 3 && \"NaN\".startsWith(jsonString.substring(index))) {\n            index += 3;\n            return NaN;\n        }\n        return parseNum();\n    };\n    const parseStr = ()=>{\n        const start = index;\n        let escape = false;\n        index++; // skip initial quote\n        while(index < length && (jsonString[index] !== '\"' || escape && jsonString[index - 1] === \"\\\\\")){\n            escape = jsonString[index] === \"\\\\\" ? !escape : false;\n            index++;\n        }\n        if (jsonString.charAt(index) == '\"') {\n            try {\n                return JSON.parse(jsonString.substring(start, ++index - Number(escape)));\n            } catch (e) {\n                throwMalformedError(String(e));\n            }\n        } else if (Allow.STR & allow) {\n            try {\n                return JSON.parse(jsonString.substring(start, index - Number(escape)) + '\"');\n            } catch (e) {\n                // SyntaxError: Invalid escape sequence\n                return JSON.parse(jsonString.substring(start, jsonString.lastIndexOf(\"\\\\\")) + '\"');\n            }\n        }\n        markPartialJSON(\"Unterminated string literal\");\n    };\n    const parseObj = ()=>{\n        index++; // skip initial brace\n        skipBlank();\n        const obj = {};\n        try {\n            while(jsonString[index] !== \"}\"){\n                skipBlank();\n                if (index >= length && Allow.OBJ & allow) return obj;\n                const key = parseStr();\n                skipBlank();\n                index++; // skip colon\n                try {\n                    const value = parseAny();\n                    Object.defineProperty(obj, key, {\n                        value,\n                        writable: true,\n                        enumerable: true,\n                        configurable: true\n                    });\n                } catch (e) {\n                    if (Allow.OBJ & allow) return obj;\n                    else throw e;\n                }\n                skipBlank();\n                if (jsonString[index] === \",\") index++; // skip comma\n            }\n        } catch (e) {\n            if (Allow.OBJ & allow) return obj;\n            else markPartialJSON(\"Expected '}' at end of object\");\n        }\n        index++; // skip final brace\n        return obj;\n    };\n    const parseArr = ()=>{\n        index++; // skip initial bracket\n        const arr = [];\n        try {\n            while(jsonString[index] !== \"]\"){\n                arr.push(parseAny());\n                skipBlank();\n                if (jsonString[index] === \",\") {\n                    index++; // skip comma\n                }\n            }\n        } catch (e) {\n            if (Allow.ARR & allow) {\n                return arr;\n            }\n            markPartialJSON(\"Expected ']' at end of array\");\n        }\n        index++; // skip final bracket\n        return arr;\n    };\n    const parseNum = ()=>{\n        if (index === 0) {\n            if (jsonString === \"-\" && Allow.NUM & allow) markPartialJSON(\"Not sure what '-' is\");\n            try {\n                return JSON.parse(jsonString);\n            } catch (e) {\n                if (Allow.NUM & allow) {\n                    try {\n                        if (\".\" === jsonString[jsonString.length - 1]) return JSON.parse(jsonString.substring(0, jsonString.lastIndexOf(\".\")));\n                        return JSON.parse(jsonString.substring(0, jsonString.lastIndexOf(\"e\")));\n                    } catch (e) {}\n                }\n                throwMalformedError(String(e));\n            }\n        }\n        const start = index;\n        if (jsonString[index] === \"-\") index++;\n        while(jsonString[index] && !\",]}\".includes(jsonString[index]))index++;\n        if (index == length && !(Allow.NUM & allow)) markPartialJSON(\"Unterminated number literal\");\n        try {\n            return JSON.parse(jsonString.substring(start, index));\n        } catch (e) {\n            if (jsonString.substring(start, index) === \"-\" && Allow.NUM & allow) markPartialJSON(\"Not sure what '-' is\");\n            try {\n                return JSON.parse(jsonString.substring(start, jsonString.lastIndexOf(\"e\")));\n            } catch (e) {\n                throwMalformedError(String(e));\n            }\n        }\n    };\n    const skipBlank = ()=>{\n        while(index < length && \" \\n\\r\t\".includes(jsonString[index])){\n            index++;\n        }\n    };\n    return parseAny();\n};\n// using this function with malformed JSON is undefined behavior\nconst partialParse = (input)=>parseJSON(input, Allow.ALL ^ Allow.NUM);\n //# sourceMappingURL=parser.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/_vendor/partial-json-parser/parser.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/azure.mjs":
/*!***************************************!*\
  !*** ./node_modules/openai/azure.mjs ***!
  \***************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AzureOpenAI: () => (/* binding */ AzureOpenAI)\n/* harmony export */ });\n/* harmony import */ var _internal_headers_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./internal/headers.mjs */ \"(rsc)/./node_modules/openai/internal/headers.mjs\");\n/* harmony import */ var _error_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./error.mjs */ \"(rsc)/./node_modules/openai/error.mjs\");\n/* harmony import */ var _internal_utils_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./internal/utils.mjs */ \"(rsc)/./node_modules/openai/internal/utils.mjs\");\n/* harmony import */ var _client_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./client.mjs */ \"(rsc)/./node_modules/openai/client.mjs\");\n\n\n\n\n/** API Client for interfacing with the Azure OpenAI API. */ class AzureOpenAI extends _client_mjs__WEBPACK_IMPORTED_MODULE_3__.OpenAI {\n    /**\n     * API Client for interfacing with the Azure OpenAI API.\n     *\n     * @param {string | undefined} [opts.apiVersion=process.env['OPENAI_API_VERSION'] ?? undefined]\n     * @param {string | undefined} [opts.endpoint=process.env['AZURE_OPENAI_ENDPOINT'] ?? undefined] - Your Azure endpoint, including the resource, e.g. `https://example-resource.azure.openai.com/`\n     * @param {string | undefined} [opts.apiKey=process.env['AZURE_OPENAI_API_KEY'] ?? undefined]\n     * @param {string | undefined} opts.deployment - A model deployment, if given, sets the base client URL to include `/deployments/{deployment}`.\n     * @param {string | null | undefined} [opts.organization=process.env['OPENAI_ORG_ID'] ?? null]\n     * @param {string} [opts.baseURL=process.env['OPENAI_BASE_URL']] - Sets the base URL for the API, e.g. `https://example-resource.azure.openai.com/openai/`.\n     * @param {number} [opts.timeout=10 minutes] - The maximum amount of time (in milliseconds) the client will wait for a response before timing out.\n     * @param {number} [opts.httpAgent] - An HTTP agent used to manage HTTP(s) connections.\n     * @param {Fetch} [opts.fetch] - Specify a custom `fetch` function implementation.\n     * @param {number} [opts.maxRetries=2] - The maximum number of times the client will retry a request.\n     * @param {Headers} opts.defaultHeaders - Default headers to include with every request to the API.\n     * @param {DefaultQuery} opts.defaultQuery - Default query parameters to include with every request to the API.\n     * @param {boolean} [opts.dangerouslyAllowBrowser=false] - By default, client-side use of this library is not allowed, as it risks exposing your secret API credentials to attackers.\n     */ constructor({ baseURL = (0,_internal_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.readEnv)(\"OPENAI_BASE_URL\"), apiKey = (0,_internal_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.readEnv)(\"AZURE_OPENAI_API_KEY\"), apiVersion = (0,_internal_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.readEnv)(\"OPENAI_API_VERSION\"), endpoint, deployment, azureADTokenProvider, dangerouslyAllowBrowser, ...opts } = {}){\n        if (!apiVersion) {\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(\"The OPENAI_API_VERSION environment variable is missing or empty; either provide it, or instantiate the AzureOpenAI client with an apiVersion option, like new AzureOpenAI({ apiVersion: 'My API Version' }).\");\n        }\n        if (typeof azureADTokenProvider === \"function\") {\n            dangerouslyAllowBrowser = true;\n        }\n        if (!azureADTokenProvider && !apiKey) {\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(\"Missing credentials. Please pass one of `apiKey` and `azureADTokenProvider`, or set the `AZURE_OPENAI_API_KEY` environment variable.\");\n        }\n        if (azureADTokenProvider && apiKey) {\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(\"The `apiKey` and `azureADTokenProvider` arguments are mutually exclusive; only one can be passed at a time.\");\n        }\n        opts.defaultQuery = {\n            ...opts.defaultQuery,\n            \"api-version\": apiVersion\n        };\n        if (!baseURL) {\n            if (!endpoint) {\n                endpoint = process.env[\"AZURE_OPENAI_ENDPOINT\"];\n            }\n            if (!endpoint) {\n                throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(\"Must provide one of the `baseURL` or `endpoint` arguments, or the `AZURE_OPENAI_ENDPOINT` environment variable\");\n            }\n            baseURL = `${endpoint}/openai`;\n        } else {\n            if (endpoint) {\n                throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(\"baseURL and endpoint are mutually exclusive\");\n            }\n        }\n        super({\n            apiKey: azureADTokenProvider ?? apiKey,\n            baseURL,\n            ...opts,\n            ...dangerouslyAllowBrowser !== undefined ? {\n                dangerouslyAllowBrowser\n            } : {}\n        });\n        this.apiVersion = \"\";\n        this.apiVersion = apiVersion;\n        this.deploymentName = deployment;\n    }\n    async buildRequest(options, props = {}) {\n        if (_deployments_endpoints.has(options.path) && options.method === \"post\" && options.body !== undefined) {\n            if (!(0,_internal_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.isObj)(options.body)) {\n                throw new Error(\"Expected request body to be an object\");\n            }\n            const model = this.deploymentName || options.body[\"model\"] || options.__metadata?.[\"model\"];\n            if (model !== undefined && !this.baseURL.includes(\"/deployments\")) {\n                options.path = `/deployments/${model}${options.path}`;\n            }\n        }\n        return super.buildRequest(options, props);\n    }\n    async authHeaders(opts) {\n        if (typeof this._options.apiKey === \"string\") {\n            return (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_0__.buildHeaders)([\n                {\n                    \"api-key\": this.apiKey\n                }\n            ]);\n        }\n        return super.authHeaders(opts);\n    }\n}\nconst _deployments_endpoints = new Set([\n    \"/completions\",\n    \"/chat/completions\",\n    \"/embeddings\",\n    \"/audio/transcriptions\",\n    \"/audio/translations\",\n    \"/audio/speech\",\n    \"/images/generations\",\n    \"/batches\",\n    \"/images/edits\"\n]); //# sourceMappingURL=azure.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/azure.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/client.mjs":
/*!****************************************!*\
  !*** ./node_modules/openai/client.mjs ***!
  \****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OpenAI: () => (/* binding */ OpenAI)\n/* harmony export */ });\n/* harmony import */ var _internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./internal/tslib.mjs */ \"(rsc)/./node_modules/openai/internal/tslib.mjs\");\n/* harmony import */ var _internal_utils_uuid_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./internal/utils/uuid.mjs */ \"(rsc)/./node_modules/openai/internal/utils/uuid.mjs\");\n/* harmony import */ var _internal_utils_values_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./internal/utils/values.mjs */ \"(rsc)/./node_modules/openai/internal/utils/values.mjs\");\n/* harmony import */ var _internal_utils_sleep_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./internal/utils/sleep.mjs */ \"(rsc)/./node_modules/openai/internal/utils/sleep.mjs\");\n/* harmony import */ var _internal_errors_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./internal/errors.mjs */ \"(rsc)/./node_modules/openai/internal/errors.mjs\");\n/* harmony import */ var _internal_detect_platform_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./internal/detect-platform.mjs */ \"(rsc)/./node_modules/openai/internal/detect-platform.mjs\");\n/* harmony import */ var _internal_shims_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./internal/shims.mjs */ \"(rsc)/./node_modules/openai/internal/shims.mjs\");\n/* harmony import */ var _internal_request_options_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./internal/request-options.mjs */ \"(rsc)/./node_modules/openai/internal/request-options.mjs\");\n/* harmony import */ var _internal_qs_index_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./internal/qs/index.mjs */ \"(rsc)/./node_modules/openai/internal/qs/index.mjs\");\n/* harmony import */ var _version_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./version.mjs */ \"(rsc)/./node_modules/openai/version.mjs\");\n/* harmony import */ var _core_error_mjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./core/error.mjs */ \"(rsc)/./node_modules/openai/core/error.mjs\");\n/* harmony import */ var _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./core/pagination.mjs */ \"(rsc)/./node_modules/openai/core/pagination.mjs\");\n/* harmony import */ var _core_uploads_mjs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./core/uploads.mjs */ \"(rsc)/./node_modules/openai/core/uploads.mjs\");\n/* harmony import */ var _resources_index_mjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./resources/index.mjs */ \"(rsc)/./node_modules/openai/resources/index.mjs\");\n/* harmony import */ var _core_api_promise_mjs__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./core/api-promise.mjs */ \"(rsc)/./node_modules/openai/core/api-promise.mjs\");\n/* harmony import */ var _resources_batches_mjs__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./resources/batches.mjs */ \"(rsc)/./node_modules/openai/resources/batches.mjs\");\n/* harmony import */ var _resources_completions_mjs__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./resources/completions.mjs */ \"(rsc)/./node_modules/openai/resources/completions.mjs\");\n/* harmony import */ var _resources_embeddings_mjs__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./resources/embeddings.mjs */ \"(rsc)/./node_modules/openai/resources/embeddings.mjs\");\n/* harmony import */ var _resources_files_mjs__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./resources/files.mjs */ \"(rsc)/./node_modules/openai/resources/files.mjs\");\n/* harmony import */ var _resources_images_mjs__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./resources/images.mjs */ \"(rsc)/./node_modules/openai/resources/images.mjs\");\n/* harmony import */ var _resources_models_mjs__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./resources/models.mjs */ \"(rsc)/./node_modules/openai/resources/models.mjs\");\n/* harmony import */ var _resources_moderations_mjs__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./resources/moderations.mjs */ \"(rsc)/./node_modules/openai/resources/moderations.mjs\");\n/* harmony import */ var _resources_webhooks_mjs__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./resources/webhooks.mjs */ \"(rsc)/./node_modules/openai/resources/webhooks.mjs\");\n/* harmony import */ var _resources_audio_audio_mjs__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./resources/audio/audio.mjs */ \"(rsc)/./node_modules/openai/resources/audio/audio.mjs\");\n/* harmony import */ var _resources_beta_beta_mjs__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./resources/beta/beta.mjs */ \"(rsc)/./node_modules/openai/resources/beta/beta.mjs\");\n/* harmony import */ var _resources_chat_chat_mjs__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./resources/chat/chat.mjs */ \"(rsc)/./node_modules/openai/resources/chat/chat.mjs\");\n/* harmony import */ var _resources_containers_containers_mjs__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./resources/containers/containers.mjs */ \"(rsc)/./node_modules/openai/resources/containers/containers.mjs\");\n/* harmony import */ var _resources_conversations_conversations_mjs__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./resources/conversations/conversations.mjs */ \"(rsc)/./node_modules/openai/resources/conversations/conversations.mjs\");\n/* harmony import */ var _resources_evals_evals_mjs__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./resources/evals/evals.mjs */ \"(rsc)/./node_modules/openai/resources/evals/evals.mjs\");\n/* harmony import */ var _resources_fine_tuning_fine_tuning_mjs__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./resources/fine-tuning/fine-tuning.mjs */ \"(rsc)/./node_modules/openai/resources/fine-tuning/fine-tuning.mjs\");\n/* harmony import */ var _resources_graders_graders_mjs__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./resources/graders/graders.mjs */ \"(rsc)/./node_modules/openai/resources/graders/graders.mjs\");\n/* harmony import */ var _resources_realtime_realtime_mjs__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./resources/realtime/realtime.mjs */ \"(rsc)/./node_modules/openai/resources/realtime/realtime.mjs\");\n/* harmony import */ var _resources_responses_responses_mjs__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./resources/responses/responses.mjs */ \"(rsc)/./node_modules/openai/resources/responses/responses.mjs\");\n/* harmony import */ var _resources_uploads_uploads_mjs__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./resources/uploads/uploads.mjs */ \"(rsc)/./node_modules/openai/resources/uploads/uploads.mjs\");\n/* harmony import */ var _resources_vector_stores_vector_stores_mjs__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./resources/vector-stores/vector-stores.mjs */ \"(rsc)/./node_modules/openai/resources/vector-stores/vector-stores.mjs\");\n/* harmony import */ var _internal_headers_mjs__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./internal/headers.mjs */ \"(rsc)/./node_modules/openai/internal/headers.mjs\");\n/* harmony import */ var _internal_utils_env_mjs__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./internal/utils/env.mjs */ \"(rsc)/./node_modules/openai/internal/utils/env.mjs\");\n/* harmony import */ var _internal_utils_log_mjs__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./internal/utils/log.mjs */ \"(rsc)/./node_modules/openai/internal/utils/log.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nvar _OpenAI_instances, _a, _OpenAI_encoder, _OpenAI_baseURLOverridden;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * API Client for interfacing with the OpenAI API.\n */ class OpenAI {\n    /**\n     * API Client for interfacing with the OpenAI API.\n     *\n     * @param {string | undefined} [opts.apiKey=process.env['OPENAI_API_KEY'] ?? undefined]\n     * @param {string | null | undefined} [opts.organization=process.env['OPENAI_ORG_ID'] ?? null]\n     * @param {string | null | undefined} [opts.project=process.env['OPENAI_PROJECT_ID'] ?? null]\n     * @param {string | null | undefined} [opts.webhookSecret=process.env['OPENAI_WEBHOOK_SECRET'] ?? null]\n     * @param {string} [opts.baseURL=process.env['OPENAI_BASE_URL'] ?? https://api.openai.com/v1] - Override the default base URL for the API.\n     * @param {number} [opts.timeout=10 minutes] - The maximum amount of time (in milliseconds) the client will wait for a response before timing out.\n     * @param {MergedRequestInit} [opts.fetchOptions] - Additional `RequestInit` options to be passed to `fetch` calls.\n     * @param {Fetch} [opts.fetch] - Specify a custom `fetch` function implementation.\n     * @param {number} [opts.maxRetries=2] - The maximum number of times the client will retry a request.\n     * @param {HeadersLike} opts.defaultHeaders - Default headers to include with every request to the API.\n     * @param {Record<string, string | undefined>} opts.defaultQuery - Default query parameters to include with every request to the API.\n     * @param {boolean} [opts.dangerouslyAllowBrowser=false] - By default, client-side use of this library is not allowed, as it risks exposing your secret API credentials to attackers.\n     */ constructor({ baseURL = (0,_internal_utils_env_mjs__WEBPACK_IMPORTED_MODULE_36__.readEnv)(\"OPENAI_BASE_URL\"), apiKey = (0,_internal_utils_env_mjs__WEBPACK_IMPORTED_MODULE_36__.readEnv)(\"OPENAI_API_KEY\"), organization = (0,_internal_utils_env_mjs__WEBPACK_IMPORTED_MODULE_36__.readEnv)(\"OPENAI_ORG_ID\") ?? null, project = (0,_internal_utils_env_mjs__WEBPACK_IMPORTED_MODULE_36__.readEnv)(\"OPENAI_PROJECT_ID\") ?? null, webhookSecret = (0,_internal_utils_env_mjs__WEBPACK_IMPORTED_MODULE_36__.readEnv)(\"OPENAI_WEBHOOK_SECRET\") ?? null, ...opts } = {}){\n        _OpenAI_instances.add(this);\n        _OpenAI_encoder.set(this, void 0);\n        this.completions = new _resources_index_mjs__WEBPACK_IMPORTED_MODULE_13__.Completions(this);\n        this.chat = new _resources_index_mjs__WEBPACK_IMPORTED_MODULE_13__.Chat(this);\n        this.embeddings = new _resources_index_mjs__WEBPACK_IMPORTED_MODULE_13__.Embeddings(this);\n        this.files = new _resources_index_mjs__WEBPACK_IMPORTED_MODULE_13__.Files(this);\n        this.images = new _resources_index_mjs__WEBPACK_IMPORTED_MODULE_13__.Images(this);\n        this.audio = new _resources_index_mjs__WEBPACK_IMPORTED_MODULE_13__.Audio(this);\n        this.moderations = new _resources_index_mjs__WEBPACK_IMPORTED_MODULE_13__.Moderations(this);\n        this.models = new _resources_index_mjs__WEBPACK_IMPORTED_MODULE_13__.Models(this);\n        this.fineTuning = new _resources_index_mjs__WEBPACK_IMPORTED_MODULE_13__.FineTuning(this);\n        this.graders = new _resources_index_mjs__WEBPACK_IMPORTED_MODULE_13__.Graders(this);\n        this.vectorStores = new _resources_index_mjs__WEBPACK_IMPORTED_MODULE_13__.VectorStores(this);\n        this.webhooks = new _resources_index_mjs__WEBPACK_IMPORTED_MODULE_13__.Webhooks(this);\n        this.beta = new _resources_index_mjs__WEBPACK_IMPORTED_MODULE_13__.Beta(this);\n        this.batches = new _resources_index_mjs__WEBPACK_IMPORTED_MODULE_13__.Batches(this);\n        this.uploads = new _resources_index_mjs__WEBPACK_IMPORTED_MODULE_13__.Uploads(this);\n        this.responses = new _resources_index_mjs__WEBPACK_IMPORTED_MODULE_13__.Responses(this);\n        this.realtime = new _resources_index_mjs__WEBPACK_IMPORTED_MODULE_13__.Realtime(this);\n        this.conversations = new _resources_index_mjs__WEBPACK_IMPORTED_MODULE_13__.Conversations(this);\n        this.evals = new _resources_index_mjs__WEBPACK_IMPORTED_MODULE_13__.Evals(this);\n        this.containers = new _resources_index_mjs__WEBPACK_IMPORTED_MODULE_13__.Containers(this);\n        if (apiKey === undefined) {\n            throw new _core_error_mjs__WEBPACK_IMPORTED_MODULE_10__.OpenAIError(\"Missing credentials. Please pass an `apiKey`, or set the `OPENAI_API_KEY` environment variable.\");\n        }\n        const options = {\n            apiKey,\n            organization,\n            project,\n            webhookSecret,\n            ...opts,\n            baseURL: baseURL || `https://api.openai.com/v1`\n        };\n        if (!options.dangerouslyAllowBrowser && (0,_internal_detect_platform_mjs__WEBPACK_IMPORTED_MODULE_5__.isRunningInBrowser)()) {\n            throw new _core_error_mjs__WEBPACK_IMPORTED_MODULE_10__.OpenAIError(\"It looks like you're running in a browser-like environment.\\n\\nThis is disabled by default, as it risks exposing your secret API credentials to attackers.\\nIf you understand the risks and have appropriate mitigations in place,\\nyou can set the `dangerouslyAllowBrowser` option to `true`, e.g.,\\n\\nnew OpenAI({ apiKey, dangerouslyAllowBrowser: true });\\n\\nhttps://help.openai.com/en/articles/5112595-best-practices-for-api-key-safety\\n\");\n        }\n        this.baseURL = options.baseURL;\n        this.timeout = options.timeout ?? _a.DEFAULT_TIMEOUT /* 10 minutes */ ;\n        this.logger = options.logger ?? console;\n        const defaultLogLevel = \"warn\";\n        // Set default logLevel early so that we can log a warning in parseLogLevel.\n        this.logLevel = defaultLogLevel;\n        this.logLevel = (0,_internal_utils_log_mjs__WEBPACK_IMPORTED_MODULE_37__.parseLogLevel)(options.logLevel, \"ClientOptions.logLevel\", this) ?? (0,_internal_utils_log_mjs__WEBPACK_IMPORTED_MODULE_37__.parseLogLevel)((0,_internal_utils_env_mjs__WEBPACK_IMPORTED_MODULE_36__.readEnv)(\"OPENAI_LOG\"), \"process.env['OPENAI_LOG']\", this) ?? defaultLogLevel;\n        this.fetchOptions = options.fetchOptions;\n        this.maxRetries = options.maxRetries ?? 2;\n        this.fetch = options.fetch ?? _internal_shims_mjs__WEBPACK_IMPORTED_MODULE_6__.getDefaultFetch();\n        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _OpenAI_encoder, _internal_request_options_mjs__WEBPACK_IMPORTED_MODULE_7__.FallbackEncoder, \"f\");\n        this._options = options;\n        this.apiKey = typeof apiKey === \"string\" ? apiKey : \"Missing Key\";\n        this.organization = organization;\n        this.project = project;\n        this.webhookSecret = webhookSecret;\n    }\n    /**\n     * Create a new client instance re-using the same options given to the current client with optional overriding.\n     */ withOptions(options) {\n        const client = new this.constructor({\n            ...this._options,\n            baseURL: this.baseURL,\n            maxRetries: this.maxRetries,\n            timeout: this.timeout,\n            logger: this.logger,\n            logLevel: this.logLevel,\n            fetch: this.fetch,\n            fetchOptions: this.fetchOptions,\n            apiKey: this.apiKey,\n            organization: this.organization,\n            project: this.project,\n            webhookSecret: this.webhookSecret,\n            ...options\n        });\n        return client;\n    }\n    defaultQuery() {\n        return this._options.defaultQuery;\n    }\n    validateHeaders({ values, nulls }) {\n        return;\n    }\n    async authHeaders(opts) {\n        return (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_35__.buildHeaders)([\n            {\n                Authorization: `Bearer ${this.apiKey}`\n            }\n        ]);\n    }\n    stringifyQuery(query) {\n        return _internal_qs_index_mjs__WEBPACK_IMPORTED_MODULE_8__.stringify(query, {\n            arrayFormat: \"brackets\"\n        });\n    }\n    getUserAgent() {\n        return `${this.constructor.name}/JS ${_version_mjs__WEBPACK_IMPORTED_MODULE_9__.VERSION}`;\n    }\n    defaultIdempotencyKey() {\n        return `stainless-node-retry-${(0,_internal_utils_uuid_mjs__WEBPACK_IMPORTED_MODULE_1__.uuid4)()}`;\n    }\n    makeStatusError(status, error, message, headers) {\n        return _core_error_mjs__WEBPACK_IMPORTED_MODULE_10__.APIError.generate(status, error, message, headers);\n    }\n    async _callApiKey() {\n        const apiKey = this._options.apiKey;\n        if (typeof apiKey !== \"function\") return false;\n        let token;\n        try {\n            token = await apiKey();\n        } catch (err) {\n            if (err instanceof _core_error_mjs__WEBPACK_IMPORTED_MODULE_10__.OpenAIError) throw err;\n            throw new _core_error_mjs__WEBPACK_IMPORTED_MODULE_10__.OpenAIError(`Failed to get token from 'apiKey' function: ${err.message}`, // @ts-ignore\n            {\n                cause: err\n            });\n        }\n        if (typeof token !== \"string\" || !token) {\n            throw new _core_error_mjs__WEBPACK_IMPORTED_MODULE_10__.OpenAIError(`Expected 'apiKey' function argument to return a string but it returned ${token}`);\n        }\n        this.apiKey = token;\n        return true;\n    }\n    buildURL(path, query, defaultBaseURL) {\n        const baseURL = !(0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _OpenAI_instances, \"m\", _OpenAI_baseURLOverridden).call(this) && defaultBaseURL || this.baseURL;\n        const url = (0,_internal_utils_values_mjs__WEBPACK_IMPORTED_MODULE_2__.isAbsoluteURL)(path) ? new URL(path) : new URL(baseURL + (baseURL.endsWith(\"/\") && path.startsWith(\"/\") ? path.slice(1) : path));\n        const defaultQuery = this.defaultQuery();\n        if (!(0,_internal_utils_values_mjs__WEBPACK_IMPORTED_MODULE_2__.isEmptyObj)(defaultQuery)) {\n            query = {\n                ...defaultQuery,\n                ...query\n            };\n        }\n        if (typeof query === \"object\" && query && !Array.isArray(query)) {\n            url.search = this.stringifyQuery(query);\n        }\n        return url.toString();\n    }\n    /**\n     * Used as a callback for mutating the given `FinalRequestOptions` object.\n     */ async prepareOptions(options) {\n        await this._callApiKey();\n    }\n    /**\n     * Used as a callback for mutating the given `RequestInit` object.\n     *\n     * This is useful for cases where you want to add certain headers based off of\n     * the request properties, e.g. `method` or `url`.\n     */ async prepareRequest(request, { url, options }) {}\n    get(path, opts) {\n        return this.methodRequest(\"get\", path, opts);\n    }\n    post(path, opts) {\n        return this.methodRequest(\"post\", path, opts);\n    }\n    patch(path, opts) {\n        return this.methodRequest(\"patch\", path, opts);\n    }\n    put(path, opts) {\n        return this.methodRequest(\"put\", path, opts);\n    }\n    delete(path, opts) {\n        return this.methodRequest(\"delete\", path, opts);\n    }\n    methodRequest(method, path, opts) {\n        return this.request(Promise.resolve(opts).then((opts)=>{\n            return {\n                method,\n                path,\n                ...opts\n            };\n        }));\n    }\n    request(options, remainingRetries = null) {\n        return new _core_api_promise_mjs__WEBPACK_IMPORTED_MODULE_14__.APIPromise(this, this.makeRequest(options, remainingRetries, undefined));\n    }\n    async makeRequest(optionsInput, retriesRemaining, retryOfRequestLogID) {\n        const options = await optionsInput;\n        const maxRetries = options.maxRetries ?? this.maxRetries;\n        if (retriesRemaining == null) {\n            retriesRemaining = maxRetries;\n        }\n        await this.prepareOptions(options);\n        const { req, url, timeout } = await this.buildRequest(options, {\n            retryCount: maxRetries - retriesRemaining\n        });\n        await this.prepareRequest(req, {\n            url,\n            options\n        });\n        /** Not an API request ID, just for correlating local log entries. */ const requestLogID = \"log_\" + (Math.random() * (1 << 24) | 0).toString(16).padStart(6, \"0\");\n        const retryLogStr = retryOfRequestLogID === undefined ? \"\" : `, retryOf: ${retryOfRequestLogID}`;\n        const startTime = Date.now();\n        (0,_internal_utils_log_mjs__WEBPACK_IMPORTED_MODULE_37__.loggerFor)(this).debug(`[${requestLogID}] sending request`, (0,_internal_utils_log_mjs__WEBPACK_IMPORTED_MODULE_37__.formatRequestDetails)({\n            retryOfRequestLogID,\n            method: options.method,\n            url,\n            options,\n            headers: req.headers\n        }));\n        if (options.signal?.aborted) {\n            throw new _core_error_mjs__WEBPACK_IMPORTED_MODULE_10__.APIUserAbortError();\n        }\n        const controller = new AbortController();\n        const response = await this.fetchWithTimeout(url, req, timeout, controller).catch(_internal_errors_mjs__WEBPACK_IMPORTED_MODULE_4__.castToError);\n        const headersTime = Date.now();\n        if (response instanceof globalThis.Error) {\n            const retryMessage = `retrying, ${retriesRemaining} attempts remaining`;\n            if (options.signal?.aborted) {\n                throw new _core_error_mjs__WEBPACK_IMPORTED_MODULE_10__.APIUserAbortError();\n            }\n            // detect native connection timeout errors\n            // deno throws \"TypeError: error sending request for url (https://example/): client error (Connect): tcp connect error: Operation timed out (os error 60): Operation timed out (os error 60)\"\n            // undici throws \"TypeError: fetch failed\" with cause \"ConnectTimeoutError: Connect Timeout Error (attempted address: example:443, timeout: 1ms)\"\n            // others do not provide enough information to distinguish timeouts from other connection errors\n            const isTimeout = (0,_internal_errors_mjs__WEBPACK_IMPORTED_MODULE_4__.isAbortError)(response) || /timed? ?out/i.test(String(response) + (\"cause\" in response ? String(response.cause) : \"\"));\n            if (retriesRemaining) {\n                (0,_internal_utils_log_mjs__WEBPACK_IMPORTED_MODULE_37__.loggerFor)(this).info(`[${requestLogID}] connection ${isTimeout ? \"timed out\" : \"failed\"} - ${retryMessage}`);\n                (0,_internal_utils_log_mjs__WEBPACK_IMPORTED_MODULE_37__.loggerFor)(this).debug(`[${requestLogID}] connection ${isTimeout ? \"timed out\" : \"failed\"} (${retryMessage})`, (0,_internal_utils_log_mjs__WEBPACK_IMPORTED_MODULE_37__.formatRequestDetails)({\n                    retryOfRequestLogID,\n                    url,\n                    durationMs: headersTime - startTime,\n                    message: response.message\n                }));\n                return this.retryRequest(options, retriesRemaining, retryOfRequestLogID ?? requestLogID);\n            }\n            (0,_internal_utils_log_mjs__WEBPACK_IMPORTED_MODULE_37__.loggerFor)(this).info(`[${requestLogID}] connection ${isTimeout ? \"timed out\" : \"failed\"} - error; no more retries left`);\n            (0,_internal_utils_log_mjs__WEBPACK_IMPORTED_MODULE_37__.loggerFor)(this).debug(`[${requestLogID}] connection ${isTimeout ? \"timed out\" : \"failed\"} (error; no more retries left)`, (0,_internal_utils_log_mjs__WEBPACK_IMPORTED_MODULE_37__.formatRequestDetails)({\n                retryOfRequestLogID,\n                url,\n                durationMs: headersTime - startTime,\n                message: response.message\n            }));\n            if (isTimeout) {\n                throw new _core_error_mjs__WEBPACK_IMPORTED_MODULE_10__.APIConnectionTimeoutError();\n            }\n            throw new _core_error_mjs__WEBPACK_IMPORTED_MODULE_10__.APIConnectionError({\n                cause: response\n            });\n        }\n        const specialHeaders = [\n            ...response.headers.entries()\n        ].filter(([name])=>name === \"x-request-id\").map(([name, value])=>\", \" + name + \": \" + JSON.stringify(value)).join(\"\");\n        const responseInfo = `[${requestLogID}${retryLogStr}${specialHeaders}] ${req.method} ${url} ${response.ok ? \"succeeded\" : \"failed\"} with status ${response.status} in ${headersTime - startTime}ms`;\n        if (!response.ok) {\n            const shouldRetry = await this.shouldRetry(response);\n            if (retriesRemaining && shouldRetry) {\n                const retryMessage = `retrying, ${retriesRemaining} attempts remaining`;\n                // We don't need the body of this response.\n                await _internal_shims_mjs__WEBPACK_IMPORTED_MODULE_6__.CancelReadableStream(response.body);\n                (0,_internal_utils_log_mjs__WEBPACK_IMPORTED_MODULE_37__.loggerFor)(this).info(`${responseInfo} - ${retryMessage}`);\n                (0,_internal_utils_log_mjs__WEBPACK_IMPORTED_MODULE_37__.loggerFor)(this).debug(`[${requestLogID}] response error (${retryMessage})`, (0,_internal_utils_log_mjs__WEBPACK_IMPORTED_MODULE_37__.formatRequestDetails)({\n                    retryOfRequestLogID,\n                    url: response.url,\n                    status: response.status,\n                    headers: response.headers,\n                    durationMs: headersTime - startTime\n                }));\n                return this.retryRequest(options, retriesRemaining, retryOfRequestLogID ?? requestLogID, response.headers);\n            }\n            const retryMessage = shouldRetry ? `error; no more retries left` : `error; not retryable`;\n            (0,_internal_utils_log_mjs__WEBPACK_IMPORTED_MODULE_37__.loggerFor)(this).info(`${responseInfo} - ${retryMessage}`);\n            const errText = await response.text().catch((err)=>(0,_internal_errors_mjs__WEBPACK_IMPORTED_MODULE_4__.castToError)(err).message);\n            const errJSON = (0,_internal_utils_values_mjs__WEBPACK_IMPORTED_MODULE_2__.safeJSON)(errText);\n            const errMessage = errJSON ? undefined : errText;\n            (0,_internal_utils_log_mjs__WEBPACK_IMPORTED_MODULE_37__.loggerFor)(this).debug(`[${requestLogID}] response error (${retryMessage})`, (0,_internal_utils_log_mjs__WEBPACK_IMPORTED_MODULE_37__.formatRequestDetails)({\n                retryOfRequestLogID,\n                url: response.url,\n                status: response.status,\n                headers: response.headers,\n                message: errMessage,\n                durationMs: Date.now() - startTime\n            }));\n            const err = this.makeStatusError(response.status, errJSON, errMessage, response.headers);\n            throw err;\n        }\n        (0,_internal_utils_log_mjs__WEBPACK_IMPORTED_MODULE_37__.loggerFor)(this).info(responseInfo);\n        (0,_internal_utils_log_mjs__WEBPACK_IMPORTED_MODULE_37__.loggerFor)(this).debug(`[${requestLogID}] response start`, (0,_internal_utils_log_mjs__WEBPACK_IMPORTED_MODULE_37__.formatRequestDetails)({\n            retryOfRequestLogID,\n            url: response.url,\n            status: response.status,\n            headers: response.headers,\n            durationMs: headersTime - startTime\n        }));\n        return {\n            response,\n            options,\n            controller,\n            requestLogID,\n            retryOfRequestLogID,\n            startTime\n        };\n    }\n    getAPIList(path, Page, opts) {\n        return this.requestAPIList(Page, {\n            method: \"get\",\n            path,\n            ...opts\n        });\n    }\n    requestAPIList(Page, options) {\n        const request = this.makeRequest(options, null, undefined);\n        return new _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_11__.PagePromise(this, request, Page);\n    }\n    async fetchWithTimeout(url, init, ms, controller) {\n        const { signal, method, ...options } = init || {};\n        if (signal) signal.addEventListener(\"abort\", ()=>controller.abort());\n        const timeout = setTimeout(()=>controller.abort(), ms);\n        const isReadableBody = globalThis.ReadableStream && options.body instanceof globalThis.ReadableStream || typeof options.body === \"object\" && options.body !== null && Symbol.asyncIterator in options.body;\n        const fetchOptions = {\n            signal: controller.signal,\n            ...isReadableBody ? {\n                duplex: \"half\"\n            } : {},\n            method: \"GET\",\n            ...options\n        };\n        if (method) {\n            // Custom methods like 'patch' need to be uppercased\n            // See https://github.com/nodejs/undici/issues/2294\n            fetchOptions.method = method.toUpperCase();\n        }\n        try {\n            // use undefined this binding; fetch errors if bound to something else in browser/cloudflare\n            return await this.fetch.call(undefined, url, fetchOptions);\n        } finally{\n            clearTimeout(timeout);\n        }\n    }\n    async shouldRetry(response) {\n        // Note this is not a standard header.\n        const shouldRetryHeader = response.headers.get(\"x-should-retry\");\n        // If the server explicitly says whether or not to retry, obey.\n        if (shouldRetryHeader === \"true\") return true;\n        if (shouldRetryHeader === \"false\") return false;\n        // Retry on request timeouts.\n        if (response.status === 408) return true;\n        // Retry on lock timeouts.\n        if (response.status === 409) return true;\n        // Retry on rate limits.\n        if (response.status === 429) return true;\n        // Retry internal errors.\n        if (response.status >= 500) return true;\n        return false;\n    }\n    async retryRequest(options, retriesRemaining, requestLogID, responseHeaders) {\n        let timeoutMillis;\n        // Note the `retry-after-ms` header may not be standard, but is a good idea and we'd like proactive support for it.\n        const retryAfterMillisHeader = responseHeaders?.get(\"retry-after-ms\");\n        if (retryAfterMillisHeader) {\n            const timeoutMs = parseFloat(retryAfterMillisHeader);\n            if (!Number.isNaN(timeoutMs)) {\n                timeoutMillis = timeoutMs;\n            }\n        }\n        // About the Retry-After header: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After\n        const retryAfterHeader = responseHeaders?.get(\"retry-after\");\n        if (retryAfterHeader && !timeoutMillis) {\n            const timeoutSeconds = parseFloat(retryAfterHeader);\n            if (!Number.isNaN(timeoutSeconds)) {\n                timeoutMillis = timeoutSeconds * 1000;\n            } else {\n                timeoutMillis = Date.parse(retryAfterHeader) - Date.now();\n            }\n        }\n        // If the API asks us to wait a certain amount of time (and it's a reasonable amount),\n        // just do what it says, but otherwise calculate a default\n        if (!(timeoutMillis && 0 <= timeoutMillis && timeoutMillis < 60 * 1000)) {\n            const maxRetries = options.maxRetries ?? this.maxRetries;\n            timeoutMillis = this.calculateDefaultRetryTimeoutMillis(retriesRemaining, maxRetries);\n        }\n        await (0,_internal_utils_sleep_mjs__WEBPACK_IMPORTED_MODULE_3__.sleep)(timeoutMillis);\n        return this.makeRequest(options, retriesRemaining - 1, requestLogID);\n    }\n    calculateDefaultRetryTimeoutMillis(retriesRemaining, maxRetries) {\n        const initialRetryDelay = 0.5;\n        const maxRetryDelay = 8.0;\n        const numRetries = maxRetries - retriesRemaining;\n        // Apply exponential backoff, but not more than the max.\n        const sleepSeconds = Math.min(initialRetryDelay * Math.pow(2, numRetries), maxRetryDelay);\n        // Apply some jitter, take up to at most 25 percent of the retry time.\n        const jitter = 1 - Math.random() * 0.25;\n        return sleepSeconds * jitter * 1000;\n    }\n    async buildRequest(inputOptions, { retryCount = 0 } = {}) {\n        const options = {\n            ...inputOptions\n        };\n        const { method, path, query, defaultBaseURL } = options;\n        const url = this.buildURL(path, query, defaultBaseURL);\n        if (\"timeout\" in options) (0,_internal_utils_values_mjs__WEBPACK_IMPORTED_MODULE_2__.validatePositiveInteger)(\"timeout\", options.timeout);\n        options.timeout = options.timeout ?? this.timeout;\n        const { bodyHeaders, body } = this.buildBody({\n            options\n        });\n        const reqHeaders = await this.buildHeaders({\n            options: inputOptions,\n            method,\n            bodyHeaders,\n            retryCount\n        });\n        const req = {\n            method,\n            headers: reqHeaders,\n            ...options.signal && {\n                signal: options.signal\n            },\n            ...globalThis.ReadableStream && body instanceof globalThis.ReadableStream && {\n                duplex: \"half\"\n            },\n            ...body && {\n                body\n            },\n            ...this.fetchOptions ?? {},\n            ...options.fetchOptions ?? {}\n        };\n        return {\n            req,\n            url,\n            timeout: options.timeout\n        };\n    }\n    async buildHeaders({ options, method, bodyHeaders, retryCount }) {\n        let idempotencyHeaders = {};\n        if (this.idempotencyHeader && method !== \"get\") {\n            if (!options.idempotencyKey) options.idempotencyKey = this.defaultIdempotencyKey();\n            idempotencyHeaders[this.idempotencyHeader] = options.idempotencyKey;\n        }\n        const headers = (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_35__.buildHeaders)([\n            idempotencyHeaders,\n            {\n                Accept: \"application/json\",\n                \"User-Agent\": this.getUserAgent(),\n                \"X-Stainless-Retry-Count\": String(retryCount),\n                ...options.timeout ? {\n                    \"X-Stainless-Timeout\": String(Math.trunc(options.timeout / 1000))\n                } : {},\n                ...(0,_internal_detect_platform_mjs__WEBPACK_IMPORTED_MODULE_5__.getPlatformHeaders)(),\n                \"OpenAI-Organization\": this.organization,\n                \"OpenAI-Project\": this.project\n            },\n            await this.authHeaders(options),\n            this._options.defaultHeaders,\n            bodyHeaders,\n            options.headers\n        ]);\n        this.validateHeaders(headers);\n        return headers.values;\n    }\n    buildBody({ options: { body, headers: rawHeaders } }) {\n        if (!body) {\n            return {\n                bodyHeaders: undefined,\n                body: undefined\n            };\n        }\n        const headers = (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_35__.buildHeaders)([\n            rawHeaders\n        ]);\n        if (// Pass raw type verbatim\n        ArrayBuffer.isView(body) || body instanceof ArrayBuffer || body instanceof DataView || typeof body === \"string\" && // Preserve legacy string encoding behavior for now\n        headers.values.has(\"content-type\") || // `Blob` is superset of `File`\n        globalThis.Blob && body instanceof globalThis.Blob || // `FormData` -> `multipart/form-data`\n        body instanceof FormData || // `URLSearchParams` -> `application/x-www-form-urlencoded`\n        body instanceof URLSearchParams || // Send chunked stream (each chunk has own `length`)\n        globalThis.ReadableStream && body instanceof globalThis.ReadableStream) {\n            return {\n                bodyHeaders: undefined,\n                body: body\n            };\n        } else if (typeof body === \"object\" && (Symbol.asyncIterator in body || Symbol.iterator in body && \"next\" in body && typeof body.next === \"function\")) {\n            return {\n                bodyHeaders: undefined,\n                body: _internal_shims_mjs__WEBPACK_IMPORTED_MODULE_6__.ReadableStreamFrom(body)\n            };\n        } else {\n            return (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _OpenAI_encoder, \"f\").call(this, {\n                body,\n                headers\n            });\n        }\n    }\n}\n_a = OpenAI, _OpenAI_encoder = new WeakMap(), _OpenAI_instances = new WeakSet(), _OpenAI_baseURLOverridden = function _OpenAI_baseURLOverridden() {\n    return this.baseURL !== \"https://api.openai.com/v1\";\n};\nOpenAI.OpenAI = _a;\nOpenAI.DEFAULT_TIMEOUT = 600000; // 10 minutes\nOpenAI.OpenAIError = _core_error_mjs__WEBPACK_IMPORTED_MODULE_10__.OpenAIError;\nOpenAI.APIError = _core_error_mjs__WEBPACK_IMPORTED_MODULE_10__.APIError;\nOpenAI.APIConnectionError = _core_error_mjs__WEBPACK_IMPORTED_MODULE_10__.APIConnectionError;\nOpenAI.APIConnectionTimeoutError = _core_error_mjs__WEBPACK_IMPORTED_MODULE_10__.APIConnectionTimeoutError;\nOpenAI.APIUserAbortError = _core_error_mjs__WEBPACK_IMPORTED_MODULE_10__.APIUserAbortError;\nOpenAI.NotFoundError = _core_error_mjs__WEBPACK_IMPORTED_MODULE_10__.NotFoundError;\nOpenAI.ConflictError = _core_error_mjs__WEBPACK_IMPORTED_MODULE_10__.ConflictError;\nOpenAI.RateLimitError = _core_error_mjs__WEBPACK_IMPORTED_MODULE_10__.RateLimitError;\nOpenAI.BadRequestError = _core_error_mjs__WEBPACK_IMPORTED_MODULE_10__.BadRequestError;\nOpenAI.AuthenticationError = _core_error_mjs__WEBPACK_IMPORTED_MODULE_10__.AuthenticationError;\nOpenAI.InternalServerError = _core_error_mjs__WEBPACK_IMPORTED_MODULE_10__.InternalServerError;\nOpenAI.PermissionDeniedError = _core_error_mjs__WEBPACK_IMPORTED_MODULE_10__.PermissionDeniedError;\nOpenAI.UnprocessableEntityError = _core_error_mjs__WEBPACK_IMPORTED_MODULE_10__.UnprocessableEntityError;\nOpenAI.InvalidWebhookSignatureError = _core_error_mjs__WEBPACK_IMPORTED_MODULE_10__.InvalidWebhookSignatureError;\nOpenAI.toFile = _core_uploads_mjs__WEBPACK_IMPORTED_MODULE_12__.toFile;\nOpenAI.Completions = _resources_completions_mjs__WEBPACK_IMPORTED_MODULE_16__.Completions;\nOpenAI.Chat = _resources_chat_chat_mjs__WEBPACK_IMPORTED_MODULE_25__.Chat;\nOpenAI.Embeddings = _resources_embeddings_mjs__WEBPACK_IMPORTED_MODULE_17__.Embeddings;\nOpenAI.Files = _resources_files_mjs__WEBPACK_IMPORTED_MODULE_18__.Files;\nOpenAI.Images = _resources_images_mjs__WEBPACK_IMPORTED_MODULE_19__.Images;\nOpenAI.Audio = _resources_audio_audio_mjs__WEBPACK_IMPORTED_MODULE_23__.Audio;\nOpenAI.Moderations = _resources_moderations_mjs__WEBPACK_IMPORTED_MODULE_21__.Moderations;\nOpenAI.Models = _resources_models_mjs__WEBPACK_IMPORTED_MODULE_20__.Models;\nOpenAI.FineTuning = _resources_fine_tuning_fine_tuning_mjs__WEBPACK_IMPORTED_MODULE_29__.FineTuning;\nOpenAI.Graders = _resources_graders_graders_mjs__WEBPACK_IMPORTED_MODULE_30__.Graders;\nOpenAI.VectorStores = _resources_vector_stores_vector_stores_mjs__WEBPACK_IMPORTED_MODULE_34__.VectorStores;\nOpenAI.Webhooks = _resources_webhooks_mjs__WEBPACK_IMPORTED_MODULE_22__.Webhooks;\nOpenAI.Beta = _resources_beta_beta_mjs__WEBPACK_IMPORTED_MODULE_24__.Beta;\nOpenAI.Batches = _resources_batches_mjs__WEBPACK_IMPORTED_MODULE_15__.Batches;\nOpenAI.Uploads = _resources_uploads_uploads_mjs__WEBPACK_IMPORTED_MODULE_33__.Uploads;\nOpenAI.Responses = _resources_responses_responses_mjs__WEBPACK_IMPORTED_MODULE_32__.Responses;\nOpenAI.Realtime = _resources_realtime_realtime_mjs__WEBPACK_IMPORTED_MODULE_31__.Realtime;\nOpenAI.Conversations = _resources_conversations_conversations_mjs__WEBPACK_IMPORTED_MODULE_27__.Conversations;\nOpenAI.Evals = _resources_evals_evals_mjs__WEBPACK_IMPORTED_MODULE_28__.Evals;\nOpenAI.Containers = _resources_containers_containers_mjs__WEBPACK_IMPORTED_MODULE_26__.Containers; //# sourceMappingURL=client.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/client.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/core/api-promise.mjs":
/*!**************************************************!*\
  !*** ./node_modules/openai/core/api-promise.mjs ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   APIPromise: () => (/* binding */ APIPromise)\n/* harmony export */ });\n/* harmony import */ var _internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../internal/tslib.mjs */ \"(rsc)/./node_modules/openai/internal/tslib.mjs\");\n/* harmony import */ var _internal_parse_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../internal/parse.mjs */ \"(rsc)/./node_modules/openai/internal/parse.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nvar _APIPromise_client;\n\n\n/**\n * A subclass of `Promise` providing additional helper methods\n * for interacting with the SDK.\n */ class APIPromise extends Promise {\n    constructor(client, responsePromise, parseResponse = _internal_parse_mjs__WEBPACK_IMPORTED_MODULE_1__.defaultParseResponse){\n        super((resolve)=>{\n            // this is maybe a bit weird but this has to be a no-op to not implicitly\n            // parse the response body; instead .then, .catch, .finally are overridden\n            // to parse the response\n            resolve(null);\n        });\n        this.responsePromise = responsePromise;\n        this.parseResponse = parseResponse;\n        _APIPromise_client.set(this, void 0);\n        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _APIPromise_client, client, \"f\");\n    }\n    _thenUnwrap(transform) {\n        return new APIPromise((0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _APIPromise_client, \"f\"), this.responsePromise, async (client, props)=>(0,_internal_parse_mjs__WEBPACK_IMPORTED_MODULE_1__.addRequestID)(transform(await this.parseResponse(client, props), props), props.response));\n    }\n    /**\n     * Gets the raw `Response` instance instead of parsing the response\n     * data.\n     *\n     * If you want to parse the response body but still get the `Response`\n     * instance, you can use {@link withResponse()}.\n     *\n     * 👋 Getting the wrong TypeScript type for `Response`?\n     * Try setting `\"moduleResolution\": \"NodeNext\"` or add `\"lib\": [\"DOM\"]`\n     * to your `tsconfig.json`.\n     */ asResponse() {\n        return this.responsePromise.then((p)=>p.response);\n    }\n    /**\n     * Gets the parsed response data, the raw `Response` instance and the ID of the request,\n     * returned via the X-Request-ID header which is useful for debugging requests and reporting\n     * issues to OpenAI.\n     *\n     * If you just want to get the raw `Response` instance without parsing it,\n     * you can use {@link asResponse()}.\n     *\n     * 👋 Getting the wrong TypeScript type for `Response`?\n     * Try setting `\"moduleResolution\": \"NodeNext\"` or add `\"lib\": [\"DOM\"]`\n     * to your `tsconfig.json`.\n     */ async withResponse() {\n        const [data, response] = await Promise.all([\n            this.parse(),\n            this.asResponse()\n        ]);\n        return {\n            data,\n            response,\n            request_id: response.headers.get(\"x-request-id\")\n        };\n    }\n    parse() {\n        if (!this.parsedPromise) {\n            this.parsedPromise = this.responsePromise.then((data)=>this.parseResponse((0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _APIPromise_client, \"f\"), data));\n        }\n        return this.parsedPromise;\n    }\n    then(onfulfilled, onrejected) {\n        return this.parse().then(onfulfilled, onrejected);\n    }\n    catch(onrejected) {\n        return this.parse().catch(onrejected);\n    }\n    finally(onfinally) {\n        return this.parse().finally(onfinally);\n    }\n}\n_APIPromise_client = new WeakMap(); //# sourceMappingURL=api-promise.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvb3BlbmFpL2NvcmUvYXBpLXByb21pc2UubWpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLHNGQUFzRjtBQUN0RixJQUFJQTtBQUNtRjtBQUNYO0FBQzVFOzs7Q0FHQyxHQUNNLE1BQU1LLG1CQUFtQkM7SUFDNUJDLFlBQVlDLE1BQU0sRUFBRUMsZUFBZSxFQUFFQyxnQkFBZ0JQLHFFQUFvQixDQUFFO1FBQ3ZFLEtBQUssQ0FBQyxDQUFDUTtZQUNILHlFQUF5RTtZQUN6RSwwRUFBMEU7WUFDMUUsd0JBQXdCO1lBQ3hCQSxRQUFRO1FBQ1o7UUFDQSxJQUFJLENBQUNGLGVBQWUsR0FBR0E7UUFDdkIsSUFBSSxDQUFDQyxhQUFhLEdBQUdBO1FBQ3JCVixtQkFBbUJZLEdBQUcsQ0FBQyxJQUFJLEVBQUUsS0FBSztRQUNsQ1YsMkVBQXNCQSxDQUFDLElBQUksRUFBRUYsb0JBQW9CUSxRQUFRO0lBQzdEO0lBQ0FLLFlBQVlDLFNBQVMsRUFBRTtRQUNuQixPQUFPLElBQUlULFdBQVdKLDJFQUFzQkEsQ0FBQyxJQUFJLEVBQUVELG9CQUFvQixNQUFNLElBQUksQ0FBQ1MsZUFBZSxFQUFFLE9BQU9ELFFBQVFPLFFBQVVYLGlFQUFZQSxDQUFDVSxVQUFVLE1BQU0sSUFBSSxDQUFDSixhQUFhLENBQUNGLFFBQVFPLFFBQVFBLFFBQVFBLE1BQU1DLFFBQVE7SUFDdE47SUFDQTs7Ozs7Ozs7OztLQVVDLEdBQ0RDLGFBQWE7UUFDVCxPQUFPLElBQUksQ0FBQ1IsZUFBZSxDQUFDUyxJQUFJLENBQUMsQ0FBQ0MsSUFBTUEsRUFBRUgsUUFBUTtJQUN0RDtJQUNBOzs7Ozs7Ozs7OztLQVdDLEdBQ0QsTUFBTUksZUFBZTtRQUNqQixNQUFNLENBQUNDLE1BQU1MLFNBQVMsR0FBRyxNQUFNVixRQUFRZ0IsR0FBRyxDQUFDO1lBQUMsSUFBSSxDQUFDQyxLQUFLO1lBQUksSUFBSSxDQUFDTixVQUFVO1NBQUc7UUFDNUUsT0FBTztZQUFFSTtZQUFNTDtZQUFVUSxZQUFZUixTQUFTUyxPQUFPLENBQUNDLEdBQUcsQ0FBQztRQUFnQjtJQUM5RTtJQUNBSCxRQUFRO1FBQ0osSUFBSSxDQUFDLElBQUksQ0FBQ0ksYUFBYSxFQUFFO1lBQ3JCLElBQUksQ0FBQ0EsYUFBYSxHQUFHLElBQUksQ0FBQ2xCLGVBQWUsQ0FBQ1MsSUFBSSxDQUFDLENBQUNHLE9BQVMsSUFBSSxDQUFDWCxhQUFhLENBQUNULDJFQUFzQkEsQ0FBQyxJQUFJLEVBQUVELG9CQUFvQixNQUFNcUI7UUFDdkk7UUFDQSxPQUFPLElBQUksQ0FBQ00sYUFBYTtJQUM3QjtJQUNBVCxLQUFLVSxXQUFXLEVBQUVDLFVBQVUsRUFBRTtRQUMxQixPQUFPLElBQUksQ0FBQ04sS0FBSyxHQUFHTCxJQUFJLENBQUNVLGFBQWFDO0lBQzFDO0lBQ0FDLE1BQU1ELFVBQVUsRUFBRTtRQUNkLE9BQU8sSUFBSSxDQUFDTixLQUFLLEdBQUdPLEtBQUssQ0FBQ0Q7SUFDOUI7SUFDQUUsUUFBUUMsU0FBUyxFQUFFO1FBQ2YsT0FBTyxJQUFJLENBQUNULEtBQUssR0FBR1EsT0FBTyxDQUFDQztJQUNoQztBQUNKO0FBQ0FoQyxxQkFBcUIsSUFBSWlDLFdBQ3pCLHdDQUF3QyIsInNvdXJjZXMiOlsid2VicGFjazovL3N5c3RlbS1wcm9tcHQtdG9vbC13ZWIvLi9ub2RlX21vZHVsZXMvb3BlbmFpL2NvcmUvYXBpLXByb21pc2UubWpzPzY3ZWMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZSBnZW5lcmF0ZWQgZnJvbSBvdXIgT3BlbkFQSSBzcGVjIGJ5IFN0YWlubGVzcy4gU2VlIENPTlRSSUJVVElORy5tZCBmb3IgZGV0YWlscy5cbnZhciBfQVBJUHJvbWlzZV9jbGllbnQ7XG5pbXBvcnQgeyBfX2NsYXNzUHJpdmF0ZUZpZWxkR2V0LCBfX2NsYXNzUHJpdmF0ZUZpZWxkU2V0IH0gZnJvbSBcIi4uL2ludGVybmFsL3RzbGliLm1qc1wiO1xuaW1wb3J0IHsgZGVmYXVsdFBhcnNlUmVzcG9uc2UsIGFkZFJlcXVlc3RJRCwgfSBmcm9tIFwiLi4vaW50ZXJuYWwvcGFyc2UubWpzXCI7XG4vKipcbiAqIEEgc3ViY2xhc3Mgb2YgYFByb21pc2VgIHByb3ZpZGluZyBhZGRpdGlvbmFsIGhlbHBlciBtZXRob2RzXG4gKiBmb3IgaW50ZXJhY3Rpbmcgd2l0aCB0aGUgU0RLLlxuICovXG5leHBvcnQgY2xhc3MgQVBJUHJvbWlzZSBleHRlbmRzIFByb21pc2Uge1xuICAgIGNvbnN0cnVjdG9yKGNsaWVudCwgcmVzcG9uc2VQcm9taXNlLCBwYXJzZVJlc3BvbnNlID0gZGVmYXVsdFBhcnNlUmVzcG9uc2UpIHtcbiAgICAgICAgc3VwZXIoKHJlc29sdmUpID0+IHtcbiAgICAgICAgICAgIC8vIHRoaXMgaXMgbWF5YmUgYSBiaXQgd2VpcmQgYnV0IHRoaXMgaGFzIHRvIGJlIGEgbm8tb3AgdG8gbm90IGltcGxpY2l0bHlcbiAgICAgICAgICAgIC8vIHBhcnNlIHRoZSByZXNwb25zZSBib2R5OyBpbnN0ZWFkIC50aGVuLCAuY2F0Y2gsIC5maW5hbGx5IGFyZSBvdmVycmlkZGVuXG4gICAgICAgICAgICAvLyB0byBwYXJzZSB0aGUgcmVzcG9uc2VcbiAgICAgICAgICAgIHJlc29sdmUobnVsbCk7XG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLnJlc3BvbnNlUHJvbWlzZSA9IHJlc3BvbnNlUHJvbWlzZTtcbiAgICAgICAgdGhpcy5wYXJzZVJlc3BvbnNlID0gcGFyc2VSZXNwb25zZTtcbiAgICAgICAgX0FQSVByb21pc2VfY2xpZW50LnNldCh0aGlzLCB2b2lkIDApO1xuICAgICAgICBfX2NsYXNzUHJpdmF0ZUZpZWxkU2V0KHRoaXMsIF9BUElQcm9taXNlX2NsaWVudCwgY2xpZW50LCBcImZcIik7XG4gICAgfVxuICAgIF90aGVuVW53cmFwKHRyYW5zZm9ybSkge1xuICAgICAgICByZXR1cm4gbmV3IEFQSVByb21pc2UoX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfQVBJUHJvbWlzZV9jbGllbnQsIFwiZlwiKSwgdGhpcy5yZXNwb25zZVByb21pc2UsIGFzeW5jIChjbGllbnQsIHByb3BzKSA9PiBhZGRSZXF1ZXN0SUQodHJhbnNmb3JtKGF3YWl0IHRoaXMucGFyc2VSZXNwb25zZShjbGllbnQsIHByb3BzKSwgcHJvcHMpLCBwcm9wcy5yZXNwb25zZSkpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXRzIHRoZSByYXcgYFJlc3BvbnNlYCBpbnN0YW5jZSBpbnN0ZWFkIG9mIHBhcnNpbmcgdGhlIHJlc3BvbnNlXG4gICAgICogZGF0YS5cbiAgICAgKlxuICAgICAqIElmIHlvdSB3YW50IHRvIHBhcnNlIHRoZSByZXNwb25zZSBib2R5IGJ1dCBzdGlsbCBnZXQgdGhlIGBSZXNwb25zZWBcbiAgICAgKiBpbnN0YW5jZSwgeW91IGNhbiB1c2Uge0BsaW5rIHdpdGhSZXNwb25zZSgpfS5cbiAgICAgKlxuICAgICAqIPCfkYsgR2V0dGluZyB0aGUgd3JvbmcgVHlwZVNjcmlwdCB0eXBlIGZvciBgUmVzcG9uc2VgP1xuICAgICAqIFRyeSBzZXR0aW5nIGBcIm1vZHVsZVJlc29sdXRpb25cIjogXCJOb2RlTmV4dFwiYCBvciBhZGQgYFwibGliXCI6IFtcIkRPTVwiXWBcbiAgICAgKiB0byB5b3VyIGB0c2NvbmZpZy5qc29uYC5cbiAgICAgKi9cbiAgICBhc1Jlc3BvbnNlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5yZXNwb25zZVByb21pc2UudGhlbigocCkgPT4gcC5yZXNwb25zZSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldHMgdGhlIHBhcnNlZCByZXNwb25zZSBkYXRhLCB0aGUgcmF3IGBSZXNwb25zZWAgaW5zdGFuY2UgYW5kIHRoZSBJRCBvZiB0aGUgcmVxdWVzdCxcbiAgICAgKiByZXR1cm5lZCB2aWEgdGhlIFgtUmVxdWVzdC1JRCBoZWFkZXIgd2hpY2ggaXMgdXNlZnVsIGZvciBkZWJ1Z2dpbmcgcmVxdWVzdHMgYW5kIHJlcG9ydGluZ1xuICAgICAqIGlzc3VlcyB0byBPcGVuQUkuXG4gICAgICpcbiAgICAgKiBJZiB5b3UganVzdCB3YW50IHRvIGdldCB0aGUgcmF3IGBSZXNwb25zZWAgaW5zdGFuY2Ugd2l0aG91dCBwYXJzaW5nIGl0LFxuICAgICAqIHlvdSBjYW4gdXNlIHtAbGluayBhc1Jlc3BvbnNlKCl9LlxuICAgICAqXG4gICAgICog8J+RiyBHZXR0aW5nIHRoZSB3cm9uZyBUeXBlU2NyaXB0IHR5cGUgZm9yIGBSZXNwb25zZWA/XG4gICAgICogVHJ5IHNldHRpbmcgYFwibW9kdWxlUmVzb2x1dGlvblwiOiBcIk5vZGVOZXh0XCJgIG9yIGFkZCBgXCJsaWJcIjogW1wiRE9NXCJdYFxuICAgICAqIHRvIHlvdXIgYHRzY29uZmlnLmpzb25gLlxuICAgICAqL1xuICAgIGFzeW5jIHdpdGhSZXNwb25zZSgpIHtcbiAgICAgICAgY29uc3QgW2RhdGEsIHJlc3BvbnNlXSA9IGF3YWl0IFByb21pc2UuYWxsKFt0aGlzLnBhcnNlKCksIHRoaXMuYXNSZXNwb25zZSgpXSk7XG4gICAgICAgIHJldHVybiB7IGRhdGEsIHJlc3BvbnNlLCByZXF1ZXN0X2lkOiByZXNwb25zZS5oZWFkZXJzLmdldCgneC1yZXF1ZXN0LWlkJykgfTtcbiAgICB9XG4gICAgcGFyc2UoKSB7XG4gICAgICAgIGlmICghdGhpcy5wYXJzZWRQcm9taXNlKSB7XG4gICAgICAgICAgICB0aGlzLnBhcnNlZFByb21pc2UgPSB0aGlzLnJlc3BvbnNlUHJvbWlzZS50aGVuKChkYXRhKSA9PiB0aGlzLnBhcnNlUmVzcG9uc2UoX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfQVBJUHJvbWlzZV9jbGllbnQsIFwiZlwiKSwgZGF0YSkpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLnBhcnNlZFByb21pc2U7XG4gICAgfVxuICAgIHRoZW4ob25mdWxmaWxsZWQsIG9ucmVqZWN0ZWQpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucGFyc2UoKS50aGVuKG9uZnVsZmlsbGVkLCBvbnJlamVjdGVkKTtcbiAgICB9XG4gICAgY2F0Y2gob25yZWplY3RlZCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wYXJzZSgpLmNhdGNoKG9ucmVqZWN0ZWQpO1xuICAgIH1cbiAgICBmaW5hbGx5KG9uZmluYWxseSkge1xuICAgICAgICByZXR1cm4gdGhpcy5wYXJzZSgpLmZpbmFsbHkob25maW5hbGx5KTtcbiAgICB9XG59XG5fQVBJUHJvbWlzZV9jbGllbnQgPSBuZXcgV2Vha01hcCgpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBpLXByb21pc2UubWpzLm1hcCJdLCJuYW1lcyI6WyJfQVBJUHJvbWlzZV9jbGllbnQiLCJfX2NsYXNzUHJpdmF0ZUZpZWxkR2V0IiwiX19jbGFzc1ByaXZhdGVGaWVsZFNldCIsImRlZmF1bHRQYXJzZVJlc3BvbnNlIiwiYWRkUmVxdWVzdElEIiwiQVBJUHJvbWlzZSIsIlByb21pc2UiLCJjb25zdHJ1Y3RvciIsImNsaWVudCIsInJlc3BvbnNlUHJvbWlzZSIsInBhcnNlUmVzcG9uc2UiLCJyZXNvbHZlIiwic2V0IiwiX3RoZW5VbndyYXAiLCJ0cmFuc2Zvcm0iLCJwcm9wcyIsInJlc3BvbnNlIiwiYXNSZXNwb25zZSIsInRoZW4iLCJwIiwid2l0aFJlc3BvbnNlIiwiZGF0YSIsImFsbCIsInBhcnNlIiwicmVxdWVzdF9pZCIsImhlYWRlcnMiLCJnZXQiLCJwYXJzZWRQcm9taXNlIiwib25mdWxmaWxsZWQiLCJvbnJlamVjdGVkIiwiY2F0Y2giLCJmaW5hbGx5Iiwib25maW5hbGx5IiwiV2Vha01hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/core/api-promise.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/core/error.mjs":
/*!********************************************!*\
  !*** ./node_modules/openai/core/error.mjs ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   APIConnectionError: () => (/* binding */ APIConnectionError),\n/* harmony export */   APIConnectionTimeoutError: () => (/* binding */ APIConnectionTimeoutError),\n/* harmony export */   APIError: () => (/* binding */ APIError),\n/* harmony export */   APIUserAbortError: () => (/* binding */ APIUserAbortError),\n/* harmony export */   AuthenticationError: () => (/* binding */ AuthenticationError),\n/* harmony export */   BadRequestError: () => (/* binding */ BadRequestError),\n/* harmony export */   ConflictError: () => (/* binding */ ConflictError),\n/* harmony export */   ContentFilterFinishReasonError: () => (/* binding */ ContentFilterFinishReasonError),\n/* harmony export */   InternalServerError: () => (/* binding */ InternalServerError),\n/* harmony export */   InvalidWebhookSignatureError: () => (/* binding */ InvalidWebhookSignatureError),\n/* harmony export */   LengthFinishReasonError: () => (/* binding */ LengthFinishReasonError),\n/* harmony export */   NotFoundError: () => (/* binding */ NotFoundError),\n/* harmony export */   OpenAIError: () => (/* binding */ OpenAIError),\n/* harmony export */   PermissionDeniedError: () => (/* binding */ PermissionDeniedError),\n/* harmony export */   RateLimitError: () => (/* binding */ RateLimitError),\n/* harmony export */   UnprocessableEntityError: () => (/* binding */ UnprocessableEntityError)\n/* harmony export */ });\n/* harmony import */ var _internal_errors_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../internal/errors.mjs */ \"(rsc)/./node_modules/openai/internal/errors.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nclass OpenAIError extends Error {\n}\nclass APIError extends OpenAIError {\n    constructor(status, error, message, headers){\n        super(`${APIError.makeMessage(status, error, message)}`);\n        this.status = status;\n        this.headers = headers;\n        this.requestID = headers?.get(\"x-request-id\");\n        this.error = error;\n        const data = error;\n        this.code = data?.[\"code\"];\n        this.param = data?.[\"param\"];\n        this.type = data?.[\"type\"];\n    }\n    static makeMessage(status, error, message) {\n        const msg = error?.message ? typeof error.message === \"string\" ? error.message : JSON.stringify(error.message) : error ? JSON.stringify(error) : message;\n        if (status && msg) {\n            return `${status} ${msg}`;\n        }\n        if (status) {\n            return `${status} status code (no body)`;\n        }\n        if (msg) {\n            return msg;\n        }\n        return \"(no status code or body)\";\n    }\n    static generate(status, errorResponse, message, headers) {\n        if (!status || !headers) {\n            return new APIConnectionError({\n                message,\n                cause: (0,_internal_errors_mjs__WEBPACK_IMPORTED_MODULE_0__.castToError)(errorResponse)\n            });\n        }\n        const error = errorResponse?.[\"error\"];\n        if (status === 400) {\n            return new BadRequestError(status, error, message, headers);\n        }\n        if (status === 401) {\n            return new AuthenticationError(status, error, message, headers);\n        }\n        if (status === 403) {\n            return new PermissionDeniedError(status, error, message, headers);\n        }\n        if (status === 404) {\n            return new NotFoundError(status, error, message, headers);\n        }\n        if (status === 409) {\n            return new ConflictError(status, error, message, headers);\n        }\n        if (status === 422) {\n            return new UnprocessableEntityError(status, error, message, headers);\n        }\n        if (status === 429) {\n            return new RateLimitError(status, error, message, headers);\n        }\n        if (status >= 500) {\n            return new InternalServerError(status, error, message, headers);\n        }\n        return new APIError(status, error, message, headers);\n    }\n}\nclass APIUserAbortError extends APIError {\n    constructor({ message } = {}){\n        super(undefined, undefined, message || \"Request was aborted.\", undefined);\n    }\n}\nclass APIConnectionError extends APIError {\n    constructor({ message, cause }){\n        super(undefined, undefined, message || \"Connection error.\", undefined);\n        // in some environments the 'cause' property is already declared\n        // @ts-ignore\n        if (cause) this.cause = cause;\n    }\n}\nclass APIConnectionTimeoutError extends APIConnectionError {\n    constructor({ message } = {}){\n        super({\n            message: message ?? \"Request timed out.\"\n        });\n    }\n}\nclass BadRequestError extends APIError {\n}\nclass AuthenticationError extends APIError {\n}\nclass PermissionDeniedError extends APIError {\n}\nclass NotFoundError extends APIError {\n}\nclass ConflictError extends APIError {\n}\nclass UnprocessableEntityError extends APIError {\n}\nclass RateLimitError extends APIError {\n}\nclass InternalServerError extends APIError {\n}\nclass LengthFinishReasonError extends OpenAIError {\n    constructor(){\n        super(`Could not parse response content as the length limit was reached`);\n    }\n}\nclass ContentFilterFinishReasonError extends OpenAIError {\n    constructor(){\n        super(`Could not parse response content as the request was rejected by the content filter`);\n    }\n}\nclass InvalidWebhookSignatureError extends Error {\n    constructor(message){\n        super(message);\n    }\n} //# sourceMappingURL=error.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/core/error.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/core/pagination.mjs":
/*!*************************************************!*\
  !*** ./node_modules/openai/core/pagination.mjs ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AbstractPage: () => (/* binding */ AbstractPage),\n/* harmony export */   ConversationCursorPage: () => (/* binding */ ConversationCursorPage),\n/* harmony export */   CursorPage: () => (/* binding */ CursorPage),\n/* harmony export */   Page: () => (/* binding */ Page),\n/* harmony export */   PagePromise: () => (/* binding */ PagePromise)\n/* harmony export */ });\n/* harmony import */ var _internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../internal/tslib.mjs */ \"(rsc)/./node_modules/openai/internal/tslib.mjs\");\n/* harmony import */ var _error_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./error.mjs */ \"(rsc)/./node_modules/openai/core/error.mjs\");\n/* harmony import */ var _internal_parse_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../internal/parse.mjs */ \"(rsc)/./node_modules/openai/internal/parse.mjs\");\n/* harmony import */ var _api_promise_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./api-promise.mjs */ \"(rsc)/./node_modules/openai/core/api-promise.mjs\");\n/* harmony import */ var _internal_utils_values_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../internal/utils/values.mjs */ \"(rsc)/./node_modules/openai/internal/utils/values.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nvar _AbstractPage_client;\n\n\n\n\n\nclass AbstractPage {\n    constructor(client, response, body, options){\n        _AbstractPage_client.set(this, void 0);\n        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _AbstractPage_client, client, \"f\");\n        this.options = options;\n        this.response = response;\n        this.body = body;\n    }\n    hasNextPage() {\n        const items = this.getPaginatedItems();\n        if (!items.length) return false;\n        return this.nextPageRequestOptions() != null;\n    }\n    async getNextPage() {\n        const nextOptions = this.nextPageRequestOptions();\n        if (!nextOptions) {\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(\"No next page expected; please check `.hasNextPage()` before calling `.getNextPage()`.\");\n        }\n        return await (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AbstractPage_client, \"f\").requestAPIList(this.constructor, nextOptions);\n    }\n    async *iterPages() {\n        let page = this;\n        yield page;\n        while(page.hasNextPage()){\n            page = await page.getNextPage();\n            yield page;\n        }\n    }\n    async *[(_AbstractPage_client = new WeakMap(), Symbol.asyncIterator)]() {\n        for await (const page of this.iterPages()){\n            for (const item of page.getPaginatedItems()){\n                yield item;\n            }\n        }\n    }\n}\n/**\n * This subclass of Promise will resolve to an instantiated Page once the request completes.\n *\n * It also implements AsyncIterable to allow auto-paginating iteration on an unawaited list call, eg:\n *\n *    for await (const item of client.items.list()) {\n *      console.log(item)\n *    }\n */ class PagePromise extends _api_promise_mjs__WEBPACK_IMPORTED_MODULE_3__.APIPromise {\n    constructor(client, request, Page){\n        super(client, request, async (client, props)=>new Page(client, props.response, await (0,_internal_parse_mjs__WEBPACK_IMPORTED_MODULE_2__.defaultParseResponse)(client, props), props.options));\n    }\n    /**\n     * Allow auto-paginating iteration on an unawaited list call, eg:\n     *\n     *    for await (const item of client.items.list()) {\n     *      console.log(item)\n     *    }\n     */ async *[Symbol.asyncIterator]() {\n        const page = await this;\n        for await (const item of page){\n            yield item;\n        }\n    }\n}\n/**\n * Note: no pagination actually occurs yet, this is for forwards-compatibility.\n */ class Page extends AbstractPage {\n    constructor(client, response, body, options){\n        super(client, response, body, options);\n        this.data = body.data || [];\n        this.object = body.object;\n    }\n    getPaginatedItems() {\n        return this.data ?? [];\n    }\n    nextPageRequestOptions() {\n        return null;\n    }\n}\nclass CursorPage extends AbstractPage {\n    constructor(client, response, body, options){\n        super(client, response, body, options);\n        this.data = body.data || [];\n        this.has_more = body.has_more || false;\n    }\n    getPaginatedItems() {\n        return this.data ?? [];\n    }\n    hasNextPage() {\n        if (this.has_more === false) {\n            return false;\n        }\n        return super.hasNextPage();\n    }\n    nextPageRequestOptions() {\n        const data = this.getPaginatedItems();\n        const id = data[data.length - 1]?.id;\n        if (!id) {\n            return null;\n        }\n        return {\n            ...this.options,\n            query: {\n                ...(0,_internal_utils_values_mjs__WEBPACK_IMPORTED_MODULE_4__.maybeObj)(this.options.query),\n                after: id\n            }\n        };\n    }\n}\nclass ConversationCursorPage extends AbstractPage {\n    constructor(client, response, body, options){\n        super(client, response, body, options);\n        this.data = body.data || [];\n        this.has_more = body.has_more || false;\n        this.last_id = body.last_id || \"\";\n    }\n    getPaginatedItems() {\n        return this.data ?? [];\n    }\n    hasNextPage() {\n        if (this.has_more === false) {\n            return false;\n        }\n        return super.hasNextPage();\n    }\n    nextPageRequestOptions() {\n        const cursor = this.last_id;\n        if (!cursor) {\n            return null;\n        }\n        return {\n            ...this.options,\n            query: {\n                ...(0,_internal_utils_values_mjs__WEBPACK_IMPORTED_MODULE_4__.maybeObj)(this.options.query),\n                after: cursor\n            }\n        };\n    }\n} //# sourceMappingURL=pagination.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/core/pagination.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/core/resource.mjs":
/*!***********************************************!*\
  !*** ./node_modules/openai/core/resource.mjs ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   APIResource: () => (/* binding */ APIResource)\n/* harmony export */ });\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nclass APIResource {\n    constructor(client){\n        this._client = client;\n    }\n} //# sourceMappingURL=resource.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvb3BlbmFpL2NvcmUvcmVzb3VyY2UubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxzRkFBc0Y7QUFDL0UsTUFBTUE7SUFDVEMsWUFBWUMsTUFBTSxDQUFFO1FBQ2hCLElBQUksQ0FBQ0MsT0FBTyxHQUFHRDtJQUNuQjtBQUNKLEVBQ0EscUNBQXFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3lzdGVtLXByb21wdC10b29sLXdlYi8uL25vZGVfbW9kdWxlcy9vcGVuYWkvY29yZS9yZXNvdXJjZS5tanM/YmYyNCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlIGdlbmVyYXRlZCBmcm9tIG91ciBPcGVuQVBJIHNwZWMgYnkgU3RhaW5sZXNzLiBTZWUgQ09OVFJJQlVUSU5HLm1kIGZvciBkZXRhaWxzLlxuZXhwb3J0IGNsYXNzIEFQSVJlc291cmNlIHtcbiAgICBjb25zdHJ1Y3RvcihjbGllbnQpIHtcbiAgICAgICAgdGhpcy5fY2xpZW50ID0gY2xpZW50O1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlc291cmNlLm1qcy5tYXAiXSwibmFtZXMiOlsiQVBJUmVzb3VyY2UiLCJjb25zdHJ1Y3RvciIsImNsaWVudCIsIl9jbGllbnQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/core/resource.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/core/streaming.mjs":
/*!************************************************!*\
  !*** ./node_modules/openai/core/streaming.mjs ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Stream: () => (/* binding */ Stream),\n/* harmony export */   _iterSSEMessages: () => (/* binding */ _iterSSEMessages)\n/* harmony export */ });\n/* harmony import */ var _internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../internal/tslib.mjs */ \"(rsc)/./node_modules/openai/internal/tslib.mjs\");\n/* harmony import */ var _error_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./error.mjs */ \"(rsc)/./node_modules/openai/core/error.mjs\");\n/* harmony import */ var _internal_shims_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../internal/shims.mjs */ \"(rsc)/./node_modules/openai/internal/shims.mjs\");\n/* harmony import */ var _internal_decoders_line_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../internal/decoders/line.mjs */ \"(rsc)/./node_modules/openai/internal/decoders/line.mjs\");\n/* harmony import */ var _internal_errors_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../internal/errors.mjs */ \"(rsc)/./node_modules/openai/internal/errors.mjs\");\n/* harmony import */ var _internal_utils_bytes_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../internal/utils/bytes.mjs */ \"(rsc)/./node_modules/openai/internal/utils/bytes.mjs\");\n/* harmony import */ var _internal_utils_log_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../internal/utils/log.mjs */ \"(rsc)/./node_modules/openai/internal/utils/log.mjs\");\nvar _Stream_client;\n\n\n\n\n\n\n\n\n\nclass Stream {\n    constructor(iterator, controller, client){\n        this.iterator = iterator;\n        _Stream_client.set(this, void 0);\n        this.controller = controller;\n        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _Stream_client, client, \"f\");\n    }\n    static fromSSEResponse(response, controller, client) {\n        let consumed = false;\n        const logger = client ? (0,_internal_utils_log_mjs__WEBPACK_IMPORTED_MODULE_6__.loggerFor)(client) : console;\n        async function* iterator() {\n            if (consumed) {\n                throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(\"Cannot iterate over a consumed stream, use `.tee()` to split the stream.\");\n            }\n            consumed = true;\n            let done = false;\n            try {\n                for await (const sse of _iterSSEMessages(response, controller)){\n                    if (done) continue;\n                    if (sse.data.startsWith(\"[DONE]\")) {\n                        done = true;\n                        continue;\n                    }\n                    if (sse.event === null || !sse.event.startsWith(\"thread.\")) {\n                        let data;\n                        try {\n                            data = JSON.parse(sse.data);\n                        } catch (e) {\n                            logger.error(`Could not parse message into JSON:`, sse.data);\n                            logger.error(`From chunk:`, sse.raw);\n                            throw e;\n                        }\n                        if (data && data.error) {\n                            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.APIError(undefined, data.error, undefined, response.headers);\n                        }\n                        yield data;\n                    } else {\n                        let data;\n                        try {\n                            data = JSON.parse(sse.data);\n                        } catch (e) {\n                            console.error(`Could not parse message into JSON:`, sse.data);\n                            console.error(`From chunk:`, sse.raw);\n                            throw e;\n                        }\n                        // TODO: Is this where the error should be thrown?\n                        if (sse.event == \"error\") {\n                            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.APIError(undefined, data.error, data.message, undefined);\n                        }\n                        yield {\n                            event: sse.event,\n                            data: data\n                        };\n                    }\n                }\n                done = true;\n            } catch (e) {\n                // If the user calls `stream.controller.abort()`, we should exit without throwing.\n                if ((0,_internal_errors_mjs__WEBPACK_IMPORTED_MODULE_4__.isAbortError)(e)) return;\n                throw e;\n            } finally{\n                // If the user `break`s, abort the ongoing request.\n                if (!done) controller.abort();\n            }\n        }\n        return new Stream(iterator, controller, client);\n    }\n    /**\n     * Generates a Stream from a newline-separated ReadableStream\n     * where each item is a JSON value.\n     */ static fromReadableStream(readableStream, controller, client) {\n        let consumed = false;\n        async function* iterLines() {\n            const lineDecoder = new _internal_decoders_line_mjs__WEBPACK_IMPORTED_MODULE_3__.LineDecoder();\n            const iter = (0,_internal_shims_mjs__WEBPACK_IMPORTED_MODULE_2__.ReadableStreamToAsyncIterable)(readableStream);\n            for await (const chunk of iter){\n                for (const line of lineDecoder.decode(chunk)){\n                    yield line;\n                }\n            }\n            for (const line of lineDecoder.flush()){\n                yield line;\n            }\n        }\n        async function* iterator() {\n            if (consumed) {\n                throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(\"Cannot iterate over a consumed stream, use `.tee()` to split the stream.\");\n            }\n            consumed = true;\n            let done = false;\n            try {\n                for await (const line of iterLines()){\n                    if (done) continue;\n                    if (line) yield JSON.parse(line);\n                }\n                done = true;\n            } catch (e) {\n                // If the user calls `stream.controller.abort()`, we should exit without throwing.\n                if ((0,_internal_errors_mjs__WEBPACK_IMPORTED_MODULE_4__.isAbortError)(e)) return;\n                throw e;\n            } finally{\n                // If the user `break`s, abort the ongoing request.\n                if (!done) controller.abort();\n            }\n        }\n        return new Stream(iterator, controller, client);\n    }\n    [(_Stream_client = new WeakMap(), Symbol.asyncIterator)]() {\n        return this.iterator();\n    }\n    /**\n     * Splits the stream into two streams which can be\n     * independently read from at different speeds.\n     */ tee() {\n        const left = [];\n        const right = [];\n        const iterator = this.iterator();\n        const teeIterator = (queue)=>{\n            return {\n                next: ()=>{\n                    if (queue.length === 0) {\n                        const result = iterator.next();\n                        left.push(result);\n                        right.push(result);\n                    }\n                    return queue.shift();\n                }\n            };\n        };\n        return [\n            new Stream(()=>teeIterator(left), this.controller, (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _Stream_client, \"f\")),\n            new Stream(()=>teeIterator(right), this.controller, (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _Stream_client, \"f\"))\n        ];\n    }\n    /**\n     * Converts this stream to a newline-separated ReadableStream of\n     * JSON stringified values in the stream\n     * which can be turned back into a Stream with `Stream.fromReadableStream()`.\n     */ toReadableStream() {\n        const self = this;\n        let iter;\n        return (0,_internal_shims_mjs__WEBPACK_IMPORTED_MODULE_2__.makeReadableStream)({\n            async start () {\n                iter = self[Symbol.asyncIterator]();\n            },\n            async pull (ctrl) {\n                try {\n                    const { value, done } = await iter.next();\n                    if (done) return ctrl.close();\n                    const bytes = (0,_internal_utils_bytes_mjs__WEBPACK_IMPORTED_MODULE_5__.encodeUTF8)(JSON.stringify(value) + \"\\n\");\n                    ctrl.enqueue(bytes);\n                } catch (err) {\n                    ctrl.error(err);\n                }\n            },\n            async cancel () {\n                await iter.return?.();\n            }\n        });\n    }\n}\nasync function* _iterSSEMessages(response, controller) {\n    if (!response.body) {\n        controller.abort();\n        if (typeof globalThis.navigator !== \"undefined\" && globalThis.navigator.product === \"ReactNative\") {\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(`The default react-native fetch implementation does not support streaming. Please use expo/fetch: https://docs.expo.dev/versions/latest/sdk/expo/#expofetch-api`);\n        }\n        throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(`Attempted to iterate over a response with no body`);\n    }\n    const sseDecoder = new SSEDecoder();\n    const lineDecoder = new _internal_decoders_line_mjs__WEBPACK_IMPORTED_MODULE_3__.LineDecoder();\n    const iter = (0,_internal_shims_mjs__WEBPACK_IMPORTED_MODULE_2__.ReadableStreamToAsyncIterable)(response.body);\n    for await (const sseChunk of iterSSEChunks(iter)){\n        for (const line of lineDecoder.decode(sseChunk)){\n            const sse = sseDecoder.decode(line);\n            if (sse) yield sse;\n        }\n    }\n    for (const line of lineDecoder.flush()){\n        const sse = sseDecoder.decode(line);\n        if (sse) yield sse;\n    }\n}\n/**\n * Given an async iterable iterator, iterates over it and yields full\n * SSE chunks, i.e. yields when a double new-line is encountered.\n */ async function* iterSSEChunks(iterator) {\n    let data = new Uint8Array();\n    for await (const chunk of iterator){\n        if (chunk == null) {\n            continue;\n        }\n        const binaryChunk = chunk instanceof ArrayBuffer ? new Uint8Array(chunk) : typeof chunk === \"string\" ? (0,_internal_utils_bytes_mjs__WEBPACK_IMPORTED_MODULE_5__.encodeUTF8)(chunk) : chunk;\n        let newData = new Uint8Array(data.length + binaryChunk.length);\n        newData.set(data);\n        newData.set(binaryChunk, data.length);\n        data = newData;\n        let patternIndex;\n        while((patternIndex = (0,_internal_decoders_line_mjs__WEBPACK_IMPORTED_MODULE_3__.findDoubleNewlineIndex)(data)) !== -1){\n            yield data.slice(0, patternIndex);\n            data = data.slice(patternIndex);\n        }\n    }\n    if (data.length > 0) {\n        yield data;\n    }\n}\nclass SSEDecoder {\n    constructor(){\n        this.event = null;\n        this.data = [];\n        this.chunks = [];\n    }\n    decode(line) {\n        if (line.endsWith(\"\\r\")) {\n            line = line.substring(0, line.length - 1);\n        }\n        if (!line) {\n            // empty line and we didn't previously encounter any messages\n            if (!this.event && !this.data.length) return null;\n            const sse = {\n                event: this.event,\n                data: this.data.join(\"\\n\"),\n                raw: this.chunks\n            };\n            this.event = null;\n            this.data = [];\n            this.chunks = [];\n            return sse;\n        }\n        this.chunks.push(line);\n        if (line.startsWith(\":\")) {\n            return null;\n        }\n        let [fieldname, _, value] = partition(line, \":\");\n        if (value.startsWith(\" \")) {\n            value = value.substring(1);\n        }\n        if (fieldname === \"event\") {\n            this.event = value;\n        } else if (fieldname === \"data\") {\n            this.data.push(value);\n        }\n        return null;\n    }\n}\nfunction partition(str, delimiter) {\n    const index = str.indexOf(delimiter);\n    if (index !== -1) {\n        return [\n            str.substring(0, index),\n            delimiter,\n            str.substring(index + delimiter.length)\n        ];\n    }\n    return [\n        str,\n        \"\",\n        \"\"\n    ];\n} //# sourceMappingURL=streaming.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvb3BlbmFpL2NvcmUvc3RyZWFtaW5nLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBQSxJQUFJQTtBQUNtRjtBQUM3QztBQUNpQjtBQUN5QjtBQUNkO0FBQ2hCO0FBQ0c7QUFDSDtBQUNmO0FBQ2hDLE1BQU1ZO0lBQ1RDLFlBQVlDLFFBQVEsRUFBRUMsVUFBVSxFQUFFQyxNQUFNLENBQUU7UUFDdEMsSUFBSSxDQUFDRixRQUFRLEdBQUdBO1FBQ2hCZCxlQUFlaUIsR0FBRyxDQUFDLElBQUksRUFBRSxLQUFLO1FBQzlCLElBQUksQ0FBQ0YsVUFBVSxHQUFHQTtRQUNsQmIsMkVBQXNCQSxDQUFDLElBQUksRUFBRUYsZ0JBQWdCZ0IsUUFBUTtJQUN6RDtJQUNBLE9BQU9FLGdCQUFnQkMsUUFBUSxFQUFFSixVQUFVLEVBQUVDLE1BQU0sRUFBRTtRQUNqRCxJQUFJSSxXQUFXO1FBQ2YsTUFBTUMsU0FBU0wsU0FBU04sa0VBQVNBLENBQUNNLFVBQVVNO1FBQzVDLGdCQUFnQlI7WUFDWixJQUFJTSxVQUFVO2dCQUNWLE1BQU0sSUFBSWpCLG1EQUFXQSxDQUFDO1lBQzFCO1lBQ0FpQixXQUFXO1lBQ1gsSUFBSUcsT0FBTztZQUNYLElBQUk7Z0JBQ0EsV0FBVyxNQUFNQyxPQUFPQyxpQkFBaUJOLFVBQVVKLFlBQWE7b0JBQzVELElBQUlRLE1BQ0E7b0JBQ0osSUFBSUMsSUFBSUUsSUFBSSxDQUFDQyxVQUFVLENBQUMsV0FBVzt3QkFDL0JKLE9BQU87d0JBQ1A7b0JBQ0o7b0JBQ0EsSUFBSUMsSUFBSUksS0FBSyxLQUFLLFFBQVEsQ0FBQ0osSUFBSUksS0FBSyxDQUFDRCxVQUFVLENBQUMsWUFBWTt3QkFDeEQsSUFBSUQ7d0JBQ0osSUFBSTs0QkFDQUEsT0FBT0csS0FBS0MsS0FBSyxDQUFDTixJQUFJRSxJQUFJO3dCQUM5QixFQUNBLE9BQU9LLEdBQUc7NEJBQ05WLE9BQU9XLEtBQUssQ0FBQyxDQUFDLGtDQUFrQyxDQUFDLEVBQUVSLElBQUlFLElBQUk7NEJBQzNETCxPQUFPVyxLQUFLLENBQUMsQ0FBQyxXQUFXLENBQUMsRUFBRVIsSUFBSVMsR0FBRzs0QkFDbkMsTUFBTUY7d0JBQ1Y7d0JBQ0EsSUFBSUwsUUFBUUEsS0FBS00sS0FBSyxFQUFFOzRCQUNwQixNQUFNLElBQUlyQixnREFBUUEsQ0FBQ3VCLFdBQVdSLEtBQUtNLEtBQUssRUFBRUUsV0FBV2YsU0FBU2dCLE9BQU87d0JBQ3pFO3dCQUNBLE1BQU1UO29CQUNWLE9BQ0s7d0JBQ0QsSUFBSUE7d0JBQ0osSUFBSTs0QkFDQUEsT0FBT0csS0FBS0MsS0FBSyxDQUFDTixJQUFJRSxJQUFJO3dCQUM5QixFQUNBLE9BQU9LLEdBQUc7NEJBQ05ULFFBQVFVLEtBQUssQ0FBQyxDQUFDLGtDQUFrQyxDQUFDLEVBQUVSLElBQUlFLElBQUk7NEJBQzVESixRQUFRVSxLQUFLLENBQUMsQ0FBQyxXQUFXLENBQUMsRUFBRVIsSUFBSVMsR0FBRzs0QkFDcEMsTUFBTUY7d0JBQ1Y7d0JBQ0Esa0RBQWtEO3dCQUNsRCxJQUFJUCxJQUFJSSxLQUFLLElBQUksU0FBUzs0QkFDdEIsTUFBTSxJQUFJakIsZ0RBQVFBLENBQUN1QixXQUFXUixLQUFLTSxLQUFLLEVBQUVOLEtBQUtVLE9BQU8sRUFBRUY7d0JBQzVEO3dCQUNBLE1BQU07NEJBQUVOLE9BQU9KLElBQUlJLEtBQUs7NEJBQUVGLE1BQU1BO3dCQUFLO29CQUN6QztnQkFDSjtnQkFDQUgsT0FBTztZQUNYLEVBQ0EsT0FBT1EsR0FBRztnQkFDTixrRkFBa0Y7Z0JBQ2xGLElBQUl2QixrRUFBWUEsQ0FBQ3VCLElBQ2I7Z0JBQ0osTUFBTUE7WUFDVixTQUNRO2dCQUNKLG1EQUFtRDtnQkFDbkQsSUFBSSxDQUFDUixNQUNEUixXQUFXc0IsS0FBSztZQUN4QjtRQUNKO1FBQ0EsT0FBTyxJQUFJekIsT0FBT0UsVUFBVUMsWUFBWUM7SUFDNUM7SUFDQTs7O0tBR0MsR0FDRCxPQUFPc0IsbUJBQW1CQyxjQUFjLEVBQUV4QixVQUFVLEVBQUVDLE1BQU0sRUFBRTtRQUMxRCxJQUFJSSxXQUFXO1FBQ2YsZ0JBQWdCb0I7WUFDWixNQUFNQyxjQUFjLElBQUluQyxvRUFBV0E7WUFDbkMsTUFBTW9DLE9BQU9uQyxrRkFBNkJBLENBQUNnQztZQUMzQyxXQUFXLE1BQU1JLFNBQVNELEtBQU07Z0JBQzVCLEtBQUssTUFBTUUsUUFBUUgsWUFBWUksTUFBTSxDQUFDRixPQUFRO29CQUMxQyxNQUFNQztnQkFDVjtZQUNKO1lBQ0EsS0FBSyxNQUFNQSxRQUFRSCxZQUFZSyxLQUFLLEdBQUk7Z0JBQ3BDLE1BQU1GO1lBQ1Y7UUFDSjtRQUNBLGdCQUFnQjlCO1lBQ1osSUFBSU0sVUFBVTtnQkFDVixNQUFNLElBQUlqQixtREFBV0EsQ0FBQztZQUMxQjtZQUNBaUIsV0FBVztZQUNYLElBQUlHLE9BQU87WUFDWCxJQUFJO2dCQUNBLFdBQVcsTUFBTXFCLFFBQVFKLFlBQWE7b0JBQ2xDLElBQUlqQixNQUNBO29CQUNKLElBQUlxQixNQUNBLE1BQU1mLEtBQUtDLEtBQUssQ0FBQ2M7Z0JBQ3pCO2dCQUNBckIsT0FBTztZQUNYLEVBQ0EsT0FBT1EsR0FBRztnQkFDTixrRkFBa0Y7Z0JBQ2xGLElBQUl2QixrRUFBWUEsQ0FBQ3VCLElBQ2I7Z0JBQ0osTUFBTUE7WUFDVixTQUNRO2dCQUNKLG1EQUFtRDtnQkFDbkQsSUFBSSxDQUFDUixNQUNEUixXQUFXc0IsS0FBSztZQUN4QjtRQUNKO1FBQ0EsT0FBTyxJQUFJekIsT0FBT0UsVUFBVUMsWUFBWUM7SUFDNUM7SUFDQSxDQUFFaEIsQ0FBQUEsaUJBQWlCLElBQUkrQyxXQUFXQyxPQUFPQyxhQUFhLEVBQUUsR0FBRztRQUN2RCxPQUFPLElBQUksQ0FBQ25DLFFBQVE7SUFDeEI7SUFDQTs7O0tBR0MsR0FDRG9DLE1BQU07UUFDRixNQUFNQyxPQUFPLEVBQUU7UUFDZixNQUFNQyxRQUFRLEVBQUU7UUFDaEIsTUFBTXRDLFdBQVcsSUFBSSxDQUFDQSxRQUFRO1FBQzlCLE1BQU11QyxjQUFjLENBQUNDO1lBQ2pCLE9BQU87Z0JBQ0hDLE1BQU07b0JBQ0YsSUFBSUQsTUFBTUUsTUFBTSxLQUFLLEdBQUc7d0JBQ3BCLE1BQU1DLFNBQVMzQyxTQUFTeUMsSUFBSTt3QkFDNUJKLEtBQUtPLElBQUksQ0FBQ0Q7d0JBQ1ZMLE1BQU1NLElBQUksQ0FBQ0Q7b0JBQ2Y7b0JBQ0EsT0FBT0gsTUFBTUssS0FBSztnQkFDdEI7WUFDSjtRQUNKO1FBQ0EsT0FBTztZQUNILElBQUkvQyxPQUFPLElBQU15QyxZQUFZRixPQUFPLElBQUksQ0FBQ3BDLFVBQVUsRUFBRWQsMkVBQXNCQSxDQUFDLElBQUksRUFBRUQsZ0JBQWdCO1lBQ2xHLElBQUlZLE9BQU8sSUFBTXlDLFlBQVlELFFBQVEsSUFBSSxDQUFDckMsVUFBVSxFQUFFZCwyRUFBc0JBLENBQUMsSUFBSSxFQUFFRCxnQkFBZ0I7U0FDdEc7SUFDTDtJQUNBOzs7O0tBSUMsR0FDRDRELG1CQUFtQjtRQUNmLE1BQU1DLE9BQU8sSUFBSTtRQUNqQixJQUFJbkI7UUFDSixPQUFPdEMsdUVBQWtCQSxDQUFDO1lBQ3RCLE1BQU0wRDtnQkFDRnBCLE9BQU9tQixJQUFJLENBQUNiLE9BQU9DLGFBQWEsQ0FBQztZQUNyQztZQUNBLE1BQU1jLE1BQUtDLElBQUk7Z0JBQ1gsSUFBSTtvQkFDQSxNQUFNLEVBQUVDLEtBQUssRUFBRTFDLElBQUksRUFBRSxHQUFHLE1BQU1tQixLQUFLYSxJQUFJO29CQUN2QyxJQUFJaEMsTUFDQSxPQUFPeUMsS0FBS0UsS0FBSztvQkFDckIsTUFBTUMsUUFBUTFELHFFQUFVQSxDQUFDb0IsS0FBS3VDLFNBQVMsQ0FBQ0gsU0FBUztvQkFDakRELEtBQUtLLE9BQU8sQ0FBQ0Y7Z0JBQ2pCLEVBQ0EsT0FBT0csS0FBSztvQkFDUk4sS0FBS2hDLEtBQUssQ0FBQ3NDO2dCQUNmO1lBQ0o7WUFDQSxNQUFNQztnQkFDRixNQUFNN0IsS0FBSzhCLE1BQU07WUFDckI7UUFDSjtJQUNKO0FBQ0o7QUFDTyxnQkFBZ0IvQyxpQkFBaUJOLFFBQVEsRUFBRUosVUFBVTtJQUN4RCxJQUFJLENBQUNJLFNBQVNzRCxJQUFJLEVBQUU7UUFDaEIxRCxXQUFXc0IsS0FBSztRQUNoQixJQUFJLE9BQU9xQyxXQUFXQyxTQUFTLEtBQUssZUFDaENELFdBQVdDLFNBQVMsQ0FBQ0MsT0FBTyxLQUFLLGVBQWU7WUFDaEQsTUFBTSxJQUFJekUsbURBQVdBLENBQUMsQ0FBQyw4SkFBOEosQ0FBQztRQUMxTDtRQUNBLE1BQU0sSUFBSUEsbURBQVdBLENBQUMsQ0FBQyxpREFBaUQsQ0FBQztJQUM3RTtJQUNBLE1BQU0wRSxhQUFhLElBQUlDO0lBQ3ZCLE1BQU1yQyxjQUFjLElBQUluQyxvRUFBV0E7SUFDbkMsTUFBTW9DLE9BQU9uQyxrRkFBNkJBLENBQUNZLFNBQVNzRCxJQUFJO0lBQ3hELFdBQVcsTUFBTU0sWUFBWUMsY0FBY3RDLE1BQU87UUFDOUMsS0FBSyxNQUFNRSxRQUFRSCxZQUFZSSxNQUFNLENBQUNrQyxVQUFXO1lBQzdDLE1BQU12RCxNQUFNcUQsV0FBV2hDLE1BQU0sQ0FBQ0Q7WUFDOUIsSUFBSXBCLEtBQ0EsTUFBTUE7UUFDZDtJQUNKO0lBQ0EsS0FBSyxNQUFNb0IsUUFBUUgsWUFBWUssS0FBSyxHQUFJO1FBQ3BDLE1BQU10QixNQUFNcUQsV0FBV2hDLE1BQU0sQ0FBQ0Q7UUFDOUIsSUFBSXBCLEtBQ0EsTUFBTUE7SUFDZDtBQUNKO0FBQ0E7OztDQUdDLEdBQ0QsZ0JBQWdCd0QsY0FBY2xFLFFBQVE7SUFDbEMsSUFBSVksT0FBTyxJQUFJdUQ7SUFDZixXQUFXLE1BQU10QyxTQUFTN0IsU0FBVTtRQUNoQyxJQUFJNkIsU0FBUyxNQUFNO1lBQ2Y7UUFDSjtRQUNBLE1BQU11QyxjQUFjdkMsaUJBQWlCd0MsY0FBYyxJQUFJRixXQUFXdEMsU0FDNUQsT0FBT0EsVUFBVSxXQUFXbEMscUVBQVVBLENBQUNrQyxTQUNuQ0E7UUFDVixJQUFJeUMsVUFBVSxJQUFJSCxXQUFXdkQsS0FBSzhCLE1BQU0sR0FBRzBCLFlBQVkxQixNQUFNO1FBQzdENEIsUUFBUW5FLEdBQUcsQ0FBQ1M7UUFDWjBELFFBQVFuRSxHQUFHLENBQUNpRSxhQUFheEQsS0FBSzhCLE1BQU07UUFDcEM5QixPQUFPMEQ7UUFDUCxJQUFJQztRQUNKLE1BQU8sQ0FBQ0EsZUFBZWhGLG1GQUFzQkEsQ0FBQ3FCLEtBQUksTUFBTyxDQUFDLEVBQUc7WUFDekQsTUFBTUEsS0FBSzRELEtBQUssQ0FBQyxHQUFHRDtZQUNwQjNELE9BQU9BLEtBQUs0RCxLQUFLLENBQUNEO1FBQ3RCO0lBQ0o7SUFDQSxJQUFJM0QsS0FBSzhCLE1BQU0sR0FBRyxHQUFHO1FBQ2pCLE1BQU05QjtJQUNWO0FBQ0o7QUFDQSxNQUFNb0Q7SUFDRmpFLGFBQWM7UUFDVixJQUFJLENBQUNlLEtBQUssR0FBRztRQUNiLElBQUksQ0FBQ0YsSUFBSSxHQUFHLEVBQUU7UUFDZCxJQUFJLENBQUM2RCxNQUFNLEdBQUcsRUFBRTtJQUNwQjtJQUNBMUMsT0FBT0QsSUFBSSxFQUFFO1FBQ1QsSUFBSUEsS0FBSzRDLFFBQVEsQ0FBQyxPQUFPO1lBQ3JCNUMsT0FBT0EsS0FBSzZDLFNBQVMsQ0FBQyxHQUFHN0MsS0FBS1ksTUFBTSxHQUFHO1FBQzNDO1FBQ0EsSUFBSSxDQUFDWixNQUFNO1lBQ1AsNkRBQTZEO1lBQzdELElBQUksQ0FBQyxJQUFJLENBQUNoQixLQUFLLElBQUksQ0FBQyxJQUFJLENBQUNGLElBQUksQ0FBQzhCLE1BQU0sRUFDaEMsT0FBTztZQUNYLE1BQU1oQyxNQUFNO2dCQUNSSSxPQUFPLElBQUksQ0FBQ0EsS0FBSztnQkFDakJGLE1BQU0sSUFBSSxDQUFDQSxJQUFJLENBQUNnRSxJQUFJLENBQUM7Z0JBQ3JCekQsS0FBSyxJQUFJLENBQUNzRCxNQUFNO1lBQ3BCO1lBQ0EsSUFBSSxDQUFDM0QsS0FBSyxHQUFHO1lBQ2IsSUFBSSxDQUFDRixJQUFJLEdBQUcsRUFBRTtZQUNkLElBQUksQ0FBQzZELE1BQU0sR0FBRyxFQUFFO1lBQ2hCLE9BQU8vRDtRQUNYO1FBQ0EsSUFBSSxDQUFDK0QsTUFBTSxDQUFDN0IsSUFBSSxDQUFDZDtRQUNqQixJQUFJQSxLQUFLakIsVUFBVSxDQUFDLE1BQU07WUFDdEIsT0FBTztRQUNYO1FBQ0EsSUFBSSxDQUFDZ0UsV0FBV0MsR0FBRzNCLE1BQU0sR0FBRzRCLFVBQVVqRCxNQUFNO1FBQzVDLElBQUlxQixNQUFNdEMsVUFBVSxDQUFDLE1BQU07WUFDdkJzQyxRQUFRQSxNQUFNd0IsU0FBUyxDQUFDO1FBQzVCO1FBQ0EsSUFBSUUsY0FBYyxTQUFTO1lBQ3ZCLElBQUksQ0FBQy9ELEtBQUssR0FBR3FDO1FBQ2pCLE9BQ0ssSUFBSTBCLGNBQWMsUUFBUTtZQUMzQixJQUFJLENBQUNqRSxJQUFJLENBQUNnQyxJQUFJLENBQUNPO1FBQ25CO1FBQ0EsT0FBTztJQUNYO0FBQ0o7QUFDQSxTQUFTNEIsVUFBVUMsR0FBRyxFQUFFQyxTQUFTO0lBQzdCLE1BQU1DLFFBQVFGLElBQUlHLE9BQU8sQ0FBQ0Y7SUFDMUIsSUFBSUMsVUFBVSxDQUFDLEdBQUc7UUFDZCxPQUFPO1lBQUNGLElBQUlMLFNBQVMsQ0FBQyxHQUFHTztZQUFRRDtZQUFXRCxJQUFJTCxTQUFTLENBQUNPLFFBQVFELFVBQVV2QyxNQUFNO1NBQUU7SUFDeEY7SUFDQSxPQUFPO1FBQUNzQztRQUFLO1FBQUk7S0FBRztBQUN4QixFQUNBLHNDQUFzQyIsInNvdXJjZXMiOlsid2VicGFjazovL3N5c3RlbS1wcm9tcHQtdG9vbC13ZWIvLi9ub2RlX21vZHVsZXMvb3BlbmFpL2NvcmUvc3RyZWFtaW5nLm1qcz9jZmZlIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBfU3RyZWFtX2NsaWVudDtcbmltcG9ydCB7IF9fY2xhc3NQcml2YXRlRmllbGRHZXQsIF9fY2xhc3NQcml2YXRlRmllbGRTZXQgfSBmcm9tIFwiLi4vaW50ZXJuYWwvdHNsaWIubWpzXCI7XG5pbXBvcnQgeyBPcGVuQUlFcnJvciB9IGZyb20gXCIuL2Vycm9yLm1qc1wiO1xuaW1wb3J0IHsgbWFrZVJlYWRhYmxlU3RyZWFtIH0gZnJvbSBcIi4uL2ludGVybmFsL3NoaW1zLm1qc1wiO1xuaW1wb3J0IHsgZmluZERvdWJsZU5ld2xpbmVJbmRleCwgTGluZURlY29kZXIgfSBmcm9tIFwiLi4vaW50ZXJuYWwvZGVjb2RlcnMvbGluZS5tanNcIjtcbmltcG9ydCB7IFJlYWRhYmxlU3RyZWFtVG9Bc3luY0l0ZXJhYmxlIH0gZnJvbSBcIi4uL2ludGVybmFsL3NoaW1zLm1qc1wiO1xuaW1wb3J0IHsgaXNBYm9ydEVycm9yIH0gZnJvbSBcIi4uL2ludGVybmFsL2Vycm9ycy5tanNcIjtcbmltcG9ydCB7IGVuY29kZVVURjggfSBmcm9tIFwiLi4vaW50ZXJuYWwvdXRpbHMvYnl0ZXMubWpzXCI7XG5pbXBvcnQgeyBsb2dnZXJGb3IgfSBmcm9tIFwiLi4vaW50ZXJuYWwvdXRpbHMvbG9nLm1qc1wiO1xuaW1wb3J0IHsgQVBJRXJyb3IgfSBmcm9tIFwiLi9lcnJvci5tanNcIjtcbmV4cG9ydCBjbGFzcyBTdHJlYW0ge1xuICAgIGNvbnN0cnVjdG9yKGl0ZXJhdG9yLCBjb250cm9sbGVyLCBjbGllbnQpIHtcbiAgICAgICAgdGhpcy5pdGVyYXRvciA9IGl0ZXJhdG9yO1xuICAgICAgICBfU3RyZWFtX2NsaWVudC5zZXQodGhpcywgdm9pZCAwKTtcbiAgICAgICAgdGhpcy5jb250cm9sbGVyID0gY29udHJvbGxlcjtcbiAgICAgICAgX19jbGFzc1ByaXZhdGVGaWVsZFNldCh0aGlzLCBfU3RyZWFtX2NsaWVudCwgY2xpZW50LCBcImZcIik7XG4gICAgfVxuICAgIHN0YXRpYyBmcm9tU1NFUmVzcG9uc2UocmVzcG9uc2UsIGNvbnRyb2xsZXIsIGNsaWVudCkge1xuICAgICAgICBsZXQgY29uc3VtZWQgPSBmYWxzZTtcbiAgICAgICAgY29uc3QgbG9nZ2VyID0gY2xpZW50ID8gbG9nZ2VyRm9yKGNsaWVudCkgOiBjb25zb2xlO1xuICAgICAgICBhc3luYyBmdW5jdGlvbiogaXRlcmF0b3IoKSB7XG4gICAgICAgICAgICBpZiAoY29uc3VtZWQpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgT3BlbkFJRXJyb3IoJ0Nhbm5vdCBpdGVyYXRlIG92ZXIgYSBjb25zdW1lZCBzdHJlYW0sIHVzZSBgLnRlZSgpYCB0byBzcGxpdCB0aGUgc3RyZWFtLicpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3VtZWQgPSB0cnVlO1xuICAgICAgICAgICAgbGV0IGRvbmUgPSBmYWxzZTtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgZm9yIGF3YWl0IChjb25zdCBzc2Ugb2YgX2l0ZXJTU0VNZXNzYWdlcyhyZXNwb25zZSwgY29udHJvbGxlcikpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGRvbmUpXG4gICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHNzZS5kYXRhLnN0YXJ0c1dpdGgoJ1tET05FXScpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBkb25lID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGlmIChzc2UuZXZlbnQgPT09IG51bGwgfHwgIXNzZS5ldmVudC5zdGFydHNXaXRoKCd0aHJlYWQuJykpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBkYXRhO1xuICAgICAgICAgICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhID0gSlNPTi5wYXJzZShzc2UuZGF0YSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxvZ2dlci5lcnJvcihgQ291bGQgbm90IHBhcnNlIG1lc3NhZ2UgaW50byBKU09OOmAsIHNzZS5kYXRhKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsb2dnZXIuZXJyb3IoYEZyb20gY2h1bms6YCwgc3NlLnJhdyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhyb3cgZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChkYXRhICYmIGRhdGEuZXJyb3IpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgQVBJRXJyb3IodW5kZWZpbmVkLCBkYXRhLmVycm9yLCB1bmRlZmluZWQsIHJlc3BvbnNlLmhlYWRlcnMpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgeWllbGQgZGF0YTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBkYXRhO1xuICAgICAgICAgICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhID0gSlNPTi5wYXJzZShzc2UuZGF0YSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoYENvdWxkIG5vdCBwYXJzZSBtZXNzYWdlIGludG8gSlNPTjpgLCBzc2UuZGF0YSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihgRnJvbSBjaHVuazpgLCBzc2UucmF3KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aHJvdyBlO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gVE9ETzogSXMgdGhpcyB3aGVyZSB0aGUgZXJyb3Igc2hvdWxkIGJlIHRocm93bj9cbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzc2UuZXZlbnQgPT0gJ2Vycm9yJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBBUElFcnJvcih1bmRlZmluZWQsIGRhdGEuZXJyb3IsIGRhdGEubWVzc2FnZSwgdW5kZWZpbmVkKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHlpZWxkIHsgZXZlbnQ6IHNzZS5ldmVudCwgZGF0YTogZGF0YSB9O1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGRvbmUgPSB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgICAgICAvLyBJZiB0aGUgdXNlciBjYWxscyBgc3RyZWFtLmNvbnRyb2xsZXIuYWJvcnQoKWAsIHdlIHNob3VsZCBleGl0IHdpdGhvdXQgdGhyb3dpbmcuXG4gICAgICAgICAgICAgICAgaWYgKGlzQWJvcnRFcnJvcihlKSlcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgIHRocm93IGU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBmaW5hbGx5IHtcbiAgICAgICAgICAgICAgICAvLyBJZiB0aGUgdXNlciBgYnJlYWtgcywgYWJvcnQgdGhlIG9uZ29pbmcgcmVxdWVzdC5cbiAgICAgICAgICAgICAgICBpZiAoIWRvbmUpXG4gICAgICAgICAgICAgICAgICAgIGNvbnRyb2xsZXIuYWJvcnQoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbmV3IFN0cmVhbShpdGVyYXRvciwgY29udHJvbGxlciwgY2xpZW50KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogR2VuZXJhdGVzIGEgU3RyZWFtIGZyb20gYSBuZXdsaW5lLXNlcGFyYXRlZCBSZWFkYWJsZVN0cmVhbVxuICAgICAqIHdoZXJlIGVhY2ggaXRlbSBpcyBhIEpTT04gdmFsdWUuXG4gICAgICovXG4gICAgc3RhdGljIGZyb21SZWFkYWJsZVN0cmVhbShyZWFkYWJsZVN0cmVhbSwgY29udHJvbGxlciwgY2xpZW50KSB7XG4gICAgICAgIGxldCBjb25zdW1lZCA9IGZhbHNlO1xuICAgICAgICBhc3luYyBmdW5jdGlvbiogaXRlckxpbmVzKCkge1xuICAgICAgICAgICAgY29uc3QgbGluZURlY29kZXIgPSBuZXcgTGluZURlY29kZXIoKTtcbiAgICAgICAgICAgIGNvbnN0IGl0ZXIgPSBSZWFkYWJsZVN0cmVhbVRvQXN5bmNJdGVyYWJsZShyZWFkYWJsZVN0cmVhbSk7XG4gICAgICAgICAgICBmb3IgYXdhaXQgKGNvbnN0IGNodW5rIG9mIGl0ZXIpIHtcbiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IGxpbmUgb2YgbGluZURlY29kZXIuZGVjb2RlKGNodW5rKSkge1xuICAgICAgICAgICAgICAgICAgICB5aWVsZCBsaW5lO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGZvciAoY29uc3QgbGluZSBvZiBsaW5lRGVjb2Rlci5mbHVzaCgpKSB7XG4gICAgICAgICAgICAgICAgeWllbGQgbGluZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBhc3luYyBmdW5jdGlvbiogaXRlcmF0b3IoKSB7XG4gICAgICAgICAgICBpZiAoY29uc3VtZWQpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgT3BlbkFJRXJyb3IoJ0Nhbm5vdCBpdGVyYXRlIG92ZXIgYSBjb25zdW1lZCBzdHJlYW0sIHVzZSBgLnRlZSgpYCB0byBzcGxpdCB0aGUgc3RyZWFtLicpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3VtZWQgPSB0cnVlO1xuICAgICAgICAgICAgbGV0IGRvbmUgPSBmYWxzZTtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgZm9yIGF3YWl0IChjb25zdCBsaW5lIG9mIGl0ZXJMaW5lcygpKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChkb25lKVxuICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICAgICAgICAgIGlmIChsaW5lKVxuICAgICAgICAgICAgICAgICAgICAgICAgeWllbGQgSlNPTi5wYXJzZShsaW5lKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZG9uZSA9IHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICAgIC8vIElmIHRoZSB1c2VyIGNhbGxzIGBzdHJlYW0uY29udHJvbGxlci5hYm9ydCgpYCwgd2Ugc2hvdWxkIGV4aXQgd2l0aG91dCB0aHJvd2luZy5cbiAgICAgICAgICAgICAgICBpZiAoaXNBYm9ydEVycm9yKGUpKVxuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgdGhyb3cgZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGZpbmFsbHkge1xuICAgICAgICAgICAgICAgIC8vIElmIHRoZSB1c2VyIGBicmVha2BzLCBhYm9ydCB0aGUgb25nb2luZyByZXF1ZXN0LlxuICAgICAgICAgICAgICAgIGlmICghZG9uZSlcbiAgICAgICAgICAgICAgICAgICAgY29udHJvbGxlci5hYm9ydCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBuZXcgU3RyZWFtKGl0ZXJhdG9yLCBjb250cm9sbGVyLCBjbGllbnQpO1xuICAgIH1cbiAgICBbKF9TdHJlYW1fY2xpZW50ID0gbmV3IFdlYWtNYXAoKSwgU3ltYm9sLmFzeW5jSXRlcmF0b3IpXSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaXRlcmF0b3IoKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogU3BsaXRzIHRoZSBzdHJlYW0gaW50byB0d28gc3RyZWFtcyB3aGljaCBjYW4gYmVcbiAgICAgKiBpbmRlcGVuZGVudGx5IHJlYWQgZnJvbSBhdCBkaWZmZXJlbnQgc3BlZWRzLlxuICAgICAqL1xuICAgIHRlZSgpIHtcbiAgICAgICAgY29uc3QgbGVmdCA9IFtdO1xuICAgICAgICBjb25zdCByaWdodCA9IFtdO1xuICAgICAgICBjb25zdCBpdGVyYXRvciA9IHRoaXMuaXRlcmF0b3IoKTtcbiAgICAgICAgY29uc3QgdGVlSXRlcmF0b3IgPSAocXVldWUpID0+IHtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgbmV4dDogKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBpZiAocXVldWUubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCByZXN1bHQgPSBpdGVyYXRvci5uZXh0KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBsZWZ0LnB1c2gocmVzdWx0KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJpZ2h0LnB1c2gocmVzdWx0KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gcXVldWUuc2hpZnQoKTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfTtcbiAgICAgICAgcmV0dXJuIFtcbiAgICAgICAgICAgIG5ldyBTdHJlYW0oKCkgPT4gdGVlSXRlcmF0b3IobGVmdCksIHRoaXMuY29udHJvbGxlciwgX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfU3RyZWFtX2NsaWVudCwgXCJmXCIpKSxcbiAgICAgICAgICAgIG5ldyBTdHJlYW0oKCkgPT4gdGVlSXRlcmF0b3IocmlnaHQpLCB0aGlzLmNvbnRyb2xsZXIsIF9fY2xhc3NQcml2YXRlRmllbGRHZXQodGhpcywgX1N0cmVhbV9jbGllbnQsIFwiZlwiKSksXG4gICAgICAgIF07XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENvbnZlcnRzIHRoaXMgc3RyZWFtIHRvIGEgbmV3bGluZS1zZXBhcmF0ZWQgUmVhZGFibGVTdHJlYW0gb2ZcbiAgICAgKiBKU09OIHN0cmluZ2lmaWVkIHZhbHVlcyBpbiB0aGUgc3RyZWFtXG4gICAgICogd2hpY2ggY2FuIGJlIHR1cm5lZCBiYWNrIGludG8gYSBTdHJlYW0gd2l0aCBgU3RyZWFtLmZyb21SZWFkYWJsZVN0cmVhbSgpYC5cbiAgICAgKi9cbiAgICB0b1JlYWRhYmxlU3RyZWFtKCkge1xuICAgICAgICBjb25zdCBzZWxmID0gdGhpcztcbiAgICAgICAgbGV0IGl0ZXI7XG4gICAgICAgIHJldHVybiBtYWtlUmVhZGFibGVTdHJlYW0oe1xuICAgICAgICAgICAgYXN5bmMgc3RhcnQoKSB7XG4gICAgICAgICAgICAgICAgaXRlciA9IHNlbGZbU3ltYm9sLmFzeW5jSXRlcmF0b3JdKCk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgYXN5bmMgcHVsbChjdHJsKSB7XG4gICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgeyB2YWx1ZSwgZG9uZSB9ID0gYXdhaXQgaXRlci5uZXh0KCk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChkb25lKVxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGN0cmwuY2xvc2UoKTtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgYnl0ZXMgPSBlbmNvZGVVVEY4KEpTT04uc3RyaW5naWZ5KHZhbHVlKSArICdcXG4nKTtcbiAgICAgICAgICAgICAgICAgICAgY3RybC5lbnF1ZXVlKGJ5dGVzKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY2F0Y2ggKGVycikge1xuICAgICAgICAgICAgICAgICAgICBjdHJsLmVycm9yKGVycik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGFzeW5jIGNhbmNlbCgpIHtcbiAgICAgICAgICAgICAgICBhd2FpdCBpdGVyLnJldHVybj8uKCk7XG4gICAgICAgICAgICB9LFxuICAgICAgICB9KTtcbiAgICB9XG59XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24qIF9pdGVyU1NFTWVzc2FnZXMocmVzcG9uc2UsIGNvbnRyb2xsZXIpIHtcbiAgICBpZiAoIXJlc3BvbnNlLmJvZHkpIHtcbiAgICAgICAgY29udHJvbGxlci5hYm9ydCgpO1xuICAgICAgICBpZiAodHlwZW9mIGdsb2JhbFRoaXMubmF2aWdhdG9yICE9PSAndW5kZWZpbmVkJyAmJlxuICAgICAgICAgICAgZ2xvYmFsVGhpcy5uYXZpZ2F0b3IucHJvZHVjdCA9PT0gJ1JlYWN0TmF0aXZlJykge1xuICAgICAgICAgICAgdGhyb3cgbmV3IE9wZW5BSUVycm9yKGBUaGUgZGVmYXVsdCByZWFjdC1uYXRpdmUgZmV0Y2ggaW1wbGVtZW50YXRpb24gZG9lcyBub3Qgc3VwcG9ydCBzdHJlYW1pbmcuIFBsZWFzZSB1c2UgZXhwby9mZXRjaDogaHR0cHM6Ly9kb2NzLmV4cG8uZGV2L3ZlcnNpb25zL2xhdGVzdC9zZGsvZXhwby8jZXhwb2ZldGNoLWFwaWApO1xuICAgICAgICB9XG4gICAgICAgIHRocm93IG5ldyBPcGVuQUlFcnJvcihgQXR0ZW1wdGVkIHRvIGl0ZXJhdGUgb3ZlciBhIHJlc3BvbnNlIHdpdGggbm8gYm9keWApO1xuICAgIH1cbiAgICBjb25zdCBzc2VEZWNvZGVyID0gbmV3IFNTRURlY29kZXIoKTtcbiAgICBjb25zdCBsaW5lRGVjb2RlciA9IG5ldyBMaW5lRGVjb2RlcigpO1xuICAgIGNvbnN0IGl0ZXIgPSBSZWFkYWJsZVN0cmVhbVRvQXN5bmNJdGVyYWJsZShyZXNwb25zZS5ib2R5KTtcbiAgICBmb3IgYXdhaXQgKGNvbnN0IHNzZUNodW5rIG9mIGl0ZXJTU0VDaHVua3MoaXRlcikpIHtcbiAgICAgICAgZm9yIChjb25zdCBsaW5lIG9mIGxpbmVEZWNvZGVyLmRlY29kZShzc2VDaHVuaykpIHtcbiAgICAgICAgICAgIGNvbnN0IHNzZSA9IHNzZURlY29kZXIuZGVjb2RlKGxpbmUpO1xuICAgICAgICAgICAgaWYgKHNzZSlcbiAgICAgICAgICAgICAgICB5aWVsZCBzc2U7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZm9yIChjb25zdCBsaW5lIG9mIGxpbmVEZWNvZGVyLmZsdXNoKCkpIHtcbiAgICAgICAgY29uc3Qgc3NlID0gc3NlRGVjb2Rlci5kZWNvZGUobGluZSk7XG4gICAgICAgIGlmIChzc2UpXG4gICAgICAgICAgICB5aWVsZCBzc2U7XG4gICAgfVxufVxuLyoqXG4gKiBHaXZlbiBhbiBhc3luYyBpdGVyYWJsZSBpdGVyYXRvciwgaXRlcmF0ZXMgb3ZlciBpdCBhbmQgeWllbGRzIGZ1bGxcbiAqIFNTRSBjaHVua3MsIGkuZS4geWllbGRzIHdoZW4gYSBkb3VibGUgbmV3LWxpbmUgaXMgZW5jb3VudGVyZWQuXG4gKi9cbmFzeW5jIGZ1bmN0aW9uKiBpdGVyU1NFQ2h1bmtzKGl0ZXJhdG9yKSB7XG4gICAgbGV0IGRhdGEgPSBuZXcgVWludDhBcnJheSgpO1xuICAgIGZvciBhd2FpdCAoY29uc3QgY2h1bmsgb2YgaXRlcmF0b3IpIHtcbiAgICAgICAgaWYgKGNodW5rID09IG51bGwpIHtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGJpbmFyeUNodW5rID0gY2h1bmsgaW5zdGFuY2VvZiBBcnJheUJ1ZmZlciA/IG5ldyBVaW50OEFycmF5KGNodW5rKVxuICAgICAgICAgICAgOiB0eXBlb2YgY2h1bmsgPT09ICdzdHJpbmcnID8gZW5jb2RlVVRGOChjaHVuaylcbiAgICAgICAgICAgICAgICA6IGNodW5rO1xuICAgICAgICBsZXQgbmV3RGF0YSA9IG5ldyBVaW50OEFycmF5KGRhdGEubGVuZ3RoICsgYmluYXJ5Q2h1bmsubGVuZ3RoKTtcbiAgICAgICAgbmV3RGF0YS5zZXQoZGF0YSk7XG4gICAgICAgIG5ld0RhdGEuc2V0KGJpbmFyeUNodW5rLCBkYXRhLmxlbmd0aCk7XG4gICAgICAgIGRhdGEgPSBuZXdEYXRhO1xuICAgICAgICBsZXQgcGF0dGVybkluZGV4O1xuICAgICAgICB3aGlsZSAoKHBhdHRlcm5JbmRleCA9IGZpbmREb3VibGVOZXdsaW5lSW5kZXgoZGF0YSkpICE9PSAtMSkge1xuICAgICAgICAgICAgeWllbGQgZGF0YS5zbGljZSgwLCBwYXR0ZXJuSW5kZXgpO1xuICAgICAgICAgICAgZGF0YSA9IGRhdGEuc2xpY2UocGF0dGVybkluZGV4KTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBpZiAoZGF0YS5sZW5ndGggPiAwKSB7XG4gICAgICAgIHlpZWxkIGRhdGE7XG4gICAgfVxufVxuY2xhc3MgU1NFRGVjb2RlciB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMuZXZlbnQgPSBudWxsO1xuICAgICAgICB0aGlzLmRhdGEgPSBbXTtcbiAgICAgICAgdGhpcy5jaHVua3MgPSBbXTtcbiAgICB9XG4gICAgZGVjb2RlKGxpbmUpIHtcbiAgICAgICAgaWYgKGxpbmUuZW5kc1dpdGgoJ1xccicpKSB7XG4gICAgICAgICAgICBsaW5lID0gbGluZS5zdWJzdHJpbmcoMCwgbGluZS5sZW5ndGggLSAxKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIWxpbmUpIHtcbiAgICAgICAgICAgIC8vIGVtcHR5IGxpbmUgYW5kIHdlIGRpZG4ndCBwcmV2aW91c2x5IGVuY291bnRlciBhbnkgbWVzc2FnZXNcbiAgICAgICAgICAgIGlmICghdGhpcy5ldmVudCAmJiAhdGhpcy5kYXRhLmxlbmd0aClcbiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgICAgIGNvbnN0IHNzZSA9IHtcbiAgICAgICAgICAgICAgICBldmVudDogdGhpcy5ldmVudCxcbiAgICAgICAgICAgICAgICBkYXRhOiB0aGlzLmRhdGEuam9pbignXFxuJyksXG4gICAgICAgICAgICAgICAgcmF3OiB0aGlzLmNodW5rcyxcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICB0aGlzLmV2ZW50ID0gbnVsbDtcbiAgICAgICAgICAgIHRoaXMuZGF0YSA9IFtdO1xuICAgICAgICAgICAgdGhpcy5jaHVua3MgPSBbXTtcbiAgICAgICAgICAgIHJldHVybiBzc2U7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5jaHVua3MucHVzaChsaW5lKTtcbiAgICAgICAgaWYgKGxpbmUuc3RhcnRzV2l0aCgnOicpKSB7XG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgfVxuICAgICAgICBsZXQgW2ZpZWxkbmFtZSwgXywgdmFsdWVdID0gcGFydGl0aW9uKGxpbmUsICc6Jyk7XG4gICAgICAgIGlmICh2YWx1ZS5zdGFydHNXaXRoKCcgJykpIHtcbiAgICAgICAgICAgIHZhbHVlID0gdmFsdWUuc3Vic3RyaW5nKDEpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChmaWVsZG5hbWUgPT09ICdldmVudCcpIHtcbiAgICAgICAgICAgIHRoaXMuZXZlbnQgPSB2YWx1ZTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChmaWVsZG5hbWUgPT09ICdkYXRhJykge1xuICAgICAgICAgICAgdGhpcy5kYXRhLnB1c2godmFsdWUpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbn1cbmZ1bmN0aW9uIHBhcnRpdGlvbihzdHIsIGRlbGltaXRlcikge1xuICAgIGNvbnN0IGluZGV4ID0gc3RyLmluZGV4T2YoZGVsaW1pdGVyKTtcbiAgICBpZiAoaW5kZXggIT09IC0xKSB7XG4gICAgICAgIHJldHVybiBbc3RyLnN1YnN0cmluZygwLCBpbmRleCksIGRlbGltaXRlciwgc3RyLnN1YnN0cmluZyhpbmRleCArIGRlbGltaXRlci5sZW5ndGgpXTtcbiAgICB9XG4gICAgcmV0dXJuIFtzdHIsICcnLCAnJ107XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zdHJlYW1pbmcubWpzLm1hcCJdLCJuYW1lcyI6WyJfU3RyZWFtX2NsaWVudCIsIl9fY2xhc3NQcml2YXRlRmllbGRHZXQiLCJfX2NsYXNzUHJpdmF0ZUZpZWxkU2V0IiwiT3BlbkFJRXJyb3IiLCJtYWtlUmVhZGFibGVTdHJlYW0iLCJmaW5kRG91YmxlTmV3bGluZUluZGV4IiwiTGluZURlY29kZXIiLCJSZWFkYWJsZVN0cmVhbVRvQXN5bmNJdGVyYWJsZSIsImlzQWJvcnRFcnJvciIsImVuY29kZVVURjgiLCJsb2dnZXJGb3IiLCJBUElFcnJvciIsIlN0cmVhbSIsImNvbnN0cnVjdG9yIiwiaXRlcmF0b3IiLCJjb250cm9sbGVyIiwiY2xpZW50Iiwic2V0IiwiZnJvbVNTRVJlc3BvbnNlIiwicmVzcG9uc2UiLCJjb25zdW1lZCIsImxvZ2dlciIsImNvbnNvbGUiLCJkb25lIiwic3NlIiwiX2l0ZXJTU0VNZXNzYWdlcyIsImRhdGEiLCJzdGFydHNXaXRoIiwiZXZlbnQiLCJKU09OIiwicGFyc2UiLCJlIiwiZXJyb3IiLCJyYXciLCJ1bmRlZmluZWQiLCJoZWFkZXJzIiwibWVzc2FnZSIsImFib3J0IiwiZnJvbVJlYWRhYmxlU3RyZWFtIiwicmVhZGFibGVTdHJlYW0iLCJpdGVyTGluZXMiLCJsaW5lRGVjb2RlciIsIml0ZXIiLCJjaHVuayIsImxpbmUiLCJkZWNvZGUiLCJmbHVzaCIsIldlYWtNYXAiLCJTeW1ib2wiLCJhc3luY0l0ZXJhdG9yIiwidGVlIiwibGVmdCIsInJpZ2h0IiwidGVlSXRlcmF0b3IiLCJxdWV1ZSIsIm5leHQiLCJsZW5ndGgiLCJyZXN1bHQiLCJwdXNoIiwic2hpZnQiLCJ0b1JlYWRhYmxlU3RyZWFtIiwic2VsZiIsInN0YXJ0IiwicHVsbCIsImN0cmwiLCJ2YWx1ZSIsImNsb3NlIiwiYnl0ZXMiLCJzdHJpbmdpZnkiLCJlbnF1ZXVlIiwiZXJyIiwiY2FuY2VsIiwicmV0dXJuIiwiYm9keSIsImdsb2JhbFRoaXMiLCJuYXZpZ2F0b3IiLCJwcm9kdWN0Iiwic3NlRGVjb2RlciIsIlNTRURlY29kZXIiLCJzc2VDaHVuayIsIml0ZXJTU0VDaHVua3MiLCJVaW50OEFycmF5IiwiYmluYXJ5Q2h1bmsiLCJBcnJheUJ1ZmZlciIsIm5ld0RhdGEiLCJwYXR0ZXJuSW5kZXgiLCJzbGljZSIsImNodW5rcyIsImVuZHNXaXRoIiwic3Vic3RyaW5nIiwiam9pbiIsImZpZWxkbmFtZSIsIl8iLCJwYXJ0aXRpb24iLCJzdHIiLCJkZWxpbWl0ZXIiLCJpbmRleCIsImluZGV4T2YiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/core/streaming.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/core/uploads.mjs":
/*!**********************************************!*\
  !*** ./node_modules/openai/core/uploads.mjs ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   toFile: () => (/* reexport safe */ _internal_to_file_mjs__WEBPACK_IMPORTED_MODULE_0__.toFile)\n/* harmony export */ });\n/* harmony import */ var _internal_to_file_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../internal/to-file.mjs */ \"(rsc)/./node_modules/openai/internal/to-file.mjs\");\n //# sourceMappingURL=uploads.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvb3BlbmFpL2NvcmUvdXBsb2Fkcy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBaUQsQ0FDakQsb0NBQW9DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3lzdGVtLXByb21wdC10b29sLXdlYi8uL25vZGVfbW9kdWxlcy9vcGVuYWkvY29yZS91cGxvYWRzLm1qcz84ODdlIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7IHRvRmlsZSB9IGZyb20gXCIuLi9pbnRlcm5hbC90by1maWxlLm1qc1wiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXBsb2Fkcy5tanMubWFwIl0sIm5hbWVzIjpbInRvRmlsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/core/uploads.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/error.mjs":
/*!***************************************!*\
  !*** ./node_modules/openai/error.mjs ***!
  \***************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   APIConnectionError: () => (/* reexport safe */ _core_error_mjs__WEBPACK_IMPORTED_MODULE_0__.APIConnectionError),\n/* harmony export */   APIConnectionTimeoutError: () => (/* reexport safe */ _core_error_mjs__WEBPACK_IMPORTED_MODULE_0__.APIConnectionTimeoutError),\n/* harmony export */   APIError: () => (/* reexport safe */ _core_error_mjs__WEBPACK_IMPORTED_MODULE_0__.APIError),\n/* harmony export */   APIUserAbortError: () => (/* reexport safe */ _core_error_mjs__WEBPACK_IMPORTED_MODULE_0__.APIUserAbortError),\n/* harmony export */   AuthenticationError: () => (/* reexport safe */ _core_error_mjs__WEBPACK_IMPORTED_MODULE_0__.AuthenticationError),\n/* harmony export */   BadRequestError: () => (/* reexport safe */ _core_error_mjs__WEBPACK_IMPORTED_MODULE_0__.BadRequestError),\n/* harmony export */   ConflictError: () => (/* reexport safe */ _core_error_mjs__WEBPACK_IMPORTED_MODULE_0__.ConflictError),\n/* harmony export */   ContentFilterFinishReasonError: () => (/* reexport safe */ _core_error_mjs__WEBPACK_IMPORTED_MODULE_0__.ContentFilterFinishReasonError),\n/* harmony export */   InternalServerError: () => (/* reexport safe */ _core_error_mjs__WEBPACK_IMPORTED_MODULE_0__.InternalServerError),\n/* harmony export */   InvalidWebhookSignatureError: () => (/* reexport safe */ _core_error_mjs__WEBPACK_IMPORTED_MODULE_0__.InvalidWebhookSignatureError),\n/* harmony export */   LengthFinishReasonError: () => (/* reexport safe */ _core_error_mjs__WEBPACK_IMPORTED_MODULE_0__.LengthFinishReasonError),\n/* harmony export */   NotFoundError: () => (/* reexport safe */ _core_error_mjs__WEBPACK_IMPORTED_MODULE_0__.NotFoundError),\n/* harmony export */   OpenAIError: () => (/* reexport safe */ _core_error_mjs__WEBPACK_IMPORTED_MODULE_0__.OpenAIError),\n/* harmony export */   PermissionDeniedError: () => (/* reexport safe */ _core_error_mjs__WEBPACK_IMPORTED_MODULE_0__.PermissionDeniedError),\n/* harmony export */   RateLimitError: () => (/* reexport safe */ _core_error_mjs__WEBPACK_IMPORTED_MODULE_0__.RateLimitError),\n/* harmony export */   UnprocessableEntityError: () => (/* reexport safe */ _core_error_mjs__WEBPACK_IMPORTED_MODULE_0__.UnprocessableEntityError)\n/* harmony export */ });\n/* harmony import */ var _core_error_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core/error.mjs */ \"(rsc)/./node_modules/openai/core/error.mjs\");\n //# sourceMappingURL=error.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvb3BlbmFpL2Vycm9yLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFpQyxDQUNqQyxrQ0FBa0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zeXN0ZW0tcHJvbXB0LXRvb2wtd2ViLy4vbm9kZV9tb2R1bGVzL29wZW5haS9lcnJvci5tanM/ODdjOSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tIFwiLi9jb3JlL2Vycm9yLm1qc1wiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZXJyb3IubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/error.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/index.mjs":
/*!***************************************!*\
  !*** ./node_modules/openai/index.mjs ***!
  \***************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   APIConnectionError: () => (/* reexport safe */ _core_error_mjs__WEBPACK_IMPORTED_MODULE_4__.APIConnectionError),\n/* harmony export */   APIConnectionTimeoutError: () => (/* reexport safe */ _core_error_mjs__WEBPACK_IMPORTED_MODULE_4__.APIConnectionTimeoutError),\n/* harmony export */   APIError: () => (/* reexport safe */ _core_error_mjs__WEBPACK_IMPORTED_MODULE_4__.APIError),\n/* harmony export */   APIPromise: () => (/* reexport safe */ _core_api_promise_mjs__WEBPACK_IMPORTED_MODULE_2__.APIPromise),\n/* harmony export */   APIUserAbortError: () => (/* reexport safe */ _core_error_mjs__WEBPACK_IMPORTED_MODULE_4__.APIUserAbortError),\n/* harmony export */   AuthenticationError: () => (/* reexport safe */ _core_error_mjs__WEBPACK_IMPORTED_MODULE_4__.AuthenticationError),\n/* harmony export */   AzureOpenAI: () => (/* reexport safe */ _azure_mjs__WEBPACK_IMPORTED_MODULE_5__.AzureOpenAI),\n/* harmony export */   BadRequestError: () => (/* reexport safe */ _core_error_mjs__WEBPACK_IMPORTED_MODULE_4__.BadRequestError),\n/* harmony export */   ConflictError: () => (/* reexport safe */ _core_error_mjs__WEBPACK_IMPORTED_MODULE_4__.ConflictError),\n/* harmony export */   InternalServerError: () => (/* reexport safe */ _core_error_mjs__WEBPACK_IMPORTED_MODULE_4__.InternalServerError),\n/* harmony export */   InvalidWebhookSignatureError: () => (/* reexport safe */ _core_error_mjs__WEBPACK_IMPORTED_MODULE_4__.InvalidWebhookSignatureError),\n/* harmony export */   NotFoundError: () => (/* reexport safe */ _core_error_mjs__WEBPACK_IMPORTED_MODULE_4__.NotFoundError),\n/* harmony export */   OpenAI: () => (/* reexport safe */ _client_mjs__WEBPACK_IMPORTED_MODULE_0__.OpenAI),\n/* harmony export */   OpenAIError: () => (/* reexport safe */ _core_error_mjs__WEBPACK_IMPORTED_MODULE_4__.OpenAIError),\n/* harmony export */   PagePromise: () => (/* reexport safe */ _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_3__.PagePromise),\n/* harmony export */   PermissionDeniedError: () => (/* reexport safe */ _core_error_mjs__WEBPACK_IMPORTED_MODULE_4__.PermissionDeniedError),\n/* harmony export */   RateLimitError: () => (/* reexport safe */ _core_error_mjs__WEBPACK_IMPORTED_MODULE_4__.RateLimitError),\n/* harmony export */   UnprocessableEntityError: () => (/* reexport safe */ _core_error_mjs__WEBPACK_IMPORTED_MODULE_4__.UnprocessableEntityError),\n/* harmony export */   \"default\": () => (/* reexport safe */ _client_mjs__WEBPACK_IMPORTED_MODULE_0__.OpenAI),\n/* harmony export */   toFile: () => (/* reexport safe */ _core_uploads_mjs__WEBPACK_IMPORTED_MODULE_1__.toFile)\n/* harmony export */ });\n/* harmony import */ var _client_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./client.mjs */ \"(rsc)/./node_modules/openai/client.mjs\");\n/* harmony import */ var _core_uploads_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./core/uploads.mjs */ \"(rsc)/./node_modules/openai/core/uploads.mjs\");\n/* harmony import */ var _core_api_promise_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./core/api-promise.mjs */ \"(rsc)/./node_modules/openai/core/api-promise.mjs\");\n/* harmony import */ var _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./core/pagination.mjs */ \"(rsc)/./node_modules/openai/core/pagination.mjs\");\n/* harmony import */ var _core_error_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./core/error.mjs */ \"(rsc)/./node_modules/openai/core/error.mjs\");\n/* harmony import */ var _azure_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./azure.mjs */ \"(rsc)/./node_modules/openai/azure.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\n\n\n\n //# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvb3BlbmFpL2luZGV4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLHNGQUFzRjtBQUNyQztBQUNMO0FBQ1E7QUFDZDtBQUNjO0FBQ2dRO0FBQzFRLENBQzFDLGtDQUFrQyIsInNvdXJjZXMiOlsid2VicGFjazovL3N5c3RlbS1wcm9tcHQtdG9vbC13ZWIvLi9ub2RlX21vZHVsZXMvb3BlbmFpL2luZGV4Lm1qcz9hNTBjIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG5leHBvcnQgeyBPcGVuQUkgYXMgZGVmYXVsdCB9IGZyb20gXCIuL2NsaWVudC5tanNcIjtcbmV4cG9ydCB7IHRvRmlsZSB9IGZyb20gXCIuL2NvcmUvdXBsb2Fkcy5tanNcIjtcbmV4cG9ydCB7IEFQSVByb21pc2UgfSBmcm9tIFwiLi9jb3JlL2FwaS1wcm9taXNlLm1qc1wiO1xuZXhwb3J0IHsgT3BlbkFJIH0gZnJvbSBcIi4vY2xpZW50Lm1qc1wiO1xuZXhwb3J0IHsgUGFnZVByb21pc2UgfSBmcm9tIFwiLi9jb3JlL3BhZ2luYXRpb24ubWpzXCI7XG5leHBvcnQgeyBPcGVuQUlFcnJvciwgQVBJRXJyb3IsIEFQSUNvbm5lY3Rpb25FcnJvciwgQVBJQ29ubmVjdGlvblRpbWVvdXRFcnJvciwgQVBJVXNlckFib3J0RXJyb3IsIE5vdEZvdW5kRXJyb3IsIENvbmZsaWN0RXJyb3IsIFJhdGVMaW1pdEVycm9yLCBCYWRSZXF1ZXN0RXJyb3IsIEF1dGhlbnRpY2F0aW9uRXJyb3IsIEludGVybmFsU2VydmVyRXJyb3IsIFBlcm1pc3Npb25EZW5pZWRFcnJvciwgVW5wcm9jZXNzYWJsZUVudGl0eUVycm9yLCBJbnZhbGlkV2ViaG9va1NpZ25hdHVyZUVycm9yLCB9IGZyb20gXCIuL2NvcmUvZXJyb3IubWpzXCI7XG5leHBvcnQgeyBBenVyZU9wZW5BSSB9IGZyb20gXCIuL2F6dXJlLm1qc1wiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXgubWpzLm1hcCJdLCJuYW1lcyI6WyJPcGVuQUkiLCJkZWZhdWx0IiwidG9GaWxlIiwiQVBJUHJvbWlzZSIsIlBhZ2VQcm9taXNlIiwiT3BlbkFJRXJyb3IiLCJBUElFcnJvciIsIkFQSUNvbm5lY3Rpb25FcnJvciIsIkFQSUNvbm5lY3Rpb25UaW1lb3V0RXJyb3IiLCJBUElVc2VyQWJvcnRFcnJvciIsIk5vdEZvdW5kRXJyb3IiLCJDb25mbGljdEVycm9yIiwiUmF0ZUxpbWl0RXJyb3IiLCJCYWRSZXF1ZXN0RXJyb3IiLCJBdXRoZW50aWNhdGlvbkVycm9yIiwiSW50ZXJuYWxTZXJ2ZXJFcnJvciIsIlBlcm1pc3Npb25EZW5pZWRFcnJvciIsIlVucHJvY2Vzc2FibGVFbnRpdHlFcnJvciIsIkludmFsaWRXZWJob29rU2lnbmF0dXJlRXJyb3IiLCJBenVyZU9wZW5BSSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/index.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/internal/decoders/line.mjs":
/*!********************************************************!*\
  !*** ./node_modules/openai/internal/decoders/line.mjs ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LineDecoder: () => (/* binding */ LineDecoder),\n/* harmony export */   findDoubleNewlineIndex: () => (/* binding */ findDoubleNewlineIndex)\n/* harmony export */ });\n/* harmony import */ var _tslib_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tslib.mjs */ \"(rsc)/./node_modules/openai/internal/tslib.mjs\");\n/* harmony import */ var _utils_bytes_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/bytes.mjs */ \"(rsc)/./node_modules/openai/internal/utils/bytes.mjs\");\nvar _LineDecoder_buffer, _LineDecoder_carriageReturnIndex;\n\n\n/**\n * A re-implementation of httpx's `LineDecoder` in Python that handles incrementally\n * reading lines from text.\n *\n * https://github.com/encode/httpx/blob/920333ea98118e9cf617f246905d7b202510941c/httpx/_decoders.py#L258\n */ class LineDecoder {\n    constructor(){\n        _LineDecoder_buffer.set(this, void 0);\n        _LineDecoder_carriageReturnIndex.set(this, void 0);\n        (0,_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _LineDecoder_buffer, new Uint8Array(), \"f\");\n        (0,_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _LineDecoder_carriageReturnIndex, null, \"f\");\n    }\n    decode(chunk) {\n        if (chunk == null) {\n            return [];\n        }\n        const binaryChunk = chunk instanceof ArrayBuffer ? new Uint8Array(chunk) : typeof chunk === \"string\" ? (0,_utils_bytes_mjs__WEBPACK_IMPORTED_MODULE_1__.encodeUTF8)(chunk) : chunk;\n        (0,_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _LineDecoder_buffer, (0,_utils_bytes_mjs__WEBPACK_IMPORTED_MODULE_1__.concatBytes)([\n            (0,_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _LineDecoder_buffer, \"f\"),\n            binaryChunk\n        ]), \"f\");\n        const lines = [];\n        let patternIndex;\n        while((patternIndex = findNewlineIndex((0,_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _LineDecoder_buffer, \"f\"), (0,_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _LineDecoder_carriageReturnIndex, \"f\"))) != null){\n            if (patternIndex.carriage && (0,_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _LineDecoder_carriageReturnIndex, \"f\") == null) {\n                // skip until we either get a corresponding `\\n`, a new `\\r` or nothing\n                (0,_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _LineDecoder_carriageReturnIndex, patternIndex.index, \"f\");\n                continue;\n            }\n            // we got double \\r or \\rtext\\n\n            if ((0,_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _LineDecoder_carriageReturnIndex, \"f\") != null && (patternIndex.index !== (0,_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _LineDecoder_carriageReturnIndex, \"f\") + 1 || patternIndex.carriage)) {\n                lines.push((0,_utils_bytes_mjs__WEBPACK_IMPORTED_MODULE_1__.decodeUTF8)((0,_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _LineDecoder_buffer, \"f\").subarray(0, (0,_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _LineDecoder_carriageReturnIndex, \"f\") - 1)));\n                (0,_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _LineDecoder_buffer, (0,_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _LineDecoder_buffer, \"f\").subarray((0,_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _LineDecoder_carriageReturnIndex, \"f\")), \"f\");\n                (0,_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _LineDecoder_carriageReturnIndex, null, \"f\");\n                continue;\n            }\n            const endIndex = (0,_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _LineDecoder_carriageReturnIndex, \"f\") !== null ? patternIndex.preceding - 1 : patternIndex.preceding;\n            const line = (0,_utils_bytes_mjs__WEBPACK_IMPORTED_MODULE_1__.decodeUTF8)((0,_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _LineDecoder_buffer, \"f\").subarray(0, endIndex));\n            lines.push(line);\n            (0,_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _LineDecoder_buffer, (0,_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _LineDecoder_buffer, \"f\").subarray(patternIndex.index), \"f\");\n            (0,_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _LineDecoder_carriageReturnIndex, null, \"f\");\n        }\n        return lines;\n    }\n    flush() {\n        if (!(0,_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _LineDecoder_buffer, \"f\").length) {\n            return [];\n        }\n        return this.decode(\"\\n\");\n    }\n}\n_LineDecoder_buffer = new WeakMap(), _LineDecoder_carriageReturnIndex = new WeakMap();\n// prettier-ignore\nLineDecoder.NEWLINE_CHARS = new Set([\n    \"\\n\",\n    \"\\r\"\n]);\nLineDecoder.NEWLINE_REGEXP = /\\r\\n|[\\n\\r]/g;\n/**\n * This function searches the buffer for the end patterns, (\\r or \\n)\n * and returns an object with the index preceding the matched newline and the\n * index after the newline char. `null` is returned if no new line is found.\n *\n * ```ts\n * findNewLineIndex('abc\\ndef') -> { preceding: 2, index: 3 }\n * ```\n */ function findNewlineIndex(buffer, startIndex) {\n    const newline = 0x0a; // \\n\n    const carriage = 0x0d; // \\r\n    for(let i = startIndex ?? 0; i < buffer.length; i++){\n        if (buffer[i] === newline) {\n            return {\n                preceding: i,\n                index: i + 1,\n                carriage: false\n            };\n        }\n        if (buffer[i] === carriage) {\n            return {\n                preceding: i,\n                index: i + 1,\n                carriage: true\n            };\n        }\n    }\n    return null;\n}\nfunction findDoubleNewlineIndex(buffer) {\n    // This function searches the buffer for the end patterns (\\r\\r, \\n\\n, \\r\\n\\r\\n)\n    // and returns the index right after the first occurrence of any pattern,\n    // or -1 if none of the patterns are found.\n    const newline = 0x0a; // \\n\n    const carriage = 0x0d; // \\r\n    for(let i = 0; i < buffer.length - 1; i++){\n        if (buffer[i] === newline && buffer[i + 1] === newline) {\n            // \\n\\n\n            return i + 2;\n        }\n        if (buffer[i] === carriage && buffer[i + 1] === carriage) {\n            // \\r\\r\n            return i + 2;\n        }\n        if (buffer[i] === carriage && buffer[i + 1] === newline && i + 3 < buffer.length && buffer[i + 2] === carriage && buffer[i + 3] === newline) {\n            // \\r\\n\\r\\n\n            return i + 4;\n        }\n    }\n    return -1;\n} //# sourceMappingURL=line.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/internal/decoders/line.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/internal/detect-platform.mjs":
/*!**********************************************************!*\
  !*** ./node_modules/openai/internal/detect-platform.mjs ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getPlatformHeaders: () => (/* binding */ getPlatformHeaders),\n/* harmony export */   isRunningInBrowser: () => (/* binding */ isRunningInBrowser)\n/* harmony export */ });\n/* harmony import */ var _version_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../version.mjs */ \"(rsc)/./node_modules/openai/version.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nconst isRunningInBrowser = ()=>{\n    return(// @ts-ignore\n     false && // @ts-ignore\n    0);\n};\n/**\n * Note this does not detect 'browser'; for that, use getBrowserInfo().\n */ function getDetectedPlatform() {\n    if (typeof Deno !== \"undefined\" && Deno.build != null) {\n        return \"deno\";\n    }\n    if (typeof EdgeRuntime !== \"undefined\") {\n        return \"edge\";\n    }\n    if (Object.prototype.toString.call(typeof globalThis.process !== \"undefined\" ? globalThis.process : 0) === \"[object process]\") {\n        return \"node\";\n    }\n    return \"unknown\";\n}\nconst getPlatformProperties = ()=>{\n    const detectedPlatform = getDetectedPlatform();\n    if (detectedPlatform === \"deno\") {\n        return {\n            \"X-Stainless-Lang\": \"js\",\n            \"X-Stainless-Package-Version\": _version_mjs__WEBPACK_IMPORTED_MODULE_0__.VERSION,\n            \"X-Stainless-OS\": normalizePlatform(Deno.build.os),\n            \"X-Stainless-Arch\": normalizeArch(Deno.build.arch),\n            \"X-Stainless-Runtime\": \"deno\",\n            \"X-Stainless-Runtime-Version\": typeof Deno.version === \"string\" ? Deno.version : Deno.version?.deno ?? \"unknown\"\n        };\n    }\n    if (typeof EdgeRuntime !== \"undefined\") {\n        return {\n            \"X-Stainless-Lang\": \"js\",\n            \"X-Stainless-Package-Version\": _version_mjs__WEBPACK_IMPORTED_MODULE_0__.VERSION,\n            \"X-Stainless-OS\": \"Unknown\",\n            \"X-Stainless-Arch\": `other:${EdgeRuntime}`,\n            \"X-Stainless-Runtime\": \"edge\",\n            \"X-Stainless-Runtime-Version\": globalThis.process.version\n        };\n    }\n    // Check if Node.js\n    if (detectedPlatform === \"node\") {\n        return {\n            \"X-Stainless-Lang\": \"js\",\n            \"X-Stainless-Package-Version\": _version_mjs__WEBPACK_IMPORTED_MODULE_0__.VERSION,\n            \"X-Stainless-OS\": normalizePlatform(globalThis.process.platform ?? \"unknown\"),\n            \"X-Stainless-Arch\": normalizeArch(globalThis.process.arch ?? \"unknown\"),\n            \"X-Stainless-Runtime\": \"node\",\n            \"X-Stainless-Runtime-Version\": globalThis.process.version ?? \"unknown\"\n        };\n    }\n    const browserInfo = getBrowserInfo();\n    if (browserInfo) {\n        return {\n            \"X-Stainless-Lang\": \"js\",\n            \"X-Stainless-Package-Version\": _version_mjs__WEBPACK_IMPORTED_MODULE_0__.VERSION,\n            \"X-Stainless-OS\": \"Unknown\",\n            \"X-Stainless-Arch\": \"unknown\",\n            \"X-Stainless-Runtime\": `browser:${browserInfo.browser}`,\n            \"X-Stainless-Runtime-Version\": browserInfo.version\n        };\n    }\n    // TODO add support for Cloudflare workers, etc.\n    return {\n        \"X-Stainless-Lang\": \"js\",\n        \"X-Stainless-Package-Version\": _version_mjs__WEBPACK_IMPORTED_MODULE_0__.VERSION,\n        \"X-Stainless-OS\": \"Unknown\",\n        \"X-Stainless-Arch\": \"unknown\",\n        \"X-Stainless-Runtime\": \"unknown\",\n        \"X-Stainless-Runtime-Version\": \"unknown\"\n    };\n};\n// Note: modified from https://github.com/JS-DevTools/host-environment/blob/b1ab79ecde37db5d6e163c050e54fe7d287d7c92/src/isomorphic.browser.ts\nfunction getBrowserInfo() {\n    if (typeof navigator === \"undefined\" || !navigator) {\n        return null;\n    }\n    // NOTE: The order matters here!\n    const browserPatterns = [\n        {\n            key: \"edge\",\n            pattern: /Edge(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/\n        },\n        {\n            key: \"ie\",\n            pattern: /MSIE(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/\n        },\n        {\n            key: \"ie\",\n            pattern: /Trident(?:.*rv\\:(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/\n        },\n        {\n            key: \"chrome\",\n            pattern: /Chrome(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/\n        },\n        {\n            key: \"firefox\",\n            pattern: /Firefox(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/\n        },\n        {\n            key: \"safari\",\n            pattern: /(?:Version\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?(?:\\W+Mobile\\S*)?\\W+Safari/\n        }\n    ];\n    // Find the FIRST matching browser\n    for (const { key, pattern } of browserPatterns){\n        const match = pattern.exec(navigator.userAgent);\n        if (match) {\n            const major = match[1] || 0;\n            const minor = match[2] || 0;\n            const patch = match[3] || 0;\n            return {\n                browser: key,\n                version: `${major}.${minor}.${patch}`\n            };\n        }\n    }\n    return null;\n}\nconst normalizeArch = (arch)=>{\n    // Node docs:\n    // - https://nodejs.org/api/process.html#processarch\n    // Deno docs:\n    // - https://doc.deno.land/deno/stable/~/Deno.build\n    if (arch === \"x32\") return \"x32\";\n    if (arch === \"x86_64\" || arch === \"x64\") return \"x64\";\n    if (arch === \"arm\") return \"arm\";\n    if (arch === \"aarch64\" || arch === \"arm64\") return \"arm64\";\n    if (arch) return `other:${arch}`;\n    return \"unknown\";\n};\nconst normalizePlatform = (platform)=>{\n    // Node platforms:\n    // - https://nodejs.org/api/process.html#processplatform\n    // Deno platforms:\n    // - https://doc.deno.land/deno/stable/~/Deno.build\n    // - https://github.com/denoland/deno/issues/14799\n    platform = platform.toLowerCase();\n    // NOTE: this iOS check is untested and may not work\n    // Node does not work natively on IOS, there is a fork at\n    // https://github.com/nodejs-mobile/nodejs-mobile\n    // however it is unknown at the time of writing how to detect if it is running\n    if (platform.includes(\"ios\")) return \"iOS\";\n    if (platform === \"android\") return \"Android\";\n    if (platform === \"darwin\") return \"MacOS\";\n    if (platform === \"win32\") return \"Windows\";\n    if (platform === \"freebsd\") return \"FreeBSD\";\n    if (platform === \"openbsd\") return \"OpenBSD\";\n    if (platform === \"linux\") return \"Linux\";\n    if (platform) return `Other:${platform}`;\n    return \"Unknown\";\n};\nlet _platformHeaders;\nconst getPlatformHeaders = ()=>{\n    return _platformHeaders ?? (_platformHeaders = getPlatformProperties());\n}; //# sourceMappingURL=detect-platform.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/internal/detect-platform.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/internal/errors.mjs":
/*!*************************************************!*\
  !*** ./node_modules/openai/internal/errors.mjs ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   castToError: () => (/* binding */ castToError),\n/* harmony export */   isAbortError: () => (/* binding */ isAbortError)\n/* harmony export */ });\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nfunction isAbortError(err) {\n    return typeof err === \"object\" && err !== null && // Spec-compliant fetch implementations\n    (\"name\" in err && err.name === \"AbortError\" || // Expo fetch\n    \"message\" in err && String(err.message).includes(\"FetchRequestCanceledException\"));\n}\nconst castToError = (err)=>{\n    if (err instanceof Error) return err;\n    if (typeof err === \"object\" && err !== null) {\n        try {\n            if (Object.prototype.toString.call(err) === \"[object Error]\") {\n                // @ts-ignore - not all envs have native support for cause yet\n                const error = new Error(err.message, err.cause ? {\n                    cause: err.cause\n                } : {});\n                if (err.stack) error.stack = err.stack;\n                // @ts-ignore - not all envs have native support for cause yet\n                if (err.cause && !error.cause) error.cause = err.cause;\n                if (err.name) error.name = err.name;\n                return error;\n            }\n        } catch  {}\n        try {\n            return new Error(JSON.stringify(err));\n        } catch  {}\n    }\n    return new Error(err);\n}; //# sourceMappingURL=errors.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvb3BlbmFpL2ludGVybmFsL2Vycm9ycy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxzRkFBc0Y7QUFDL0UsU0FBU0EsYUFBYUMsR0FBRztJQUM1QixPQUFRLE9BQU9BLFFBQVEsWUFDbkJBLFFBQVEsUUFDUix1Q0FBdUM7SUFDdEMsV0FBV0EsT0FBT0EsSUFBSUMsSUFBSSxLQUFLLGdCQUM1QixhQUFhO0lBQ1osYUFBYUQsT0FBT0UsT0FBT0YsSUFBSUcsT0FBTyxFQUFFQyxRQUFRLENBQUMsZ0NBQWdDO0FBQzlGO0FBQ08sTUFBTUMsY0FBYyxDQUFDTDtJQUN4QixJQUFJQSxlQUFlTSxPQUNmLE9BQU9OO0lBQ1gsSUFBSSxPQUFPQSxRQUFRLFlBQVlBLFFBQVEsTUFBTTtRQUN6QyxJQUFJO1lBQ0EsSUFBSU8sT0FBT0MsU0FBUyxDQUFDQyxRQUFRLENBQUNDLElBQUksQ0FBQ1YsU0FBUyxrQkFBa0I7Z0JBQzFELDhEQUE4RDtnQkFDOUQsTUFBTVcsUUFBUSxJQUFJTCxNQUFNTixJQUFJRyxPQUFPLEVBQUVILElBQUlZLEtBQUssR0FBRztvQkFBRUEsT0FBT1osSUFBSVksS0FBSztnQkFBQyxJQUFJLENBQUM7Z0JBQ3pFLElBQUlaLElBQUlhLEtBQUssRUFDVEYsTUFBTUUsS0FBSyxHQUFHYixJQUFJYSxLQUFLO2dCQUMzQiw4REFBOEQ7Z0JBQzlELElBQUliLElBQUlZLEtBQUssSUFBSSxDQUFDRCxNQUFNQyxLQUFLLEVBQ3pCRCxNQUFNQyxLQUFLLEdBQUdaLElBQUlZLEtBQUs7Z0JBQzNCLElBQUlaLElBQUlDLElBQUksRUFDUlUsTUFBTVYsSUFBSSxHQUFHRCxJQUFJQyxJQUFJO2dCQUN6QixPQUFPVTtZQUNYO1FBQ0osRUFDQSxPQUFNLENBQUU7UUFDUixJQUFJO1lBQ0EsT0FBTyxJQUFJTCxNQUFNUSxLQUFLQyxTQUFTLENBQUNmO1FBQ3BDLEVBQ0EsT0FBTSxDQUFFO0lBQ1o7SUFDQSxPQUFPLElBQUlNLE1BQU1OO0FBQ3JCLEVBQUUsQ0FDRixtQ0FBbUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zeXN0ZW0tcHJvbXB0LXRvb2wtd2ViLy4vbm9kZV9tb2R1bGVzL29wZW5haS9pbnRlcm5hbC9lcnJvcnMubWpzP2FhZWUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZSBnZW5lcmF0ZWQgZnJvbSBvdXIgT3BlbkFQSSBzcGVjIGJ5IFN0YWlubGVzcy4gU2VlIENPTlRSSUJVVElORy5tZCBmb3IgZGV0YWlscy5cbmV4cG9ydCBmdW5jdGlvbiBpc0Fib3J0RXJyb3IoZXJyKSB7XG4gICAgcmV0dXJuICh0eXBlb2YgZXJyID09PSAnb2JqZWN0JyAmJlxuICAgICAgICBlcnIgIT09IG51bGwgJiZcbiAgICAgICAgLy8gU3BlYy1jb21wbGlhbnQgZmV0Y2ggaW1wbGVtZW50YXRpb25zXG4gICAgICAgICgoJ25hbWUnIGluIGVyciAmJiBlcnIubmFtZSA9PT0gJ0Fib3J0RXJyb3InKSB8fFxuICAgICAgICAgICAgLy8gRXhwbyBmZXRjaFxuICAgICAgICAgICAgKCdtZXNzYWdlJyBpbiBlcnIgJiYgU3RyaW5nKGVyci5tZXNzYWdlKS5pbmNsdWRlcygnRmV0Y2hSZXF1ZXN0Q2FuY2VsZWRFeGNlcHRpb24nKSkpKTtcbn1cbmV4cG9ydCBjb25zdCBjYXN0VG9FcnJvciA9IChlcnIpID0+IHtcbiAgICBpZiAoZXJyIGluc3RhbmNlb2YgRXJyb3IpXG4gICAgICAgIHJldHVybiBlcnI7XG4gICAgaWYgKHR5cGVvZiBlcnIgPT09ICdvYmplY3QnICYmIGVyciAhPT0gbnVsbCkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChlcnIpID09PSAnW29iamVjdCBFcnJvcl0nKSB7XG4gICAgICAgICAgICAgICAgLy8gQHRzLWlnbm9yZSAtIG5vdCBhbGwgZW52cyBoYXZlIG5hdGl2ZSBzdXBwb3J0IGZvciBjYXVzZSB5ZXRcbiAgICAgICAgICAgICAgICBjb25zdCBlcnJvciA9IG5ldyBFcnJvcihlcnIubWVzc2FnZSwgZXJyLmNhdXNlID8geyBjYXVzZTogZXJyLmNhdXNlIH0gOiB7fSk7XG4gICAgICAgICAgICAgICAgaWYgKGVyci5zdGFjaylcbiAgICAgICAgICAgICAgICAgICAgZXJyb3Iuc3RhY2sgPSBlcnIuc3RhY2s7XG4gICAgICAgICAgICAgICAgLy8gQHRzLWlnbm9yZSAtIG5vdCBhbGwgZW52cyBoYXZlIG5hdGl2ZSBzdXBwb3J0IGZvciBjYXVzZSB5ZXRcbiAgICAgICAgICAgICAgICBpZiAoZXJyLmNhdXNlICYmICFlcnJvci5jYXVzZSlcbiAgICAgICAgICAgICAgICAgICAgZXJyb3IuY2F1c2UgPSBlcnIuY2F1c2U7XG4gICAgICAgICAgICAgICAgaWYgKGVyci5uYW1lKVxuICAgICAgICAgICAgICAgICAgICBlcnJvci5uYW1lID0gZXJyLm5hbWU7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGVycm9yO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGNhdGNoIHsgfVxuICAgICAgICB0cnkge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBFcnJvcihKU09OLnN0cmluZ2lmeShlcnIpKTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCB7IH1cbiAgICB9XG4gICAgcmV0dXJuIG5ldyBFcnJvcihlcnIpO1xufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWVycm9ycy5tanMubWFwIl0sIm5hbWVzIjpbImlzQWJvcnRFcnJvciIsImVyciIsIm5hbWUiLCJTdHJpbmciLCJtZXNzYWdlIiwiaW5jbHVkZXMiLCJjYXN0VG9FcnJvciIsIkVycm9yIiwiT2JqZWN0IiwicHJvdG90eXBlIiwidG9TdHJpbmciLCJjYWxsIiwiZXJyb3IiLCJjYXVzZSIsInN0YWNrIiwiSlNPTiIsInN0cmluZ2lmeSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/internal/errors.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/internal/headers.mjs":
/*!**************************************************!*\
  !*** ./node_modules/openai/internal/headers.mjs ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   buildHeaders: () => (/* binding */ buildHeaders),\n/* harmony export */   isEmptyHeaders: () => (/* binding */ isEmptyHeaders)\n/* harmony export */ });\n/* harmony import */ var _utils_values_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/values.mjs */ \"(rsc)/./node_modules/openai/internal/utils/values.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nconst brand_privateNullableHeaders = /* @__PURE__ */ Symbol(\"brand.privateNullableHeaders\");\nfunction* iterateHeaders(headers) {\n    if (!headers) return;\n    if (brand_privateNullableHeaders in headers) {\n        const { values, nulls } = headers;\n        yield* values.entries();\n        for (const name of nulls){\n            yield [\n                name,\n                null\n            ];\n        }\n        return;\n    }\n    let shouldClear = false;\n    let iter;\n    if (headers instanceof Headers) {\n        iter = headers.entries();\n    } else if ((0,_utils_values_mjs__WEBPACK_IMPORTED_MODULE_0__.isReadonlyArray)(headers)) {\n        iter = headers;\n    } else {\n        shouldClear = true;\n        iter = Object.entries(headers ?? {});\n    }\n    for (let row of iter){\n        const name = row[0];\n        if (typeof name !== \"string\") throw new TypeError(\"expected header name to be a string\");\n        const values = (0,_utils_values_mjs__WEBPACK_IMPORTED_MODULE_0__.isReadonlyArray)(row[1]) ? row[1] : [\n            row[1]\n        ];\n        let didClear = false;\n        for (const value of values){\n            if (value === undefined) continue;\n            // Objects keys always overwrite older headers, they never append.\n            // Yield a null to clear the header before adding the new values.\n            if (shouldClear && !didClear) {\n                didClear = true;\n                yield [\n                    name,\n                    null\n                ];\n            }\n            yield [\n                name,\n                value\n            ];\n        }\n    }\n}\nconst buildHeaders = (newHeaders)=>{\n    const targetHeaders = new Headers();\n    const nullHeaders = new Set();\n    for (const headers of newHeaders){\n        const seenHeaders = new Set();\n        for (const [name, value] of iterateHeaders(headers)){\n            const lowerName = name.toLowerCase();\n            if (!seenHeaders.has(lowerName)) {\n                targetHeaders.delete(name);\n                seenHeaders.add(lowerName);\n            }\n            if (value === null) {\n                targetHeaders.delete(name);\n                nullHeaders.add(lowerName);\n            } else {\n                targetHeaders.append(name, value);\n                nullHeaders.delete(lowerName);\n            }\n        }\n    }\n    return {\n        [brand_privateNullableHeaders]: true,\n        values: targetHeaders,\n        nulls: nullHeaders\n    };\n};\nconst isEmptyHeaders = (headers)=>{\n    for (const _ of iterateHeaders(headers))return false;\n    return true;\n}; //# sourceMappingURL=headers.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvb3BlbmFpL2ludGVybmFsL2hlYWRlcnMubWpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLHNGQUFzRjtBQUNqQztBQUNyRCxNQUFNQywrQkFBK0IsYUFBYSxHQUFHQyxPQUFPO0FBQzVELFVBQVVDLGVBQWVDLE9BQU87SUFDNUIsSUFBSSxDQUFDQSxTQUNEO0lBQ0osSUFBSUgsZ0NBQWdDRyxTQUFTO1FBQ3pDLE1BQU0sRUFBRUMsTUFBTSxFQUFFQyxLQUFLLEVBQUUsR0FBR0Y7UUFDMUIsT0FBT0MsT0FBT0UsT0FBTztRQUNyQixLQUFLLE1BQU1DLFFBQVFGLE1BQU87WUFDdEIsTUFBTTtnQkFBQ0U7Z0JBQU07YUFBSztRQUN0QjtRQUNBO0lBQ0o7SUFDQSxJQUFJQyxjQUFjO0lBQ2xCLElBQUlDO0lBQ0osSUFBSU4sbUJBQW1CTyxTQUFTO1FBQzVCRCxPQUFPTixRQUFRRyxPQUFPO0lBQzFCLE9BQ0ssSUFBSVAsa0VBQWVBLENBQUNJLFVBQVU7UUFDL0JNLE9BQU9OO0lBQ1gsT0FDSztRQUNESyxjQUFjO1FBQ2RDLE9BQU9FLE9BQU9MLE9BQU8sQ0FBQ0gsV0FBVyxDQUFDO0lBQ3RDO0lBQ0EsS0FBSyxJQUFJUyxPQUFPSCxLQUFNO1FBQ2xCLE1BQU1GLE9BQU9LLEdBQUcsQ0FBQyxFQUFFO1FBQ25CLElBQUksT0FBT0wsU0FBUyxVQUNoQixNQUFNLElBQUlNLFVBQVU7UUFDeEIsTUFBTVQsU0FBU0wsa0VBQWVBLENBQUNhLEdBQUcsQ0FBQyxFQUFFLElBQUlBLEdBQUcsQ0FBQyxFQUFFLEdBQUc7WUFBQ0EsR0FBRyxDQUFDLEVBQUU7U0FBQztRQUMxRCxJQUFJRSxXQUFXO1FBQ2YsS0FBSyxNQUFNQyxTQUFTWCxPQUFRO1lBQ3hCLElBQUlXLFVBQVVDLFdBQ1Y7WUFDSixrRUFBa0U7WUFDbEUsaUVBQWlFO1lBQ2pFLElBQUlSLGVBQWUsQ0FBQ00sVUFBVTtnQkFDMUJBLFdBQVc7Z0JBQ1gsTUFBTTtvQkFBQ1A7b0JBQU07aUJBQUs7WUFDdEI7WUFDQSxNQUFNO2dCQUFDQTtnQkFBTVE7YUFBTTtRQUN2QjtJQUNKO0FBQ0o7QUFDTyxNQUFNRSxlQUFlLENBQUNDO0lBQ3pCLE1BQU1DLGdCQUFnQixJQUFJVDtJQUMxQixNQUFNVSxjQUFjLElBQUlDO0lBQ3hCLEtBQUssTUFBTWxCLFdBQVdlLFdBQVk7UUFDOUIsTUFBTUksY0FBYyxJQUFJRDtRQUN4QixLQUFLLE1BQU0sQ0FBQ2QsTUFBTVEsTUFBTSxJQUFJYixlQUFlQyxTQUFVO1lBQ2pELE1BQU1vQixZQUFZaEIsS0FBS2lCLFdBQVc7WUFDbEMsSUFBSSxDQUFDRixZQUFZRyxHQUFHLENBQUNGLFlBQVk7Z0JBQzdCSixjQUFjTyxNQUFNLENBQUNuQjtnQkFDckJlLFlBQVlLLEdBQUcsQ0FBQ0o7WUFDcEI7WUFDQSxJQUFJUixVQUFVLE1BQU07Z0JBQ2hCSSxjQUFjTyxNQUFNLENBQUNuQjtnQkFDckJhLFlBQVlPLEdBQUcsQ0FBQ0o7WUFDcEIsT0FDSztnQkFDREosY0FBY1MsTUFBTSxDQUFDckIsTUFBTVE7Z0JBQzNCSyxZQUFZTSxNQUFNLENBQUNIO1lBQ3ZCO1FBQ0o7SUFDSjtJQUNBLE9BQU87UUFBRSxDQUFDdkIsNkJBQTZCLEVBQUU7UUFBTUksUUFBUWU7UUFBZWQsT0FBT2U7SUFBWTtBQUM3RixFQUFFO0FBQ0ssTUFBTVMsaUJBQWlCLENBQUMxQjtJQUMzQixLQUFLLE1BQU0yQixLQUFLNUIsZUFBZUMsU0FDM0IsT0FBTztJQUNYLE9BQU87QUFDWCxFQUFFLENBQ0Ysb0NBQW9DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3lzdGVtLXByb21wdC10b29sLXdlYi8uL25vZGVfbW9kdWxlcy9vcGVuYWkvaW50ZXJuYWwvaGVhZGVycy5tanM/MTg0OCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlIGdlbmVyYXRlZCBmcm9tIG91ciBPcGVuQVBJIHNwZWMgYnkgU3RhaW5sZXNzLiBTZWUgQ09OVFJJQlVUSU5HLm1kIGZvciBkZXRhaWxzLlxuaW1wb3J0IHsgaXNSZWFkb25seUFycmF5IH0gZnJvbSBcIi4vdXRpbHMvdmFsdWVzLm1qc1wiO1xuY29uc3QgYnJhbmRfcHJpdmF0ZU51bGxhYmxlSGVhZGVycyA9IC8qIEBfX1BVUkVfXyAqLyBTeW1ib2woJ2JyYW5kLnByaXZhdGVOdWxsYWJsZUhlYWRlcnMnKTtcbmZ1bmN0aW9uKiBpdGVyYXRlSGVhZGVycyhoZWFkZXJzKSB7XG4gICAgaWYgKCFoZWFkZXJzKVxuICAgICAgICByZXR1cm47XG4gICAgaWYgKGJyYW5kX3ByaXZhdGVOdWxsYWJsZUhlYWRlcnMgaW4gaGVhZGVycykge1xuICAgICAgICBjb25zdCB7IHZhbHVlcywgbnVsbHMgfSA9IGhlYWRlcnM7XG4gICAgICAgIHlpZWxkKiB2YWx1ZXMuZW50cmllcygpO1xuICAgICAgICBmb3IgKGNvbnN0IG5hbWUgb2YgbnVsbHMpIHtcbiAgICAgICAgICAgIHlpZWxkIFtuYW1lLCBudWxsXTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGxldCBzaG91bGRDbGVhciA9IGZhbHNlO1xuICAgIGxldCBpdGVyO1xuICAgIGlmIChoZWFkZXJzIGluc3RhbmNlb2YgSGVhZGVycykge1xuICAgICAgICBpdGVyID0gaGVhZGVycy5lbnRyaWVzKCk7XG4gICAgfVxuICAgIGVsc2UgaWYgKGlzUmVhZG9ubHlBcnJheShoZWFkZXJzKSkge1xuICAgICAgICBpdGVyID0gaGVhZGVycztcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHNob3VsZENsZWFyID0gdHJ1ZTtcbiAgICAgICAgaXRlciA9IE9iamVjdC5lbnRyaWVzKGhlYWRlcnMgPz8ge30pO1xuICAgIH1cbiAgICBmb3IgKGxldCByb3cgb2YgaXRlcikge1xuICAgICAgICBjb25zdCBuYW1lID0gcm93WzBdO1xuICAgICAgICBpZiAodHlwZW9mIG5hbWUgIT09ICdzdHJpbmcnKVxuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignZXhwZWN0ZWQgaGVhZGVyIG5hbWUgdG8gYmUgYSBzdHJpbmcnKTtcbiAgICAgICAgY29uc3QgdmFsdWVzID0gaXNSZWFkb25seUFycmF5KHJvd1sxXSkgPyByb3dbMV0gOiBbcm93WzFdXTtcbiAgICAgICAgbGV0IGRpZENsZWFyID0gZmFsc2U7XG4gICAgICAgIGZvciAoY29uc3QgdmFsdWUgb2YgdmFsdWVzKSB7XG4gICAgICAgICAgICBpZiAodmFsdWUgPT09IHVuZGVmaW5lZClcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgIC8vIE9iamVjdHMga2V5cyBhbHdheXMgb3ZlcndyaXRlIG9sZGVyIGhlYWRlcnMsIHRoZXkgbmV2ZXIgYXBwZW5kLlxuICAgICAgICAgICAgLy8gWWllbGQgYSBudWxsIHRvIGNsZWFyIHRoZSBoZWFkZXIgYmVmb3JlIGFkZGluZyB0aGUgbmV3IHZhbHVlcy5cbiAgICAgICAgICAgIGlmIChzaG91bGRDbGVhciAmJiAhZGlkQ2xlYXIpIHtcbiAgICAgICAgICAgICAgICBkaWRDbGVhciA9IHRydWU7XG4gICAgICAgICAgICAgICAgeWllbGQgW25hbWUsIG51bGxdO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgeWllbGQgW25hbWUsIHZhbHVlXTtcbiAgICAgICAgfVxuICAgIH1cbn1cbmV4cG9ydCBjb25zdCBidWlsZEhlYWRlcnMgPSAobmV3SGVhZGVycykgPT4ge1xuICAgIGNvbnN0IHRhcmdldEhlYWRlcnMgPSBuZXcgSGVhZGVycygpO1xuICAgIGNvbnN0IG51bGxIZWFkZXJzID0gbmV3IFNldCgpO1xuICAgIGZvciAoY29uc3QgaGVhZGVycyBvZiBuZXdIZWFkZXJzKSB7XG4gICAgICAgIGNvbnN0IHNlZW5IZWFkZXJzID0gbmV3IFNldCgpO1xuICAgICAgICBmb3IgKGNvbnN0IFtuYW1lLCB2YWx1ZV0gb2YgaXRlcmF0ZUhlYWRlcnMoaGVhZGVycykpIHtcbiAgICAgICAgICAgIGNvbnN0IGxvd2VyTmFtZSA9IG5hbWUudG9Mb3dlckNhc2UoKTtcbiAgICAgICAgICAgIGlmICghc2VlbkhlYWRlcnMuaGFzKGxvd2VyTmFtZSkpIHtcbiAgICAgICAgICAgICAgICB0YXJnZXRIZWFkZXJzLmRlbGV0ZShuYW1lKTtcbiAgICAgICAgICAgICAgICBzZWVuSGVhZGVycy5hZGQobG93ZXJOYW1lKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh2YWx1ZSA9PT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIHRhcmdldEhlYWRlcnMuZGVsZXRlKG5hbWUpO1xuICAgICAgICAgICAgICAgIG51bGxIZWFkZXJzLmFkZChsb3dlck5hbWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgdGFyZ2V0SGVhZGVycy5hcHBlbmQobmFtZSwgdmFsdWUpO1xuICAgICAgICAgICAgICAgIG51bGxIZWFkZXJzLmRlbGV0ZShsb3dlck5hbWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB7IFticmFuZF9wcml2YXRlTnVsbGFibGVIZWFkZXJzXTogdHJ1ZSwgdmFsdWVzOiB0YXJnZXRIZWFkZXJzLCBudWxsczogbnVsbEhlYWRlcnMgfTtcbn07XG5leHBvcnQgY29uc3QgaXNFbXB0eUhlYWRlcnMgPSAoaGVhZGVycykgPT4ge1xuICAgIGZvciAoY29uc3QgXyBvZiBpdGVyYXRlSGVhZGVycyhoZWFkZXJzKSlcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIHJldHVybiB0cnVlO1xufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWhlYWRlcnMubWpzLm1hcCJdLCJuYW1lcyI6WyJpc1JlYWRvbmx5QXJyYXkiLCJicmFuZF9wcml2YXRlTnVsbGFibGVIZWFkZXJzIiwiU3ltYm9sIiwiaXRlcmF0ZUhlYWRlcnMiLCJoZWFkZXJzIiwidmFsdWVzIiwibnVsbHMiLCJlbnRyaWVzIiwibmFtZSIsInNob3VsZENsZWFyIiwiaXRlciIsIkhlYWRlcnMiLCJPYmplY3QiLCJyb3ciLCJUeXBlRXJyb3IiLCJkaWRDbGVhciIsInZhbHVlIiwidW5kZWZpbmVkIiwiYnVpbGRIZWFkZXJzIiwibmV3SGVhZGVycyIsInRhcmdldEhlYWRlcnMiLCJudWxsSGVhZGVycyIsIlNldCIsInNlZW5IZWFkZXJzIiwibG93ZXJOYW1lIiwidG9Mb3dlckNhc2UiLCJoYXMiLCJkZWxldGUiLCJhZGQiLCJhcHBlbmQiLCJpc0VtcHR5SGVhZGVycyIsIl8iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/internal/headers.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/internal/parse.mjs":
/*!************************************************!*\
  !*** ./node_modules/openai/internal/parse.mjs ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addRequestID: () => (/* binding */ addRequestID),\n/* harmony export */   defaultParseResponse: () => (/* binding */ defaultParseResponse)\n/* harmony export */ });\n/* harmony import */ var _core_streaming_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/streaming.mjs */ \"(rsc)/./node_modules/openai/core/streaming.mjs\");\n/* harmony import */ var _utils_log_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/log.mjs */ \"(rsc)/./node_modules/openai/internal/utils/log.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\nasync function defaultParseResponse(client, props) {\n    const { response, requestLogID, retryOfRequestLogID, startTime } = props;\n    const body = await (async ()=>{\n        if (props.options.stream) {\n            (0,_utils_log_mjs__WEBPACK_IMPORTED_MODULE_1__.loggerFor)(client).debug(\"response\", response.status, response.url, response.headers, response.body);\n            // Note: there is an invariant here that isn't represented in the type system\n            // that if you set `stream: true` the response type must also be `Stream<T>`\n            if (props.options.__streamClass) {\n                return props.options.__streamClass.fromSSEResponse(response, props.controller, client);\n            }\n            return _core_streaming_mjs__WEBPACK_IMPORTED_MODULE_0__.Stream.fromSSEResponse(response, props.controller, client);\n        }\n        // fetch refuses to read the body when the status code is 204.\n        if (response.status === 204) {\n            return null;\n        }\n        if (props.options.__binaryResponse) {\n            return response;\n        }\n        const contentType = response.headers.get(\"content-type\");\n        const mediaType = contentType?.split(\";\")[0]?.trim();\n        const isJSON = mediaType?.includes(\"application/json\") || mediaType?.endsWith(\"+json\");\n        if (isJSON) {\n            const json = await response.json();\n            return addRequestID(json, response);\n        }\n        const text = await response.text();\n        return text;\n    })();\n    (0,_utils_log_mjs__WEBPACK_IMPORTED_MODULE_1__.loggerFor)(client).debug(`[${requestLogID}] response parsed`, (0,_utils_log_mjs__WEBPACK_IMPORTED_MODULE_1__.formatRequestDetails)({\n        retryOfRequestLogID,\n        url: response.url,\n        status: response.status,\n        body,\n        durationMs: Date.now() - startTime\n    }));\n    return body;\n}\nfunction addRequestID(value, response) {\n    if (!value || typeof value !== \"object\" || Array.isArray(value)) {\n        return value;\n    }\n    return Object.defineProperty(value, \"_request_id\", {\n        value: response.headers.get(\"x-request-id\"),\n        enumerable: false\n    });\n} //# sourceMappingURL=parse.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvb3BlbmFpL2ludGVybmFsL3BhcnNlLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUEsc0ZBQXNGO0FBQ3ZDO0FBQ21CO0FBQzNELGVBQWVHLHFCQUFxQkMsTUFBTSxFQUFFQyxLQUFLO0lBQ3BELE1BQU0sRUFBRUMsUUFBUSxFQUFFQyxZQUFZLEVBQUVDLG1CQUFtQixFQUFFQyxTQUFTLEVBQUUsR0FBR0o7SUFDbkUsTUFBTUssT0FBTyxNQUFNLENBQUM7UUFDaEIsSUFBSUwsTUFBTU0sT0FBTyxDQUFDQyxNQUFNLEVBQUU7WUFDdEJWLHlEQUFTQSxDQUFDRSxRQUFRUyxLQUFLLENBQUMsWUFBWVAsU0FBU1EsTUFBTSxFQUFFUixTQUFTUyxHQUFHLEVBQUVULFNBQVNVLE9BQU8sRUFBRVYsU0FBU0ksSUFBSTtZQUNsRyw2RUFBNkU7WUFDN0UsNEVBQTRFO1lBQzVFLElBQUlMLE1BQU1NLE9BQU8sQ0FBQ00sYUFBYSxFQUFFO2dCQUM3QixPQUFPWixNQUFNTSxPQUFPLENBQUNNLGFBQWEsQ0FBQ0MsZUFBZSxDQUFDWixVQUFVRCxNQUFNYyxVQUFVLEVBQUVmO1lBQ25GO1lBQ0EsT0FBT0osdURBQU1BLENBQUNrQixlQUFlLENBQUNaLFVBQVVELE1BQU1jLFVBQVUsRUFBRWY7UUFDOUQ7UUFDQSw4REFBOEQ7UUFDOUQsSUFBSUUsU0FBU1EsTUFBTSxLQUFLLEtBQUs7WUFDekIsT0FBTztRQUNYO1FBQ0EsSUFBSVQsTUFBTU0sT0FBTyxDQUFDUyxnQkFBZ0IsRUFBRTtZQUNoQyxPQUFPZDtRQUNYO1FBQ0EsTUFBTWUsY0FBY2YsU0FBU1UsT0FBTyxDQUFDTSxHQUFHLENBQUM7UUFDekMsTUFBTUMsWUFBWUYsYUFBYUcsTUFBTSxJQUFJLENBQUMsRUFBRSxFQUFFQztRQUM5QyxNQUFNQyxTQUFTSCxXQUFXSSxTQUFTLHVCQUF1QkosV0FBV0ssU0FBUztRQUM5RSxJQUFJRixRQUFRO1lBQ1IsTUFBTUcsT0FBTyxNQUFNdkIsU0FBU3VCLElBQUk7WUFDaEMsT0FBT0MsYUFBYUQsTUFBTXZCO1FBQzlCO1FBQ0EsTUFBTXlCLE9BQU8sTUFBTXpCLFNBQVN5QixJQUFJO1FBQ2hDLE9BQU9BO0lBQ1g7SUFDQTdCLHlEQUFTQSxDQUFDRSxRQUFRUyxLQUFLLENBQUMsQ0FBQyxDQUFDLEVBQUVOLGFBQWEsaUJBQWlCLENBQUMsRUFBRU4sb0VBQW9CQSxDQUFDO1FBQzlFTztRQUNBTyxLQUFLVCxTQUFTUyxHQUFHO1FBQ2pCRCxRQUFRUixTQUFTUSxNQUFNO1FBQ3ZCSjtRQUNBc0IsWUFBWUMsS0FBS0MsR0FBRyxLQUFLekI7SUFDN0I7SUFDQSxPQUFPQztBQUNYO0FBQ08sU0FBU29CLGFBQWFLLEtBQUssRUFBRTdCLFFBQVE7SUFDeEMsSUFBSSxDQUFDNkIsU0FBUyxPQUFPQSxVQUFVLFlBQVlDLE1BQU1DLE9BQU8sQ0FBQ0YsUUFBUTtRQUM3RCxPQUFPQTtJQUNYO0lBQ0EsT0FBT0csT0FBT0MsY0FBYyxDQUFDSixPQUFPLGVBQWU7UUFDL0NBLE9BQU83QixTQUFTVSxPQUFPLENBQUNNLEdBQUcsQ0FBQztRQUM1QmtCLFlBQVk7SUFDaEI7QUFDSixFQUNBLGtDQUFrQyIsInNvdXJjZXMiOlsid2VicGFjazovL3N5c3RlbS1wcm9tcHQtdG9vbC13ZWIvLi9ub2RlX21vZHVsZXMvb3BlbmFpL2ludGVybmFsL3BhcnNlLm1qcz9jODE1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG5pbXBvcnQgeyBTdHJlYW0gfSBmcm9tIFwiLi4vY29yZS9zdHJlYW1pbmcubWpzXCI7XG5pbXBvcnQgeyBmb3JtYXRSZXF1ZXN0RGV0YWlscywgbG9nZ2VyRm9yIH0gZnJvbSBcIi4vdXRpbHMvbG9nLm1qc1wiO1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGRlZmF1bHRQYXJzZVJlc3BvbnNlKGNsaWVudCwgcHJvcHMpIHtcbiAgICBjb25zdCB7IHJlc3BvbnNlLCByZXF1ZXN0TG9nSUQsIHJldHJ5T2ZSZXF1ZXN0TG9nSUQsIHN0YXJ0VGltZSB9ID0gcHJvcHM7XG4gICAgY29uc3QgYm9keSA9IGF3YWl0IChhc3luYyAoKSA9PiB7XG4gICAgICAgIGlmIChwcm9wcy5vcHRpb25zLnN0cmVhbSkge1xuICAgICAgICAgICAgbG9nZ2VyRm9yKGNsaWVudCkuZGVidWcoJ3Jlc3BvbnNlJywgcmVzcG9uc2Uuc3RhdHVzLCByZXNwb25zZS51cmwsIHJlc3BvbnNlLmhlYWRlcnMsIHJlc3BvbnNlLmJvZHkpO1xuICAgICAgICAgICAgLy8gTm90ZTogdGhlcmUgaXMgYW4gaW52YXJpYW50IGhlcmUgdGhhdCBpc24ndCByZXByZXNlbnRlZCBpbiB0aGUgdHlwZSBzeXN0ZW1cbiAgICAgICAgICAgIC8vIHRoYXQgaWYgeW91IHNldCBgc3RyZWFtOiB0cnVlYCB0aGUgcmVzcG9uc2UgdHlwZSBtdXN0IGFsc28gYmUgYFN0cmVhbTxUPmBcbiAgICAgICAgICAgIGlmIChwcm9wcy5vcHRpb25zLl9fc3RyZWFtQ2xhc3MpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gcHJvcHMub3B0aW9ucy5fX3N0cmVhbUNsYXNzLmZyb21TU0VSZXNwb25zZShyZXNwb25zZSwgcHJvcHMuY29udHJvbGxlciwgY2xpZW50KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBTdHJlYW0uZnJvbVNTRVJlc3BvbnNlKHJlc3BvbnNlLCBwcm9wcy5jb250cm9sbGVyLCBjbGllbnQpO1xuICAgICAgICB9XG4gICAgICAgIC8vIGZldGNoIHJlZnVzZXMgdG8gcmVhZCB0aGUgYm9keSB3aGVuIHRoZSBzdGF0dXMgY29kZSBpcyAyMDQuXG4gICAgICAgIGlmIChyZXNwb25zZS5zdGF0dXMgPT09IDIwNCkge1xuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHByb3BzLm9wdGlvbnMuX19iaW5hcnlSZXNwb25zZSkge1xuICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGNvbnRlbnRUeXBlID0gcmVzcG9uc2UuaGVhZGVycy5nZXQoJ2NvbnRlbnQtdHlwZScpO1xuICAgICAgICBjb25zdCBtZWRpYVR5cGUgPSBjb250ZW50VHlwZT8uc3BsaXQoJzsnKVswXT8udHJpbSgpO1xuICAgICAgICBjb25zdCBpc0pTT04gPSBtZWRpYVR5cGU/LmluY2x1ZGVzKCdhcHBsaWNhdGlvbi9qc29uJykgfHwgbWVkaWFUeXBlPy5lbmRzV2l0aCgnK2pzb24nKTtcbiAgICAgICAgaWYgKGlzSlNPTikge1xuICAgICAgICAgICAgY29uc3QganNvbiA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcbiAgICAgICAgICAgIHJldHVybiBhZGRSZXF1ZXN0SUQoanNvbiwgcmVzcG9uc2UpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHRleHQgPSBhd2FpdCByZXNwb25zZS50ZXh0KCk7XG4gICAgICAgIHJldHVybiB0ZXh0O1xuICAgIH0pKCk7XG4gICAgbG9nZ2VyRm9yKGNsaWVudCkuZGVidWcoYFske3JlcXVlc3RMb2dJRH1dIHJlc3BvbnNlIHBhcnNlZGAsIGZvcm1hdFJlcXVlc3REZXRhaWxzKHtcbiAgICAgICAgcmV0cnlPZlJlcXVlc3RMb2dJRCxcbiAgICAgICAgdXJsOiByZXNwb25zZS51cmwsXG4gICAgICAgIHN0YXR1czogcmVzcG9uc2Uuc3RhdHVzLFxuICAgICAgICBib2R5LFxuICAgICAgICBkdXJhdGlvbk1zOiBEYXRlLm5vdygpIC0gc3RhcnRUaW1lLFxuICAgIH0pKTtcbiAgICByZXR1cm4gYm9keTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBhZGRSZXF1ZXN0SUQodmFsdWUsIHJlc3BvbnNlKSB7XG4gICAgaWYgKCF2YWx1ZSB8fCB0eXBlb2YgdmFsdWUgIT09ICdvYmplY3QnIHx8IEFycmF5LmlzQXJyYXkodmFsdWUpKSB7XG4gICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9XG4gICAgcmV0dXJuIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh2YWx1ZSwgJ19yZXF1ZXN0X2lkJywge1xuICAgICAgICB2YWx1ZTogcmVzcG9uc2UuaGVhZGVycy5nZXQoJ3gtcmVxdWVzdC1pZCcpLFxuICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICB9KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhcnNlLm1qcy5tYXAiXSwibmFtZXMiOlsiU3RyZWFtIiwiZm9ybWF0UmVxdWVzdERldGFpbHMiLCJsb2dnZXJGb3IiLCJkZWZhdWx0UGFyc2VSZXNwb25zZSIsImNsaWVudCIsInByb3BzIiwicmVzcG9uc2UiLCJyZXF1ZXN0TG9nSUQiLCJyZXRyeU9mUmVxdWVzdExvZ0lEIiwic3RhcnRUaW1lIiwiYm9keSIsIm9wdGlvbnMiLCJzdHJlYW0iLCJkZWJ1ZyIsInN0YXR1cyIsInVybCIsImhlYWRlcnMiLCJfX3N0cmVhbUNsYXNzIiwiZnJvbVNTRVJlc3BvbnNlIiwiY29udHJvbGxlciIsIl9fYmluYXJ5UmVzcG9uc2UiLCJjb250ZW50VHlwZSIsImdldCIsIm1lZGlhVHlwZSIsInNwbGl0IiwidHJpbSIsImlzSlNPTiIsImluY2x1ZGVzIiwiZW5kc1dpdGgiLCJqc29uIiwiYWRkUmVxdWVzdElEIiwidGV4dCIsImR1cmF0aW9uTXMiLCJEYXRlIiwibm93IiwidmFsdWUiLCJBcnJheSIsImlzQXJyYXkiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/internal/parse.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/internal/qs/formats.mjs":
/*!*****************************************************!*\
  !*** ./node_modules/openai/internal/qs/formats.mjs ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RFC1738: () => (/* binding */ RFC1738),\n/* harmony export */   RFC3986: () => (/* binding */ RFC3986),\n/* harmony export */   default_format: () => (/* binding */ default_format),\n/* harmony export */   default_formatter: () => (/* binding */ default_formatter),\n/* harmony export */   formatters: () => (/* binding */ formatters)\n/* harmony export */ });\nconst default_format = \"RFC3986\";\nconst default_formatter = (v)=>String(v);\nconst formatters = {\n    RFC1738: (v)=>String(v).replace(/%20/g, \"+\"),\n    RFC3986: default_formatter\n};\nconst RFC1738 = \"RFC1738\";\nconst RFC3986 = \"RFC3986\"; //# sourceMappingURL=formats.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvb3BlbmFpL2ludGVybmFsL3FzL2Zvcm1hdHMubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQU8sTUFBTUEsaUJBQWlCLFVBQVU7QUFDakMsTUFBTUMsb0JBQW9CLENBQUNDLElBQU1DLE9BQU9ELEdBQUc7QUFDM0MsTUFBTUUsYUFBYTtJQUN0QkMsU0FBUyxDQUFDSCxJQUFNQyxPQUFPRCxHQUFHSSxPQUFPLENBQUMsUUFBUTtJQUMxQ0MsU0FBU047QUFDYixFQUFFO0FBQ0ssTUFBTUksVUFBVSxVQUFVO0FBQzFCLE1BQU1FLFVBQVUsVUFBVSxDQUNqQyxvQ0FBb0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zeXN0ZW0tcHJvbXB0LXRvb2wtd2ViLy4vbm9kZV9tb2R1bGVzL29wZW5haS9pbnRlcm5hbC9xcy9mb3JtYXRzLm1qcz9jMzBiIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBkZWZhdWx0X2Zvcm1hdCA9ICdSRkMzOTg2JztcbmV4cG9ydCBjb25zdCBkZWZhdWx0X2Zvcm1hdHRlciA9ICh2KSA9PiBTdHJpbmcodik7XG5leHBvcnQgY29uc3QgZm9ybWF0dGVycyA9IHtcbiAgICBSRkMxNzM4OiAodikgPT4gU3RyaW5nKHYpLnJlcGxhY2UoLyUyMC9nLCAnKycpLFxuICAgIFJGQzM5ODY6IGRlZmF1bHRfZm9ybWF0dGVyLFxufTtcbmV4cG9ydCBjb25zdCBSRkMxNzM4ID0gJ1JGQzE3MzgnO1xuZXhwb3J0IGNvbnN0IFJGQzM5ODYgPSAnUkZDMzk4Nic7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1mb3JtYXRzLm1qcy5tYXAiXSwibmFtZXMiOlsiZGVmYXVsdF9mb3JtYXQiLCJkZWZhdWx0X2Zvcm1hdHRlciIsInYiLCJTdHJpbmciLCJmb3JtYXR0ZXJzIiwiUkZDMTczOCIsInJlcGxhY2UiLCJSRkMzOTg2Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/internal/qs/formats.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/internal/qs/index.mjs":
/*!***************************************************!*\
  !*** ./node_modules/openai/internal/qs/index.mjs ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   formats: () => (/* binding */ formats),\n/* harmony export */   stringify: () => (/* reexport safe */ _stringify_mjs__WEBPACK_IMPORTED_MODULE_1__.stringify)\n/* harmony export */ });\n/* harmony import */ var _formats_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./formats.mjs */ \"(rsc)/./node_modules/openai/internal/qs/formats.mjs\");\n/* harmony import */ var _stringify_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./stringify.mjs */ \"(rsc)/./node_modules/openai/internal/qs/stringify.mjs\");\n\nconst formats = {\n    formatters: _formats_mjs__WEBPACK_IMPORTED_MODULE_0__.formatters,\n    RFC1738: _formats_mjs__WEBPACK_IMPORTED_MODULE_0__.RFC1738,\n    RFC3986: _formats_mjs__WEBPACK_IMPORTED_MODULE_0__.RFC3986,\n    default: _formats_mjs__WEBPACK_IMPORTED_MODULE_0__.default_format\n};\n\n //# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvb3BlbmFpL2ludGVybmFsL3FzL2luZGV4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQTZFO0FBQzdFLE1BQU1JLFVBQVU7SUFDWkgsVUFBVUEsc0RBQUFBO0lBQ1ZDLE9BQU9BLG1EQUFBQTtJQUNQQyxPQUFPQSxtREFBQUE7SUFDUEUsU0FBU0wsd0RBQWNBO0FBQzNCO0FBQzRDO0FBQ3pCLENBQ25CLGtDQUFrQyIsInNvdXJjZXMiOlsid2VicGFjazovL3N5c3RlbS1wcm9tcHQtdG9vbC13ZWIvLi9ub2RlX21vZHVsZXMvb3BlbmFpL2ludGVybmFsL3FzL2luZGV4Lm1qcz80OWUyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGRlZmF1bHRfZm9ybWF0LCBmb3JtYXR0ZXJzLCBSRkMxNzM4LCBSRkMzOTg2IH0gZnJvbSBcIi4vZm9ybWF0cy5tanNcIjtcbmNvbnN0IGZvcm1hdHMgPSB7XG4gICAgZm9ybWF0dGVycyxcbiAgICBSRkMxNzM4LFxuICAgIFJGQzM5ODYsXG4gICAgZGVmYXVsdDogZGVmYXVsdF9mb3JtYXQsXG59O1xuZXhwb3J0IHsgc3RyaW5naWZ5IH0gZnJvbSBcIi4vc3RyaW5naWZ5Lm1qc1wiO1xuZXhwb3J0IHsgZm9ybWF0cyB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXgubWpzLm1hcCJdLCJuYW1lcyI6WyJkZWZhdWx0X2Zvcm1hdCIsImZvcm1hdHRlcnMiLCJSRkMxNzM4IiwiUkZDMzk4NiIsImZvcm1hdHMiLCJkZWZhdWx0Iiwic3RyaW5naWZ5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/internal/qs/index.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/internal/qs/stringify.mjs":
/*!*******************************************************!*\
  !*** ./node_modules/openai/internal/qs/stringify.mjs ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   stringify: () => (/* binding */ stringify)\n/* harmony export */ });\n/* harmony import */ var _utils_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.mjs */ \"(rsc)/./node_modules/openai/internal/qs/utils.mjs\");\n/* harmony import */ var _formats_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./formats.mjs */ \"(rsc)/./node_modules/openai/internal/qs/formats.mjs\");\n/* harmony import */ var _utils_values_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/values.mjs */ \"(rsc)/./node_modules/openai/internal/utils/values.mjs\");\n\n\n\nconst array_prefix_generators = {\n    brackets (prefix) {\n        return String(prefix) + \"[]\";\n    },\n    comma: \"comma\",\n    indices (prefix, key) {\n        return String(prefix) + \"[\" + key + \"]\";\n    },\n    repeat (prefix) {\n        return String(prefix);\n    }\n};\nconst push_to_array = function(arr, value_or_array) {\n    Array.prototype.push.apply(arr, (0,_utils_values_mjs__WEBPACK_IMPORTED_MODULE_2__.isArray)(value_or_array) ? value_or_array : [\n        value_or_array\n    ]);\n};\nlet toISOString;\nconst defaults = {\n    addQueryPrefix: false,\n    allowDots: false,\n    allowEmptyArrays: false,\n    arrayFormat: \"indices\",\n    charset: \"utf-8\",\n    charsetSentinel: false,\n    delimiter: \"&\",\n    encode: true,\n    encodeDotInKeys: false,\n    encoder: _utils_mjs__WEBPACK_IMPORTED_MODULE_0__.encode,\n    encodeValuesOnly: false,\n    format: _formats_mjs__WEBPACK_IMPORTED_MODULE_1__.default_format,\n    formatter: _formats_mjs__WEBPACK_IMPORTED_MODULE_1__.default_formatter,\n    /** @deprecated */ indices: false,\n    serializeDate (date) {\n        return (toISOString ?? (toISOString = Function.prototype.call.bind(Date.prototype.toISOString)))(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false\n};\nfunction is_non_nullish_primitive(v) {\n    return typeof v === \"string\" || typeof v === \"number\" || typeof v === \"boolean\" || typeof v === \"symbol\" || typeof v === \"bigint\";\n}\nconst sentinel = {};\nfunction inner_stringify(object, prefix, generateArrayPrefix, commaRoundTrip, allowEmptyArrays, strictNullHandling, skipNulls, encodeDotInKeys, encoder, filter, sort, allowDots, serializeDate, format, formatter, encodeValuesOnly, charset, sideChannel) {\n    let obj = object;\n    let tmp_sc = sideChannel;\n    let step = 0;\n    let find_flag = false;\n    while((tmp_sc = tmp_sc.get(sentinel)) !== void undefined && !find_flag){\n        // Where object last appeared in the ref tree\n        const pos = tmp_sc.get(object);\n        step += 1;\n        if (typeof pos !== \"undefined\") {\n            if (pos === step) {\n                throw new RangeError(\"Cyclic object value\");\n            } else {\n                find_flag = true; // Break while\n            }\n        }\n        if (typeof tmp_sc.get(sentinel) === \"undefined\") {\n            step = 0;\n        }\n    }\n    if (typeof filter === \"function\") {\n        obj = filter(prefix, obj);\n    } else if (obj instanceof Date) {\n        obj = serializeDate?.(obj);\n    } else if (generateArrayPrefix === \"comma\" && (0,_utils_values_mjs__WEBPACK_IMPORTED_MODULE_2__.isArray)(obj)) {\n        obj = (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_0__.maybe_map)(obj, function(value) {\n            if (value instanceof Date) {\n                return serializeDate?.(value);\n            }\n            return value;\n        });\n    }\n    if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ? // @ts-expect-error\n            encoder(prefix, defaults.encoder, charset, \"key\", format) : prefix;\n        }\n        obj = \"\";\n    }\n    if (is_non_nullish_primitive(obj) || (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_0__.is_buffer)(obj)) {\n        if (encoder) {\n            const key_value = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder, charset, \"key\", format);\n            return [\n                formatter?.(key_value) + \"=\" + // @ts-expect-error\n                formatter?.(encoder(obj, defaults.encoder, charset, \"value\", format))\n            ];\n        }\n        return [\n            formatter?.(prefix) + \"=\" + formatter?.(String(obj))\n        ];\n    }\n    const values = [];\n    if (typeof obj === \"undefined\") {\n        return values;\n    }\n    let obj_keys;\n    if (generateArrayPrefix === \"comma\" && (0,_utils_values_mjs__WEBPACK_IMPORTED_MODULE_2__.isArray)(obj)) {\n        // we need to join elements in\n        if (encodeValuesOnly && encoder) {\n            // @ts-expect-error values only\n            obj = (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_0__.maybe_map)(obj, encoder);\n        }\n        obj_keys = [\n            {\n                value: obj.length > 0 ? obj.join(\",\") || null : void undefined\n            }\n        ];\n    } else if ((0,_utils_values_mjs__WEBPACK_IMPORTED_MODULE_2__.isArray)(filter)) {\n        obj_keys = filter;\n    } else {\n        const keys = Object.keys(obj);\n        obj_keys = sort ? keys.sort(sort) : keys;\n    }\n    const encoded_prefix = encodeDotInKeys ? String(prefix).replace(/\\./g, \"%2E\") : String(prefix);\n    const adjusted_prefix = commaRoundTrip && (0,_utils_values_mjs__WEBPACK_IMPORTED_MODULE_2__.isArray)(obj) && obj.length === 1 ? encoded_prefix + \"[]\" : encoded_prefix;\n    if (allowEmptyArrays && (0,_utils_values_mjs__WEBPACK_IMPORTED_MODULE_2__.isArray)(obj) && obj.length === 0) {\n        return adjusted_prefix + \"[]\";\n    }\n    for(let j = 0; j < obj_keys.length; ++j){\n        const key = obj_keys[j];\n        const value = // @ts-ignore\n        typeof key === \"object\" && typeof key.value !== \"undefined\" ? key.value : obj[key];\n        if (skipNulls && value === null) {\n            continue;\n        }\n        // @ts-ignore\n        const encoded_key = allowDots && encodeDotInKeys ? key.replace(/\\./g, \"%2E\") : key;\n        const key_prefix = (0,_utils_values_mjs__WEBPACK_IMPORTED_MODULE_2__.isArray)(obj) ? typeof generateArrayPrefix === \"function\" ? generateArrayPrefix(adjusted_prefix, encoded_key) : adjusted_prefix : adjusted_prefix + (allowDots ? \".\" + encoded_key : \"[\" + encoded_key + \"]\");\n        sideChannel.set(object, step);\n        const valueSideChannel = new WeakMap();\n        valueSideChannel.set(sentinel, sideChannel);\n        push_to_array(values, inner_stringify(value, key_prefix, generateArrayPrefix, commaRoundTrip, allowEmptyArrays, strictNullHandling, skipNulls, encodeDotInKeys, // @ts-ignore\n        generateArrayPrefix === \"comma\" && encodeValuesOnly && (0,_utils_values_mjs__WEBPACK_IMPORTED_MODULE_2__.isArray)(obj) ? null : encoder, filter, sort, allowDots, serializeDate, format, formatter, encodeValuesOnly, charset, valueSideChannel));\n    }\n    return values;\n}\nfunction normalize_stringify_options(opts = defaults) {\n    if (typeof opts.allowEmptyArrays !== \"undefined\" && typeof opts.allowEmptyArrays !== \"boolean\") {\n        throw new TypeError(\"`allowEmptyArrays` option can only be `true` or `false`, when provided\");\n    }\n    if (typeof opts.encodeDotInKeys !== \"undefined\" && typeof opts.encodeDotInKeys !== \"boolean\") {\n        throw new TypeError(\"`encodeDotInKeys` option can only be `true` or `false`, when provided\");\n    }\n    if (opts.encoder !== null && typeof opts.encoder !== \"undefined\" && typeof opts.encoder !== \"function\") {\n        throw new TypeError(\"Encoder has to be a function.\");\n    }\n    const charset = opts.charset || defaults.charset;\n    if (typeof opts.charset !== \"undefined\" && opts.charset !== \"utf-8\" && opts.charset !== \"iso-8859-1\") {\n        throw new TypeError(\"The charset option must be either utf-8, iso-8859-1, or undefined\");\n    }\n    let format = _formats_mjs__WEBPACK_IMPORTED_MODULE_1__.default_format;\n    if (typeof opts.format !== \"undefined\") {\n        if (!(0,_utils_mjs__WEBPACK_IMPORTED_MODULE_0__.has)(_formats_mjs__WEBPACK_IMPORTED_MODULE_1__.formatters, opts.format)) {\n            throw new TypeError(\"Unknown format option provided.\");\n        }\n        format = opts.format;\n    }\n    const formatter = _formats_mjs__WEBPACK_IMPORTED_MODULE_1__.formatters[format];\n    let filter = defaults.filter;\n    if (typeof opts.filter === \"function\" || (0,_utils_values_mjs__WEBPACK_IMPORTED_MODULE_2__.isArray)(opts.filter)) {\n        filter = opts.filter;\n    }\n    let arrayFormat;\n    if (opts.arrayFormat && opts.arrayFormat in array_prefix_generators) {\n        arrayFormat = opts.arrayFormat;\n    } else if (\"indices\" in opts) {\n        arrayFormat = opts.indices ? \"indices\" : \"repeat\";\n    } else {\n        arrayFormat = defaults.arrayFormat;\n    }\n    if (\"commaRoundTrip\" in opts && typeof opts.commaRoundTrip !== \"boolean\") {\n        throw new TypeError(\"`commaRoundTrip` must be a boolean, or absent\");\n    }\n    const allowDots = typeof opts.allowDots === \"undefined\" ? !!opts.encodeDotInKeys === true ? true : defaults.allowDots : !!opts.allowDots;\n    return {\n        addQueryPrefix: typeof opts.addQueryPrefix === \"boolean\" ? opts.addQueryPrefix : defaults.addQueryPrefix,\n        // @ts-ignore\n        allowDots: allowDots,\n        allowEmptyArrays: typeof opts.allowEmptyArrays === \"boolean\" ? !!opts.allowEmptyArrays : defaults.allowEmptyArrays,\n        arrayFormat: arrayFormat,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === \"boolean\" ? opts.charsetSentinel : defaults.charsetSentinel,\n        commaRoundTrip: !!opts.commaRoundTrip,\n        delimiter: typeof opts.delimiter === \"undefined\" ? defaults.delimiter : opts.delimiter,\n        encode: typeof opts.encode === \"boolean\" ? opts.encode : defaults.encode,\n        encodeDotInKeys: typeof opts.encodeDotInKeys === \"boolean\" ? opts.encodeDotInKeys : defaults.encodeDotInKeys,\n        encoder: typeof opts.encoder === \"function\" ? opts.encoder : defaults.encoder,\n        encodeValuesOnly: typeof opts.encodeValuesOnly === \"boolean\" ? opts.encodeValuesOnly : defaults.encodeValuesOnly,\n        filter: filter,\n        format: format,\n        formatter: formatter,\n        serializeDate: typeof opts.serializeDate === \"function\" ? opts.serializeDate : defaults.serializeDate,\n        skipNulls: typeof opts.skipNulls === \"boolean\" ? opts.skipNulls : defaults.skipNulls,\n        // @ts-ignore\n        sort: typeof opts.sort === \"function\" ? opts.sort : null,\n        strictNullHandling: typeof opts.strictNullHandling === \"boolean\" ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n}\nfunction stringify(object, opts = {}) {\n    let obj = object;\n    const options = normalize_stringify_options(opts);\n    let obj_keys;\n    let filter;\n    if (typeof options.filter === \"function\") {\n        filter = options.filter;\n        obj = filter(\"\", obj);\n    } else if ((0,_utils_values_mjs__WEBPACK_IMPORTED_MODULE_2__.isArray)(options.filter)) {\n        filter = options.filter;\n        obj_keys = filter;\n    }\n    const keys = [];\n    if (typeof obj !== \"object\" || obj === null) {\n        return \"\";\n    }\n    const generateArrayPrefix = array_prefix_generators[options.arrayFormat];\n    const commaRoundTrip = generateArrayPrefix === \"comma\" && options.commaRoundTrip;\n    if (!obj_keys) {\n        obj_keys = Object.keys(obj);\n    }\n    if (options.sort) {\n        obj_keys.sort(options.sort);\n    }\n    const sideChannel = new WeakMap();\n    for(let i = 0; i < obj_keys.length; ++i){\n        const key = obj_keys[i];\n        if (options.skipNulls && obj[key] === null) {\n            continue;\n        }\n        push_to_array(keys, inner_stringify(obj[key], key, // @ts-expect-error\n        generateArrayPrefix, commaRoundTrip, options.allowEmptyArrays, options.strictNullHandling, options.skipNulls, options.encodeDotInKeys, options.encode ? options.encoder : null, options.filter, options.sort, options.allowDots, options.serializeDate, options.format, options.formatter, options.encodeValuesOnly, options.charset, sideChannel));\n    }\n    const joined = keys.join(options.delimiter);\n    let prefix = options.addQueryPrefix === true ? \"?\" : \"\";\n    if (options.charsetSentinel) {\n        if (options.charset === \"iso-8859-1\") {\n            // encodeURIComponent('&#10003;'), the \"numeric entity\" representation of a checkmark\n            prefix += \"utf8=%26%2310003%3B&\";\n        } else {\n            // encodeURIComponent('✓')\n            prefix += \"utf8=%E2%9C%93&\";\n        }\n    }\n    return joined.length > 0 ? prefix + joined : \"\";\n} //# sourceMappingURL=stringify.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/internal/qs/stringify.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/internal/qs/utils.mjs":
/*!***************************************************!*\
  !*** ./node_modules/openai/internal/qs/utils.mjs ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assign_single_source: () => (/* binding */ assign_single_source),\n/* harmony export */   combine: () => (/* binding */ combine),\n/* harmony export */   compact: () => (/* binding */ compact),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   has: () => (/* binding */ has),\n/* harmony export */   is_buffer: () => (/* binding */ is_buffer),\n/* harmony export */   is_regexp: () => (/* binding */ is_regexp),\n/* harmony export */   maybe_map: () => (/* binding */ maybe_map),\n/* harmony export */   merge: () => (/* binding */ merge)\n/* harmony export */ });\n/* harmony import */ var _formats_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./formats.mjs */ \"(rsc)/./node_modules/openai/internal/qs/formats.mjs\");\n/* harmony import */ var _utils_values_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/values.mjs */ \"(rsc)/./node_modules/openai/internal/utils/values.mjs\");\n\n\nlet has = (obj, key)=>(has = Object.hasOwn ?? Function.prototype.call.bind(Object.prototype.hasOwnProperty), has(obj, key));\nconst hex_table = /* @__PURE__ */ (()=>{\n    const array = [];\n    for(let i = 0; i < 256; ++i){\n        array.push(\"%\" + ((i < 16 ? \"0\" : \"\") + i.toString(16)).toUpperCase());\n    }\n    return array;\n})();\nfunction compact_queue(queue) {\n    while(queue.length > 1){\n        const item = queue.pop();\n        if (!item) continue;\n        const obj = item.obj[item.prop];\n        if ((0,_utils_values_mjs__WEBPACK_IMPORTED_MODULE_1__.isArray)(obj)) {\n            const compacted = [];\n            for(let j = 0; j < obj.length; ++j){\n                if (typeof obj[j] !== \"undefined\") {\n                    compacted.push(obj[j]);\n                }\n            }\n            // @ts-ignore\n            item.obj[item.prop] = compacted;\n        }\n    }\n}\nfunction array_to_object(source, options) {\n    const obj = options && options.plainObjects ? Object.create(null) : {};\n    for(let i = 0; i < source.length; ++i){\n        if (typeof source[i] !== \"undefined\") {\n            obj[i] = source[i];\n        }\n    }\n    return obj;\n}\nfunction merge(target, source, options = {}) {\n    if (!source) {\n        return target;\n    }\n    if (typeof source !== \"object\") {\n        if ((0,_utils_values_mjs__WEBPACK_IMPORTED_MODULE_1__.isArray)(target)) {\n            target.push(source);\n        } else if (target && typeof target === \"object\") {\n            if (options && (options.plainObjects || options.allowPrototypes) || !has(Object.prototype, source)) {\n                target[source] = true;\n            }\n        } else {\n            return [\n                target,\n                source\n            ];\n        }\n        return target;\n    }\n    if (!target || typeof target !== \"object\") {\n        return [\n            target\n        ].concat(source);\n    }\n    let mergeTarget = target;\n    if ((0,_utils_values_mjs__WEBPACK_IMPORTED_MODULE_1__.isArray)(target) && !(0,_utils_values_mjs__WEBPACK_IMPORTED_MODULE_1__.isArray)(source)) {\n        // @ts-ignore\n        mergeTarget = array_to_object(target, options);\n    }\n    if ((0,_utils_values_mjs__WEBPACK_IMPORTED_MODULE_1__.isArray)(target) && (0,_utils_values_mjs__WEBPACK_IMPORTED_MODULE_1__.isArray)(source)) {\n        source.forEach(function(item, i) {\n            if (has(target, i)) {\n                const targetItem = target[i];\n                if (targetItem && typeof targetItem === \"object\" && item && typeof item === \"object\") {\n                    target[i] = merge(targetItem, item, options);\n                } else {\n                    target.push(item);\n                }\n            } else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n    return Object.keys(source).reduce(function(acc, key) {\n        const value = source[key];\n        if (has(acc, key)) {\n            acc[key] = merge(acc[key], value, options);\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n}\nfunction assign_single_source(target, source) {\n    return Object.keys(source).reduce(function(acc, key) {\n        acc[key] = source[key];\n        return acc;\n    }, target);\n}\nfunction decode(str, _, charset) {\n    const strWithoutPlus = str.replace(/\\+/g, \" \");\n    if (charset === \"iso-8859-1\") {\n        // unescape never throws, no try...catch needed:\n        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);\n    }\n    // utf-8\n    try {\n        return decodeURIComponent(strWithoutPlus);\n    } catch (e) {\n        return strWithoutPlus;\n    }\n}\nconst limit = 1024;\nconst encode = (str, _defaultEncoder, charset, _kind, format)=>{\n    // This code was originally written by Brian White for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n    let string = str;\n    if (typeof str === \"symbol\") {\n        string = Symbol.prototype.toString.call(str);\n    } else if (typeof str !== \"string\") {\n        string = String(str);\n    }\n    if (charset === \"iso-8859-1\") {\n        return escape(string).replace(/%u[0-9a-f]{4}/gi, function($0) {\n            return \"%26%23\" + parseInt($0.slice(2), 16) + \"%3B\";\n        });\n    }\n    let out = \"\";\n    for(let j = 0; j < string.length; j += limit){\n        const segment = string.length >= limit ? string.slice(j, j + limit) : string;\n        const arr = [];\n        for(let i = 0; i < segment.length; ++i){\n            let c = segment.charCodeAt(i);\n            if (c === 0x2d || // -\n            c === 0x2e || // .\n            c === 0x5f || // _\n            c === 0x7e || // ~\n            c >= 0x30 && c <= 0x39 || // 0-9\n            c >= 0x41 && c <= 0x5a || // a-z\n            c >= 0x61 && c <= 0x7a || // A-Z\n            format === _formats_mjs__WEBPACK_IMPORTED_MODULE_0__.RFC1738 && (c === 0x28 || c === 0x29) // ( )\n            ) {\n                arr[arr.length] = segment.charAt(i);\n                continue;\n            }\n            if (c < 0x80) {\n                arr[arr.length] = hex_table[c];\n                continue;\n            }\n            if (c < 0x800) {\n                arr[arr.length] = hex_table[0xc0 | c >> 6] + hex_table[0x80 | c & 0x3f];\n                continue;\n            }\n            if (c < 0xd800 || c >= 0xe000) {\n                arr[arr.length] = hex_table[0xe0 | c >> 12] + hex_table[0x80 | c >> 6 & 0x3f] + hex_table[0x80 | c & 0x3f];\n                continue;\n            }\n            i += 1;\n            c = 0x10000 + ((c & 0x3ff) << 10 | segment.charCodeAt(i) & 0x3ff);\n            arr[arr.length] = hex_table[0xf0 | c >> 18] + hex_table[0x80 | c >> 12 & 0x3f] + hex_table[0x80 | c >> 6 & 0x3f] + hex_table[0x80 | c & 0x3f];\n        }\n        out += arr.join(\"\");\n    }\n    return out;\n};\nfunction compact(value) {\n    const queue = [\n        {\n            obj: {\n                o: value\n            },\n            prop: \"o\"\n        }\n    ];\n    const refs = [];\n    for(let i = 0; i < queue.length; ++i){\n        const item = queue[i];\n        // @ts-ignore\n        const obj = item.obj[item.prop];\n        const keys = Object.keys(obj);\n        for(let j = 0; j < keys.length; ++j){\n            const key = keys[j];\n            const val = obj[key];\n            if (typeof val === \"object\" && val !== null && refs.indexOf(val) === -1) {\n                queue.push({\n                    obj: obj,\n                    prop: key\n                });\n                refs.push(val);\n            }\n        }\n    }\n    compact_queue(queue);\n    return value;\n}\nfunction is_regexp(obj) {\n    return Object.prototype.toString.call(obj) === \"[object RegExp]\";\n}\nfunction is_buffer(obj) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n}\nfunction combine(a, b) {\n    return [].concat(a, b);\n}\nfunction maybe_map(val, fn) {\n    if ((0,_utils_values_mjs__WEBPACK_IMPORTED_MODULE_1__.isArray)(val)) {\n        const mapped = [];\n        for(let i = 0; i < val.length; i += 1){\n            mapped.push(fn(val[i]));\n        }\n        return mapped;\n    }\n    return fn(val);\n} //# sourceMappingURL=utils.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvb3BlbmFpL2ludGVybmFsL3FzL3V0aWxzLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBd0M7QUFDTTtBQUN2QyxJQUFJRSxNQUFNLENBQUNDLEtBQUtDLE1BQVMsT0FBT0MsT0FBT0MsTUFBTSxJQUFJQyxTQUFTQyxTQUFTLENBQUNDLElBQUksQ0FBQ0MsSUFBSSxDQUFDTCxPQUFPRyxTQUFTLENBQUNHLGNBQWMsR0FDaEhULElBQUlDLEtBQUtDLElBQUcsRUFBRztBQUNuQixNQUFNUSxZQUE0QixhQUFILEdBQUk7SUFDL0IsTUFBTUMsUUFBUSxFQUFFO0lBQ2hCLElBQUssSUFBSUMsSUFBSSxHQUFHQSxJQUFJLEtBQUssRUFBRUEsRUFBRztRQUMxQkQsTUFBTUUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDRCxJQUFJLEtBQUssTUFBTSxFQUFDLElBQUtBLEVBQUVFLFFBQVEsQ0FBQyxHQUFFLEVBQUdDLFdBQVc7SUFDdkU7SUFDQSxPQUFPSjtBQUNYO0FBQ0EsU0FBU0ssY0FBY0MsS0FBSztJQUN4QixNQUFPQSxNQUFNQyxNQUFNLEdBQUcsRUFBRztRQUNyQixNQUFNQyxPQUFPRixNQUFNRyxHQUFHO1FBQ3RCLElBQUksQ0FBQ0QsTUFDRDtRQUNKLE1BQU1sQixNQUFNa0IsS0FBS2xCLEdBQUcsQ0FBQ2tCLEtBQUtFLElBQUksQ0FBQztRQUMvQixJQUFJdEIsMERBQU9BLENBQUNFLE1BQU07WUFDZCxNQUFNcUIsWUFBWSxFQUFFO1lBQ3BCLElBQUssSUFBSUMsSUFBSSxHQUFHQSxJQUFJdEIsSUFBSWlCLE1BQU0sRUFBRSxFQUFFSyxFQUFHO2dCQUNqQyxJQUFJLE9BQU90QixHQUFHLENBQUNzQixFQUFFLEtBQUssYUFBYTtvQkFDL0JELFVBQVVULElBQUksQ0FBQ1osR0FBRyxDQUFDc0IsRUFBRTtnQkFDekI7WUFDSjtZQUNBLGFBQWE7WUFDYkosS0FBS2xCLEdBQUcsQ0FBQ2tCLEtBQUtFLElBQUksQ0FBQyxHQUFHQztRQUMxQjtJQUNKO0FBQ0o7QUFDQSxTQUFTRSxnQkFBZ0JDLE1BQU0sRUFBRUMsT0FBTztJQUNwQyxNQUFNekIsTUFBTXlCLFdBQVdBLFFBQVFDLFlBQVksR0FBR3hCLE9BQU95QixNQUFNLENBQUMsUUFBUSxDQUFDO0lBQ3JFLElBQUssSUFBSWhCLElBQUksR0FBR0EsSUFBSWEsT0FBT1AsTUFBTSxFQUFFLEVBQUVOLEVBQUc7UUFDcEMsSUFBSSxPQUFPYSxNQUFNLENBQUNiLEVBQUUsS0FBSyxhQUFhO1lBQ2xDWCxHQUFHLENBQUNXLEVBQUUsR0FBR2EsTUFBTSxDQUFDYixFQUFFO1FBQ3RCO0lBQ0o7SUFDQSxPQUFPWDtBQUNYO0FBQ08sU0FBUzRCLE1BQU1DLE1BQU0sRUFBRUwsTUFBTSxFQUFFQyxVQUFVLENBQUMsQ0FBQztJQUM5QyxJQUFJLENBQUNELFFBQVE7UUFDVCxPQUFPSztJQUNYO0lBQ0EsSUFBSSxPQUFPTCxXQUFXLFVBQVU7UUFDNUIsSUFBSTFCLDBEQUFPQSxDQUFDK0IsU0FBUztZQUNqQkEsT0FBT2pCLElBQUksQ0FBQ1k7UUFDaEIsT0FDSyxJQUFJSyxVQUFVLE9BQU9BLFdBQVcsVUFBVTtZQUMzQyxJQUFJLFdBQWFKLENBQUFBLFFBQVFDLFlBQVksSUFBSUQsUUFBUUssZUFBZSxLQUFNLENBQUMvQixJQUFJRyxPQUFPRyxTQUFTLEVBQUVtQixTQUFTO2dCQUNsR0ssTUFBTSxDQUFDTCxPQUFPLEdBQUc7WUFDckI7UUFDSixPQUNLO1lBQ0QsT0FBTztnQkFBQ0s7Z0JBQVFMO2FBQU87UUFDM0I7UUFDQSxPQUFPSztJQUNYO0lBQ0EsSUFBSSxDQUFDQSxVQUFVLE9BQU9BLFdBQVcsVUFBVTtRQUN2QyxPQUFPO1lBQUNBO1NBQU8sQ0FBQ0UsTUFBTSxDQUFDUDtJQUMzQjtJQUNBLElBQUlRLGNBQWNIO0lBQ2xCLElBQUkvQiwwREFBT0EsQ0FBQytCLFdBQVcsQ0FBQy9CLDBEQUFPQSxDQUFDMEIsU0FBUztRQUNyQyxhQUFhO1FBQ2JRLGNBQWNULGdCQUFnQk0sUUFBUUo7SUFDMUM7SUFDQSxJQUFJM0IsMERBQU9BLENBQUMrQixXQUFXL0IsMERBQU9BLENBQUMwQixTQUFTO1FBQ3BDQSxPQUFPUyxPQUFPLENBQUMsU0FBVWYsSUFBSSxFQUFFUCxDQUFDO1lBQzVCLElBQUlaLElBQUk4QixRQUFRbEIsSUFBSTtnQkFDaEIsTUFBTXVCLGFBQWFMLE1BQU0sQ0FBQ2xCLEVBQUU7Z0JBQzVCLElBQUl1QixjQUFjLE9BQU9BLGVBQWUsWUFBWWhCLFFBQVEsT0FBT0EsU0FBUyxVQUFVO29CQUNsRlcsTUFBTSxDQUFDbEIsRUFBRSxHQUFHaUIsTUFBTU0sWUFBWWhCLE1BQU1PO2dCQUN4QyxPQUNLO29CQUNESSxPQUFPakIsSUFBSSxDQUFDTTtnQkFDaEI7WUFDSixPQUNLO2dCQUNEVyxNQUFNLENBQUNsQixFQUFFLEdBQUdPO1lBQ2hCO1FBQ0o7UUFDQSxPQUFPVztJQUNYO0lBQ0EsT0FBTzNCLE9BQU9pQyxJQUFJLENBQUNYLFFBQVFZLE1BQU0sQ0FBQyxTQUFVQyxHQUFHLEVBQUVwQyxHQUFHO1FBQ2hELE1BQU1xQyxRQUFRZCxNQUFNLENBQUN2QixJQUFJO1FBQ3pCLElBQUlGLElBQUlzQyxLQUFLcEMsTUFBTTtZQUNmb0MsR0FBRyxDQUFDcEMsSUFBSSxHQUFHMkIsTUFBTVMsR0FBRyxDQUFDcEMsSUFBSSxFQUFFcUMsT0FBT2I7UUFDdEMsT0FDSztZQUNEWSxHQUFHLENBQUNwQyxJQUFJLEdBQUdxQztRQUNmO1FBQ0EsT0FBT0Q7SUFDWCxHQUFHTDtBQUNQO0FBQ08sU0FBU08scUJBQXFCVixNQUFNLEVBQUVMLE1BQU07SUFDL0MsT0FBT3RCLE9BQU9pQyxJQUFJLENBQUNYLFFBQVFZLE1BQU0sQ0FBQyxTQUFVQyxHQUFHLEVBQUVwQyxHQUFHO1FBQ2hEb0MsR0FBRyxDQUFDcEMsSUFBSSxHQUFHdUIsTUFBTSxDQUFDdkIsSUFBSTtRQUN0QixPQUFPb0M7SUFDWCxHQUFHUjtBQUNQO0FBQ08sU0FBU1csT0FBT0MsR0FBRyxFQUFFQyxDQUFDLEVBQUVDLE9BQU87SUFDbEMsTUFBTUMsaUJBQWlCSCxJQUFJSSxPQUFPLENBQUMsT0FBTztJQUMxQyxJQUFJRixZQUFZLGNBQWM7UUFDMUIsZ0RBQWdEO1FBQ2hELE9BQU9DLGVBQWVDLE9BQU8sQ0FBQyxrQkFBa0JDO0lBQ3BEO0lBQ0EsUUFBUTtJQUNSLElBQUk7UUFDQSxPQUFPQyxtQkFBbUJIO0lBQzlCLEVBQ0EsT0FBT0ksR0FBRztRQUNOLE9BQU9KO0lBQ1g7QUFDSjtBQUNBLE1BQU1LLFFBQVE7QUFDUCxNQUFNQyxTQUFTLENBQUNULEtBQUtVLGlCQUFpQlIsU0FBU1MsT0FBT0M7SUFDekQsMEZBQTBGO0lBQzFGLDhEQUE4RDtJQUM5RCxJQUFJWixJQUFJeEIsTUFBTSxLQUFLLEdBQUc7UUFDbEIsT0FBT3dCO0lBQ1g7SUFDQSxJQUFJYSxTQUFTYjtJQUNiLElBQUksT0FBT0EsUUFBUSxVQUFVO1FBQ3pCYSxTQUFTQyxPQUFPbEQsU0FBUyxDQUFDUSxRQUFRLENBQUNQLElBQUksQ0FBQ21DO0lBQzVDLE9BQ0ssSUFBSSxPQUFPQSxRQUFRLFVBQVU7UUFDOUJhLFNBQVNFLE9BQU9mO0lBQ3BCO0lBQ0EsSUFBSUUsWUFBWSxjQUFjO1FBQzFCLE9BQU9jLE9BQU9ILFFBQVFULE9BQU8sQ0FBQyxtQkFBbUIsU0FBVWEsRUFBRTtZQUN6RCxPQUFPLFdBQVdDLFNBQVNELEdBQUdFLEtBQUssQ0FBQyxJQUFJLE1BQU07UUFDbEQ7SUFDSjtJQUNBLElBQUlDLE1BQU07SUFDVixJQUFLLElBQUl2QyxJQUFJLEdBQUdBLElBQUlnQyxPQUFPckMsTUFBTSxFQUFFSyxLQUFLMkIsTUFBTztRQUMzQyxNQUFNYSxVQUFVUixPQUFPckMsTUFBTSxJQUFJZ0MsUUFBUUssT0FBT00sS0FBSyxDQUFDdEMsR0FBR0EsSUFBSTJCLFNBQVNLO1FBQ3RFLE1BQU1TLE1BQU0sRUFBRTtRQUNkLElBQUssSUFBSXBELElBQUksR0FBR0EsSUFBSW1ELFFBQVE3QyxNQUFNLEVBQUUsRUFBRU4sRUFBRztZQUNyQyxJQUFJcUQsSUFBSUYsUUFBUUcsVUFBVSxDQUFDdEQ7WUFDM0IsSUFBSXFELE1BQU0sUUFBUSxJQUFJO1lBQ2xCQSxNQUFNLFFBQVEsSUFBSTtZQUNsQkEsTUFBTSxRQUFRLElBQUk7WUFDbEJBLE1BQU0sUUFBUSxJQUFJO1lBQ2pCQSxLQUFLLFFBQVFBLEtBQUssUUFBUyxNQUFNO1lBQ2pDQSxLQUFLLFFBQVFBLEtBQUssUUFBUyxNQUFNO1lBQ2pDQSxLQUFLLFFBQVFBLEtBQUssUUFBUyxNQUFNO1lBQ2pDWCxXQUFXeEQsaURBQU9BLElBQUttRSxDQUFBQSxNQUFNLFFBQVFBLE1BQU0sSUFBRyxFQUFJLE1BQU07Y0FDM0Q7Z0JBQ0VELEdBQUcsQ0FBQ0EsSUFBSTlDLE1BQU0sQ0FBQyxHQUFHNkMsUUFBUUksTUFBTSxDQUFDdkQ7Z0JBQ2pDO1lBQ0o7WUFDQSxJQUFJcUQsSUFBSSxNQUFNO2dCQUNWRCxHQUFHLENBQUNBLElBQUk5QyxNQUFNLENBQUMsR0FBR1IsU0FBUyxDQUFDdUQsRUFBRTtnQkFDOUI7WUFDSjtZQUNBLElBQUlBLElBQUksT0FBTztnQkFDWEQsR0FBRyxDQUFDQSxJQUFJOUMsTUFBTSxDQUFDLEdBQUdSLFNBQVMsQ0FBQyxPQUFRdUQsS0FBSyxFQUFHLEdBQUd2RCxTQUFTLENBQUMsT0FBUXVELElBQUksS0FBTTtnQkFDM0U7WUFDSjtZQUNBLElBQUlBLElBQUksVUFBVUEsS0FBSyxRQUFRO2dCQUMzQkQsR0FBRyxDQUFDQSxJQUFJOUMsTUFBTSxDQUFDLEdBQ1hSLFNBQVMsQ0FBQyxPQUFRdUQsS0FBSyxHQUFJLEdBQUd2RCxTQUFTLENBQUMsT0FBUSxLQUFNLElBQUssS0FBTSxHQUFHQSxTQUFTLENBQUMsT0FBUXVELElBQUksS0FBTTtnQkFDcEc7WUFDSjtZQUNBckQsS0FBSztZQUNMcUQsSUFBSSxVQUFXLEVBQUVBLElBQUksS0FBSSxLQUFNLEtBQU9GLFFBQVFHLFVBQVUsQ0FBQ3RELEtBQUssS0FBSztZQUNuRW9ELEdBQUcsQ0FBQ0EsSUFBSTlDLE1BQU0sQ0FBQyxHQUNYUixTQUFTLENBQUMsT0FBUXVELEtBQUssR0FBSSxHQUN2QnZELFNBQVMsQ0FBQyxPQUFRLEtBQU0sS0FBTSxLQUFNLEdBQ3BDQSxTQUFTLENBQUMsT0FBUSxLQUFNLElBQUssS0FBTSxHQUNuQ0EsU0FBUyxDQUFDLE9BQVF1RCxJQUFJLEtBQU07UUFDeEM7UUFDQUgsT0FBT0UsSUFBSUksSUFBSSxDQUFDO0lBQ3BCO0lBQ0EsT0FBT047QUFDWCxFQUFFO0FBQ0ssU0FBU08sUUFBUTlCLEtBQUs7SUFDekIsTUFBTXRCLFFBQVE7UUFBQztZQUFFaEIsS0FBSztnQkFBRXFFLEdBQUcvQjtZQUFNO1lBQUdsQixNQUFNO1FBQUk7S0FBRTtJQUNoRCxNQUFNa0QsT0FBTyxFQUFFO0lBQ2YsSUFBSyxJQUFJM0QsSUFBSSxHQUFHQSxJQUFJSyxNQUFNQyxNQUFNLEVBQUUsRUFBRU4sRUFBRztRQUNuQyxNQUFNTyxPQUFPRixLQUFLLENBQUNMLEVBQUU7UUFDckIsYUFBYTtRQUNiLE1BQU1YLE1BQU1rQixLQUFLbEIsR0FBRyxDQUFDa0IsS0FBS0UsSUFBSSxDQUFDO1FBQy9CLE1BQU1lLE9BQU9qQyxPQUFPaUMsSUFBSSxDQUFDbkM7UUFDekIsSUFBSyxJQUFJc0IsSUFBSSxHQUFHQSxJQUFJYSxLQUFLbEIsTUFBTSxFQUFFLEVBQUVLLEVBQUc7WUFDbEMsTUFBTXJCLE1BQU1rQyxJQUFJLENBQUNiLEVBQUU7WUFDbkIsTUFBTWlELE1BQU12RSxHQUFHLENBQUNDLElBQUk7WUFDcEIsSUFBSSxPQUFPc0UsUUFBUSxZQUFZQSxRQUFRLFFBQVFELEtBQUtFLE9BQU8sQ0FBQ0QsU0FBUyxDQUFDLEdBQUc7Z0JBQ3JFdkQsTUFBTUosSUFBSSxDQUFDO29CQUFFWixLQUFLQTtvQkFBS29CLE1BQU1uQjtnQkFBSTtnQkFDakNxRSxLQUFLMUQsSUFBSSxDQUFDMkQ7WUFDZDtRQUNKO0lBQ0o7SUFDQXhELGNBQWNDO0lBQ2QsT0FBT3NCO0FBQ1g7QUFDTyxTQUFTbUMsVUFBVXpFLEdBQUc7SUFDekIsT0FBT0UsT0FBT0csU0FBUyxDQUFDUSxRQUFRLENBQUNQLElBQUksQ0FBQ04sU0FBUztBQUNuRDtBQUNPLFNBQVMwRSxVQUFVMUUsR0FBRztJQUN6QixJQUFJLENBQUNBLE9BQU8sT0FBT0EsUUFBUSxVQUFVO1FBQ2pDLE9BQU87SUFDWDtJQUNBLE9BQU8sQ0FBQyxDQUFFQSxDQUFBQSxJQUFJMkUsV0FBVyxJQUFJM0UsSUFBSTJFLFdBQVcsQ0FBQ0MsUUFBUSxJQUFJNUUsSUFBSTJFLFdBQVcsQ0FBQ0MsUUFBUSxDQUFDNUUsSUFBRztBQUN6RjtBQUNPLFNBQVM2RSxRQUFRQyxDQUFDLEVBQUVDLENBQUM7SUFDeEIsT0FBTyxFQUFFLENBQUNoRCxNQUFNLENBQUMrQyxHQUFHQztBQUN4QjtBQUNPLFNBQVNDLFVBQVVULEdBQUcsRUFBRVUsRUFBRTtJQUM3QixJQUFJbkYsMERBQU9BLENBQUN5RSxNQUFNO1FBQ2QsTUFBTVcsU0FBUyxFQUFFO1FBQ2pCLElBQUssSUFBSXZFLElBQUksR0FBR0EsSUFBSTRELElBQUl0RCxNQUFNLEVBQUVOLEtBQUssRUFBRztZQUNwQ3VFLE9BQU90RSxJQUFJLENBQUNxRSxHQUFHVixHQUFHLENBQUM1RCxFQUFFO1FBQ3pCO1FBQ0EsT0FBT3VFO0lBQ1g7SUFDQSxPQUFPRCxHQUFHVjtBQUNkLEVBQ0Esa0NBQWtDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3lzdGVtLXByb21wdC10b29sLXdlYi8uL25vZGVfbW9kdWxlcy9vcGVuYWkvaW50ZXJuYWwvcXMvdXRpbHMubWpzPzZmZmIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUkZDMTczOCB9IGZyb20gXCIuL2Zvcm1hdHMubWpzXCI7XG5pbXBvcnQgeyBpc0FycmF5IH0gZnJvbSBcIi4uL3V0aWxzL3ZhbHVlcy5tanNcIjtcbmV4cG9ydCBsZXQgaGFzID0gKG9iaiwga2V5KSA9PiAoKGhhcyA9IE9iamVjdC5oYXNPd24gPz8gRnVuY3Rpb24ucHJvdG90eXBlLmNhbGwuYmluZChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5KSksXG4gICAgaGFzKG9iaiwga2V5KSk7XG5jb25zdCBoZXhfdGFibGUgPSAvKiBAX19QVVJFX18gKi8gKCgpID0+IHtcbiAgICBjb25zdCBhcnJheSA9IFtdO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgMjU2OyArK2kpIHtcbiAgICAgICAgYXJyYXkucHVzaCgnJScgKyAoKGkgPCAxNiA/ICcwJyA6ICcnKSArIGkudG9TdHJpbmcoMTYpKS50b1VwcGVyQ2FzZSgpKTtcbiAgICB9XG4gICAgcmV0dXJuIGFycmF5O1xufSkoKTtcbmZ1bmN0aW9uIGNvbXBhY3RfcXVldWUocXVldWUpIHtcbiAgICB3aGlsZSAocXVldWUubGVuZ3RoID4gMSkge1xuICAgICAgICBjb25zdCBpdGVtID0gcXVldWUucG9wKCk7XG4gICAgICAgIGlmICghaXRlbSlcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICBjb25zdCBvYmogPSBpdGVtLm9ialtpdGVtLnByb3BdO1xuICAgICAgICBpZiAoaXNBcnJheShvYmopKSB7XG4gICAgICAgICAgICBjb25zdCBjb21wYWN0ZWQgPSBbXTtcbiAgICAgICAgICAgIGZvciAobGV0IGogPSAwOyBqIDwgb2JqLmxlbmd0aDsgKytqKSB7XG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBvYmpbal0gIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbXBhY3RlZC5wdXNoKG9ialtqXSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gQHRzLWlnbm9yZVxuICAgICAgICAgICAgaXRlbS5vYmpbaXRlbS5wcm9wXSA9IGNvbXBhY3RlZDtcbiAgICAgICAgfVxuICAgIH1cbn1cbmZ1bmN0aW9uIGFycmF5X3RvX29iamVjdChzb3VyY2UsIG9wdGlvbnMpIHtcbiAgICBjb25zdCBvYmogPSBvcHRpb25zICYmIG9wdGlvbnMucGxhaW5PYmplY3RzID8gT2JqZWN0LmNyZWF0ZShudWxsKSA6IHt9O1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgc291cmNlLmxlbmd0aDsgKytpKSB7XG4gICAgICAgIGlmICh0eXBlb2Ygc291cmNlW2ldICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgb2JqW2ldID0gc291cmNlW2ldO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBvYmo7XG59XG5leHBvcnQgZnVuY3Rpb24gbWVyZ2UodGFyZ2V0LCBzb3VyY2UsIG9wdGlvbnMgPSB7fSkge1xuICAgIGlmICghc291cmNlKSB7XG4gICAgICAgIHJldHVybiB0YXJnZXQ7XG4gICAgfVxuICAgIGlmICh0eXBlb2Ygc291cmNlICE9PSAnb2JqZWN0Jykge1xuICAgICAgICBpZiAoaXNBcnJheSh0YXJnZXQpKSB7XG4gICAgICAgICAgICB0YXJnZXQucHVzaChzb3VyY2UpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHRhcmdldCAmJiB0eXBlb2YgdGFyZ2V0ID09PSAnb2JqZWN0Jykge1xuICAgICAgICAgICAgaWYgKChvcHRpb25zICYmIChvcHRpb25zLnBsYWluT2JqZWN0cyB8fCBvcHRpb25zLmFsbG93UHJvdG90eXBlcykpIHx8ICFoYXMoT2JqZWN0LnByb3RvdHlwZSwgc291cmNlKSkge1xuICAgICAgICAgICAgICAgIHRhcmdldFtzb3VyY2VdID0gdHJ1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiBbdGFyZ2V0LCBzb3VyY2VdO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0YXJnZXQ7XG4gICAgfVxuICAgIGlmICghdGFyZ2V0IHx8IHR5cGVvZiB0YXJnZXQgIT09ICdvYmplY3QnKSB7XG4gICAgICAgIHJldHVybiBbdGFyZ2V0XS5jb25jYXQoc291cmNlKTtcbiAgICB9XG4gICAgbGV0IG1lcmdlVGFyZ2V0ID0gdGFyZ2V0O1xuICAgIGlmIChpc0FycmF5KHRhcmdldCkgJiYgIWlzQXJyYXkoc291cmNlKSkge1xuICAgICAgICAvLyBAdHMtaWdub3JlXG4gICAgICAgIG1lcmdlVGFyZ2V0ID0gYXJyYXlfdG9fb2JqZWN0KHRhcmdldCwgb3B0aW9ucyk7XG4gICAgfVxuICAgIGlmIChpc0FycmF5KHRhcmdldCkgJiYgaXNBcnJheShzb3VyY2UpKSB7XG4gICAgICAgIHNvdXJjZS5mb3JFYWNoKGZ1bmN0aW9uIChpdGVtLCBpKSB7XG4gICAgICAgICAgICBpZiAoaGFzKHRhcmdldCwgaSkpIHtcbiAgICAgICAgICAgICAgICBjb25zdCB0YXJnZXRJdGVtID0gdGFyZ2V0W2ldO1xuICAgICAgICAgICAgICAgIGlmICh0YXJnZXRJdGVtICYmIHR5cGVvZiB0YXJnZXRJdGVtID09PSAnb2JqZWN0JyAmJiBpdGVtICYmIHR5cGVvZiBpdGVtID09PSAnb2JqZWN0Jykge1xuICAgICAgICAgICAgICAgICAgICB0YXJnZXRbaV0gPSBtZXJnZSh0YXJnZXRJdGVtLCBpdGVtLCBvcHRpb25zKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHRhcmdldC5wdXNoKGl0ZW0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHRhcmdldFtpXSA9IGl0ZW07XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gdGFyZ2V0O1xuICAgIH1cbiAgICByZXR1cm4gT2JqZWN0LmtleXMoc291cmNlKS5yZWR1Y2UoZnVuY3Rpb24gKGFjYywga2V5KSB7XG4gICAgICAgIGNvbnN0IHZhbHVlID0gc291cmNlW2tleV07XG4gICAgICAgIGlmIChoYXMoYWNjLCBrZXkpKSB7XG4gICAgICAgICAgICBhY2Nba2V5XSA9IG1lcmdlKGFjY1trZXldLCB2YWx1ZSwgb3B0aW9ucyk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBhY2Nba2V5XSA9IHZhbHVlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBhY2M7XG4gICAgfSwgbWVyZ2VUYXJnZXQpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGFzc2lnbl9zaW5nbGVfc291cmNlKHRhcmdldCwgc291cmNlKSB7XG4gICAgcmV0dXJuIE9iamVjdC5rZXlzKHNvdXJjZSkucmVkdWNlKGZ1bmN0aW9uIChhY2MsIGtleSkge1xuICAgICAgICBhY2Nba2V5XSA9IHNvdXJjZVtrZXldO1xuICAgICAgICByZXR1cm4gYWNjO1xuICAgIH0sIHRhcmdldCk7XG59XG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlKHN0ciwgXywgY2hhcnNldCkge1xuICAgIGNvbnN0IHN0cldpdGhvdXRQbHVzID0gc3RyLnJlcGxhY2UoL1xcKy9nLCAnICcpO1xuICAgIGlmIChjaGFyc2V0ID09PSAnaXNvLTg4NTktMScpIHtcbiAgICAgICAgLy8gdW5lc2NhcGUgbmV2ZXIgdGhyb3dzLCBubyB0cnkuLi5jYXRjaCBuZWVkZWQ6XG4gICAgICAgIHJldHVybiBzdHJXaXRob3V0UGx1cy5yZXBsYWNlKC8lWzAtOWEtZl17Mn0vZ2ksIHVuZXNjYXBlKTtcbiAgICB9XG4gICAgLy8gdXRmLThcbiAgICB0cnkge1xuICAgICAgICByZXR1cm4gZGVjb2RlVVJJQ29tcG9uZW50KHN0cldpdGhvdXRQbHVzKTtcbiAgICB9XG4gICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgcmV0dXJuIHN0cldpdGhvdXRQbHVzO1xuICAgIH1cbn1cbmNvbnN0IGxpbWl0ID0gMTAyNDtcbmV4cG9ydCBjb25zdCBlbmNvZGUgPSAoc3RyLCBfZGVmYXVsdEVuY29kZXIsIGNoYXJzZXQsIF9raW5kLCBmb3JtYXQpID0+IHtcbiAgICAvLyBUaGlzIGNvZGUgd2FzIG9yaWdpbmFsbHkgd3JpdHRlbiBieSBCcmlhbiBXaGl0ZSBmb3IgdGhlIGlvLmpzIGNvcmUgcXVlcnlzdHJpbmcgbGlicmFyeS5cbiAgICAvLyBJdCBoYXMgYmVlbiBhZGFwdGVkIGhlcmUgZm9yIHN0cmljdGVyIGFkaGVyZW5jZSB0byBSRkMgMzk4NlxuICAgIGlmIChzdHIubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIHJldHVybiBzdHI7XG4gICAgfVxuICAgIGxldCBzdHJpbmcgPSBzdHI7XG4gICAgaWYgKHR5cGVvZiBzdHIgPT09ICdzeW1ib2wnKSB7XG4gICAgICAgIHN0cmluZyA9IFN5bWJvbC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChzdHIpO1xuICAgIH1cbiAgICBlbHNlIGlmICh0eXBlb2Ygc3RyICE9PSAnc3RyaW5nJykge1xuICAgICAgICBzdHJpbmcgPSBTdHJpbmcoc3RyKTtcbiAgICB9XG4gICAgaWYgKGNoYXJzZXQgPT09ICdpc28tODg1OS0xJykge1xuICAgICAgICByZXR1cm4gZXNjYXBlKHN0cmluZykucmVwbGFjZSgvJXVbMC05YS1mXXs0fS9naSwgZnVuY3Rpb24gKCQwKSB7XG4gICAgICAgICAgICByZXR1cm4gJyUyNiUyMycgKyBwYXJzZUludCgkMC5zbGljZSgyKSwgMTYpICsgJyUzQic7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBsZXQgb3V0ID0gJyc7XG4gICAgZm9yIChsZXQgaiA9IDA7IGogPCBzdHJpbmcubGVuZ3RoOyBqICs9IGxpbWl0KSB7XG4gICAgICAgIGNvbnN0IHNlZ21lbnQgPSBzdHJpbmcubGVuZ3RoID49IGxpbWl0ID8gc3RyaW5nLnNsaWNlKGosIGogKyBsaW1pdCkgOiBzdHJpbmc7XG4gICAgICAgIGNvbnN0IGFyciA9IFtdO1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHNlZ21lbnQubGVuZ3RoOyArK2kpIHtcbiAgICAgICAgICAgIGxldCBjID0gc2VnbWVudC5jaGFyQ29kZUF0KGkpO1xuICAgICAgICAgICAgaWYgKGMgPT09IDB4MmQgfHwgLy8gLVxuICAgICAgICAgICAgICAgIGMgPT09IDB4MmUgfHwgLy8gLlxuICAgICAgICAgICAgICAgIGMgPT09IDB4NWYgfHwgLy8gX1xuICAgICAgICAgICAgICAgIGMgPT09IDB4N2UgfHwgLy8gflxuICAgICAgICAgICAgICAgIChjID49IDB4MzAgJiYgYyA8PSAweDM5KSB8fCAvLyAwLTlcbiAgICAgICAgICAgICAgICAoYyA+PSAweDQxICYmIGMgPD0gMHg1YSkgfHwgLy8gYS16XG4gICAgICAgICAgICAgICAgKGMgPj0gMHg2MSAmJiBjIDw9IDB4N2EpIHx8IC8vIEEtWlxuICAgICAgICAgICAgICAgIChmb3JtYXQgPT09IFJGQzE3MzggJiYgKGMgPT09IDB4MjggfHwgYyA9PT0gMHgyOSkpIC8vICggKVxuICAgICAgICAgICAgKSB7XG4gICAgICAgICAgICAgICAgYXJyW2Fyci5sZW5ndGhdID0gc2VnbWVudC5jaGFyQXQoaSk7XG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoYyA8IDB4ODApIHtcbiAgICAgICAgICAgICAgICBhcnJbYXJyLmxlbmd0aF0gPSBoZXhfdGFibGVbY107XG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoYyA8IDB4ODAwKSB7XG4gICAgICAgICAgICAgICAgYXJyW2Fyci5sZW5ndGhdID0gaGV4X3RhYmxlWzB4YzAgfCAoYyA+PiA2KV0gKyBoZXhfdGFibGVbMHg4MCB8IChjICYgMHgzZildO1xuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGMgPCAweGQ4MDAgfHwgYyA+PSAweGUwMDApIHtcbiAgICAgICAgICAgICAgICBhcnJbYXJyLmxlbmd0aF0gPVxuICAgICAgICAgICAgICAgICAgICBoZXhfdGFibGVbMHhlMCB8IChjID4+IDEyKV0gKyBoZXhfdGFibGVbMHg4MCB8ICgoYyA+PiA2KSAmIDB4M2YpXSArIGhleF90YWJsZVsweDgwIHwgKGMgJiAweDNmKV07XG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpICs9IDE7XG4gICAgICAgICAgICBjID0gMHgxMDAwMCArICgoKGMgJiAweDNmZikgPDwgMTApIHwgKHNlZ21lbnQuY2hhckNvZGVBdChpKSAmIDB4M2ZmKSk7XG4gICAgICAgICAgICBhcnJbYXJyLmxlbmd0aF0gPVxuICAgICAgICAgICAgICAgIGhleF90YWJsZVsweGYwIHwgKGMgPj4gMTgpXSArXG4gICAgICAgICAgICAgICAgICAgIGhleF90YWJsZVsweDgwIHwgKChjID4+IDEyKSAmIDB4M2YpXSArXG4gICAgICAgICAgICAgICAgICAgIGhleF90YWJsZVsweDgwIHwgKChjID4+IDYpICYgMHgzZildICtcbiAgICAgICAgICAgICAgICAgICAgaGV4X3RhYmxlWzB4ODAgfCAoYyAmIDB4M2YpXTtcbiAgICAgICAgfVxuICAgICAgICBvdXQgKz0gYXJyLmpvaW4oJycpO1xuICAgIH1cbiAgICByZXR1cm4gb3V0O1xufTtcbmV4cG9ydCBmdW5jdGlvbiBjb21wYWN0KHZhbHVlKSB7XG4gICAgY29uc3QgcXVldWUgPSBbeyBvYmo6IHsgbzogdmFsdWUgfSwgcHJvcDogJ28nIH1dO1xuICAgIGNvbnN0IHJlZnMgPSBbXTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHF1ZXVlLmxlbmd0aDsgKytpKSB7XG4gICAgICAgIGNvbnN0IGl0ZW0gPSBxdWV1ZVtpXTtcbiAgICAgICAgLy8gQHRzLWlnbm9yZVxuICAgICAgICBjb25zdCBvYmogPSBpdGVtLm9ialtpdGVtLnByb3BdO1xuICAgICAgICBjb25zdCBrZXlzID0gT2JqZWN0LmtleXMob2JqKTtcbiAgICAgICAgZm9yIChsZXQgaiA9IDA7IGogPCBrZXlzLmxlbmd0aDsgKytqKSB7XG4gICAgICAgICAgICBjb25zdCBrZXkgPSBrZXlzW2pdO1xuICAgICAgICAgICAgY29uc3QgdmFsID0gb2JqW2tleV07XG4gICAgICAgICAgICBpZiAodHlwZW9mIHZhbCA9PT0gJ29iamVjdCcgJiYgdmFsICE9PSBudWxsICYmIHJlZnMuaW5kZXhPZih2YWwpID09PSAtMSkge1xuICAgICAgICAgICAgICAgIHF1ZXVlLnB1c2goeyBvYmo6IG9iaiwgcHJvcDoga2V5IH0pO1xuICAgICAgICAgICAgICAgIHJlZnMucHVzaCh2YWwpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGNvbXBhY3RfcXVldWUocXVldWUpO1xuICAgIHJldHVybiB2YWx1ZTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc19yZWdleHAob2JqKSB7XG4gICAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvYmopID09PSAnW29iamVjdCBSZWdFeHBdJztcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc19idWZmZXIob2JqKSB7XG4gICAgaWYgKCFvYmogfHwgdHlwZW9mIG9iaiAhPT0gJ29iamVjdCcpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICByZXR1cm4gISEob2JqLmNvbnN0cnVjdG9yICYmIG9iai5jb25zdHJ1Y3Rvci5pc0J1ZmZlciAmJiBvYmouY29uc3RydWN0b3IuaXNCdWZmZXIob2JqKSk7XG59XG5leHBvcnQgZnVuY3Rpb24gY29tYmluZShhLCBiKSB7XG4gICAgcmV0dXJuIFtdLmNvbmNhdChhLCBiKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBtYXliZV9tYXAodmFsLCBmbikge1xuICAgIGlmIChpc0FycmF5KHZhbCkpIHtcbiAgICAgICAgY29uc3QgbWFwcGVkID0gW107XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdmFsLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgICAgICAgICBtYXBwZWQucHVzaChmbih2YWxbaV0pKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbWFwcGVkO1xuICAgIH1cbiAgICByZXR1cm4gZm4odmFsKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXV0aWxzLm1qcy5tYXAiXSwibmFtZXMiOlsiUkZDMTczOCIsImlzQXJyYXkiLCJoYXMiLCJvYmoiLCJrZXkiLCJPYmplY3QiLCJoYXNPd24iLCJGdW5jdGlvbiIsInByb3RvdHlwZSIsImNhbGwiLCJiaW5kIiwiaGFzT3duUHJvcGVydHkiLCJoZXhfdGFibGUiLCJhcnJheSIsImkiLCJwdXNoIiwidG9TdHJpbmciLCJ0b1VwcGVyQ2FzZSIsImNvbXBhY3RfcXVldWUiLCJxdWV1ZSIsImxlbmd0aCIsIml0ZW0iLCJwb3AiLCJwcm9wIiwiY29tcGFjdGVkIiwiaiIsImFycmF5X3RvX29iamVjdCIsInNvdXJjZSIsIm9wdGlvbnMiLCJwbGFpbk9iamVjdHMiLCJjcmVhdGUiLCJtZXJnZSIsInRhcmdldCIsImFsbG93UHJvdG90eXBlcyIsImNvbmNhdCIsIm1lcmdlVGFyZ2V0IiwiZm9yRWFjaCIsInRhcmdldEl0ZW0iLCJrZXlzIiwicmVkdWNlIiwiYWNjIiwidmFsdWUiLCJhc3NpZ25fc2luZ2xlX3NvdXJjZSIsImRlY29kZSIsInN0ciIsIl8iLCJjaGFyc2V0Iiwic3RyV2l0aG91dFBsdXMiLCJyZXBsYWNlIiwidW5lc2NhcGUiLCJkZWNvZGVVUklDb21wb25lbnQiLCJlIiwibGltaXQiLCJlbmNvZGUiLCJfZGVmYXVsdEVuY29kZXIiLCJfa2luZCIsImZvcm1hdCIsInN0cmluZyIsIlN5bWJvbCIsIlN0cmluZyIsImVzY2FwZSIsIiQwIiwicGFyc2VJbnQiLCJzbGljZSIsIm91dCIsInNlZ21lbnQiLCJhcnIiLCJjIiwiY2hhckNvZGVBdCIsImNoYXJBdCIsImpvaW4iLCJjb21wYWN0IiwibyIsInJlZnMiLCJ2YWwiLCJpbmRleE9mIiwiaXNfcmVnZXhwIiwiaXNfYnVmZmVyIiwiY29uc3RydWN0b3IiLCJpc0J1ZmZlciIsImNvbWJpbmUiLCJhIiwiYiIsIm1heWJlX21hcCIsImZuIiwibWFwcGVkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/internal/qs/utils.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/internal/request-options.mjs":
/*!**********************************************************!*\
  !*** ./node_modules/openai/internal/request-options.mjs ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FallbackEncoder: () => (/* binding */ FallbackEncoder)\n/* harmony export */ });\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nconst FallbackEncoder = ({ headers, body })=>{\n    return {\n        bodyHeaders: {\n            \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n    };\n}; //# sourceMappingURL=request-options.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvb3BlbmFpL2ludGVybmFsL3JlcXVlc3Qtb3B0aW9ucy5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLHNGQUFzRjtBQUMvRSxNQUFNQSxrQkFBa0IsQ0FBQyxFQUFFQyxPQUFPLEVBQUVDLElBQUksRUFBRTtJQUM3QyxPQUFPO1FBQ0hDLGFBQWE7WUFDVCxnQkFBZ0I7UUFDcEI7UUFDQUQsTUFBTUUsS0FBS0MsU0FBUyxDQUFDSDtJQUN6QjtBQUNKLEVBQUUsQ0FDRiw0Q0FBNEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zeXN0ZW0tcHJvbXB0LXRvb2wtd2ViLy4vbm9kZV9tb2R1bGVzL29wZW5haS9pbnRlcm5hbC9yZXF1ZXN0LW9wdGlvbnMubWpzP2UyZmQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZSBnZW5lcmF0ZWQgZnJvbSBvdXIgT3BlbkFQSSBzcGVjIGJ5IFN0YWlubGVzcy4gU2VlIENPTlRSSUJVVElORy5tZCBmb3IgZGV0YWlscy5cbmV4cG9ydCBjb25zdCBGYWxsYmFja0VuY29kZXIgPSAoeyBoZWFkZXJzLCBib2R5IH0pID0+IHtcbiAgICByZXR1cm4ge1xuICAgICAgICBib2R5SGVhZGVyczoge1xuICAgICAgICAgICAgJ2NvbnRlbnQtdHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgICAgfSxcbiAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoYm9keSksXG4gICAgfTtcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZXF1ZXN0LW9wdGlvbnMubWpzLm1hcCJdLCJuYW1lcyI6WyJGYWxsYmFja0VuY29kZXIiLCJoZWFkZXJzIiwiYm9keSIsImJvZHlIZWFkZXJzIiwiSlNPTiIsInN0cmluZ2lmeSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/internal/request-options.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/internal/shims.mjs":
/*!************************************************!*\
  !*** ./node_modules/openai/internal/shims.mjs ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CancelReadableStream: () => (/* binding */ CancelReadableStream),\n/* harmony export */   ReadableStreamFrom: () => (/* binding */ ReadableStreamFrom),\n/* harmony export */   ReadableStreamToAsyncIterable: () => (/* binding */ ReadableStreamToAsyncIterable),\n/* harmony export */   getDefaultFetch: () => (/* binding */ getDefaultFetch),\n/* harmony export */   makeReadableStream: () => (/* binding */ makeReadableStream)\n/* harmony export */ });\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nfunction getDefaultFetch() {\n    if (typeof fetch !== \"undefined\") {\n        return fetch;\n    }\n    throw new Error(\"`fetch` is not defined as a global; Either pass `fetch` to the client, `new OpenAI({ fetch })` or polyfill the global, `globalThis.fetch = fetch`\");\n}\nfunction makeReadableStream(...args) {\n    const ReadableStream = globalThis.ReadableStream;\n    if (typeof ReadableStream === \"undefined\") {\n        // Note: All of the platforms / runtimes we officially support already define\n        // `ReadableStream` as a global, so this should only ever be hit on unsupported runtimes.\n        throw new Error(\"`ReadableStream` is not defined as a global; You will need to polyfill it, `globalThis.ReadableStream = ReadableStream`\");\n    }\n    return new ReadableStream(...args);\n}\nfunction ReadableStreamFrom(iterable) {\n    let iter = Symbol.asyncIterator in iterable ? iterable[Symbol.asyncIterator]() : iterable[Symbol.iterator]();\n    return makeReadableStream({\n        start () {},\n        async pull (controller) {\n            const { done, value } = await iter.next();\n            if (done) {\n                controller.close();\n            } else {\n                controller.enqueue(value);\n            }\n        },\n        async cancel () {\n            await iter.return?.();\n        }\n    });\n}\n/**\n * Most browsers don't yet have async iterable support for ReadableStream,\n * and Node has a very different way of reading bytes from its \"ReadableStream\".\n *\n * This polyfill was pulled from https://github.com/MattiasBuelens/web-streams-polyfill/pull/122#issuecomment-1627354490\n */ function ReadableStreamToAsyncIterable(stream) {\n    if (stream[Symbol.asyncIterator]) return stream;\n    const reader = stream.getReader();\n    return {\n        async next () {\n            try {\n                const result = await reader.read();\n                if (result?.done) reader.releaseLock(); // release lock when stream becomes closed\n                return result;\n            } catch (e) {\n                reader.releaseLock(); // release lock when stream becomes errored\n                throw e;\n            }\n        },\n        async return () {\n            const cancelPromise = reader.cancel();\n            reader.releaseLock();\n            await cancelPromise;\n            return {\n                done: true,\n                value: undefined\n            };\n        },\n        [Symbol.asyncIterator] () {\n            return this;\n        }\n    };\n}\n/**\n * Cancels a ReadableStream we don't need to consume.\n * See https://undici.nodejs.org/#/?id=garbage-collection\n */ async function CancelReadableStream(stream) {\n    if (stream === null || typeof stream !== \"object\") return;\n    if (stream[Symbol.asyncIterator]) {\n        await stream[Symbol.asyncIterator]().return?.();\n        return;\n    }\n    const reader = stream.getReader();\n    const cancelPromise = reader.cancel();\n    reader.releaseLock();\n    await cancelPromise;\n} //# sourceMappingURL=shims.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvb3BlbmFpL2ludGVybmFsL3NoaW1zLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBLHNGQUFzRjtBQUMvRSxTQUFTQTtJQUNaLElBQUksT0FBT0MsVUFBVSxhQUFhO1FBQzlCLE9BQU9BO0lBQ1g7SUFDQSxNQUFNLElBQUlDLE1BQU07QUFDcEI7QUFDTyxTQUFTQyxtQkFBbUIsR0FBR0MsSUFBSTtJQUN0QyxNQUFNQyxpQkFBaUJDLFdBQVdELGNBQWM7SUFDaEQsSUFBSSxPQUFPQSxtQkFBbUIsYUFBYTtRQUN2Qyw2RUFBNkU7UUFDN0UseUZBQXlGO1FBQ3pGLE1BQU0sSUFBSUgsTUFBTTtJQUNwQjtJQUNBLE9BQU8sSUFBSUcsa0JBQWtCRDtBQUNqQztBQUNPLFNBQVNHLG1CQUFtQkMsUUFBUTtJQUN2QyxJQUFJQyxPQUFPQyxPQUFPQyxhQUFhLElBQUlILFdBQVdBLFFBQVEsQ0FBQ0UsT0FBT0MsYUFBYSxDQUFDLEtBQUtILFFBQVEsQ0FBQ0UsT0FBT0UsUUFBUSxDQUFDO0lBQzFHLE9BQU9ULG1CQUFtQjtRQUN0QlUsVUFBVTtRQUNWLE1BQU1DLE1BQUtDLFVBQVU7WUFDakIsTUFBTSxFQUFFQyxJQUFJLEVBQUVDLEtBQUssRUFBRSxHQUFHLE1BQU1SLEtBQUtTLElBQUk7WUFDdkMsSUFBSUYsTUFBTTtnQkFDTkQsV0FBV0ksS0FBSztZQUNwQixPQUNLO2dCQUNESixXQUFXSyxPQUFPLENBQUNIO1lBQ3ZCO1FBQ0o7UUFDQSxNQUFNSTtZQUNGLE1BQU1aLEtBQUthLE1BQU07UUFDckI7SUFDSjtBQUNKO0FBQ0E7Ozs7O0NBS0MsR0FDTSxTQUFTQyw4QkFBOEJDLE1BQU07SUFDaEQsSUFBSUEsTUFBTSxDQUFDZCxPQUFPQyxhQUFhLENBQUMsRUFDNUIsT0FBT2E7SUFDWCxNQUFNQyxTQUFTRCxPQUFPRSxTQUFTO0lBQy9CLE9BQU87UUFDSCxNQUFNUjtZQUNGLElBQUk7Z0JBQ0EsTUFBTVMsU0FBUyxNQUFNRixPQUFPRyxJQUFJO2dCQUNoQyxJQUFJRCxRQUFRWCxNQUNSUyxPQUFPSSxXQUFXLElBQUksMENBQTBDO2dCQUNwRSxPQUFPRjtZQUNYLEVBQ0EsT0FBT0csR0FBRztnQkFDTkwsT0FBT0ksV0FBVyxJQUFJLDJDQUEyQztnQkFDakUsTUFBTUM7WUFDVjtRQUNKO1FBQ0EsTUFBTVI7WUFDRixNQUFNUyxnQkFBZ0JOLE9BQU9KLE1BQU07WUFDbkNJLE9BQU9JLFdBQVc7WUFDbEIsTUFBTUU7WUFDTixPQUFPO2dCQUFFZixNQUFNO2dCQUFNQyxPQUFPZTtZQUFVO1FBQzFDO1FBQ0EsQ0FBQ3RCLE9BQU9DLGFBQWEsQ0FBQztZQUNsQixPQUFPLElBQUk7UUFDZjtJQUNKO0FBQ0o7QUFDQTs7O0NBR0MsR0FDTSxlQUFlc0IscUJBQXFCVCxNQUFNO0lBQzdDLElBQUlBLFdBQVcsUUFBUSxPQUFPQSxXQUFXLFVBQ3JDO0lBQ0osSUFBSUEsTUFBTSxDQUFDZCxPQUFPQyxhQUFhLENBQUMsRUFBRTtRQUM5QixNQUFNYSxNQUFNLENBQUNkLE9BQU9DLGFBQWEsQ0FBQyxHQUFHVyxNQUFNO1FBQzNDO0lBQ0o7SUFDQSxNQUFNRyxTQUFTRCxPQUFPRSxTQUFTO0lBQy9CLE1BQU1LLGdCQUFnQk4sT0FBT0osTUFBTTtJQUNuQ0ksT0FBT0ksV0FBVztJQUNsQixNQUFNRTtBQUNWLEVBQ0Esa0NBQWtDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3lzdGVtLXByb21wdC10b29sLXdlYi8uL25vZGVfbW9kdWxlcy9vcGVuYWkvaW50ZXJuYWwvc2hpbXMubWpzPzdhYmMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZSBnZW5lcmF0ZWQgZnJvbSBvdXIgT3BlbkFQSSBzcGVjIGJ5IFN0YWlubGVzcy4gU2VlIENPTlRSSUJVVElORy5tZCBmb3IgZGV0YWlscy5cbmV4cG9ydCBmdW5jdGlvbiBnZXREZWZhdWx0RmV0Y2goKSB7XG4gICAgaWYgKHR5cGVvZiBmZXRjaCAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgcmV0dXJuIGZldGNoO1xuICAgIH1cbiAgICB0aHJvdyBuZXcgRXJyb3IoJ2BmZXRjaGAgaXMgbm90IGRlZmluZWQgYXMgYSBnbG9iYWw7IEVpdGhlciBwYXNzIGBmZXRjaGAgdG8gdGhlIGNsaWVudCwgYG5ldyBPcGVuQUkoeyBmZXRjaCB9KWAgb3IgcG9seWZpbGwgdGhlIGdsb2JhbCwgYGdsb2JhbFRoaXMuZmV0Y2ggPSBmZXRjaGAnKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBtYWtlUmVhZGFibGVTdHJlYW0oLi4uYXJncykge1xuICAgIGNvbnN0IFJlYWRhYmxlU3RyZWFtID0gZ2xvYmFsVGhpcy5SZWFkYWJsZVN0cmVhbTtcbiAgICBpZiAodHlwZW9mIFJlYWRhYmxlU3RyZWFtID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICAvLyBOb3RlOiBBbGwgb2YgdGhlIHBsYXRmb3JtcyAvIHJ1bnRpbWVzIHdlIG9mZmljaWFsbHkgc3VwcG9ydCBhbHJlYWR5IGRlZmluZVxuICAgICAgICAvLyBgUmVhZGFibGVTdHJlYW1gIGFzIGEgZ2xvYmFsLCBzbyB0aGlzIHNob3VsZCBvbmx5IGV2ZXIgYmUgaGl0IG9uIHVuc3VwcG9ydGVkIHJ1bnRpbWVzLlxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ2BSZWFkYWJsZVN0cmVhbWAgaXMgbm90IGRlZmluZWQgYXMgYSBnbG9iYWw7IFlvdSB3aWxsIG5lZWQgdG8gcG9seWZpbGwgaXQsIGBnbG9iYWxUaGlzLlJlYWRhYmxlU3RyZWFtID0gUmVhZGFibGVTdHJlYW1gJyk7XG4gICAgfVxuICAgIHJldHVybiBuZXcgUmVhZGFibGVTdHJlYW0oLi4uYXJncyk7XG59XG5leHBvcnQgZnVuY3Rpb24gUmVhZGFibGVTdHJlYW1Gcm9tKGl0ZXJhYmxlKSB7XG4gICAgbGV0IGl0ZXIgPSBTeW1ib2wuYXN5bmNJdGVyYXRvciBpbiBpdGVyYWJsZSA/IGl0ZXJhYmxlW1N5bWJvbC5hc3luY0l0ZXJhdG9yXSgpIDogaXRlcmFibGVbU3ltYm9sLml0ZXJhdG9yXSgpO1xuICAgIHJldHVybiBtYWtlUmVhZGFibGVTdHJlYW0oe1xuICAgICAgICBzdGFydCgpIHsgfSxcbiAgICAgICAgYXN5bmMgcHVsbChjb250cm9sbGVyKSB7XG4gICAgICAgICAgICBjb25zdCB7IGRvbmUsIHZhbHVlIH0gPSBhd2FpdCBpdGVyLm5leHQoKTtcbiAgICAgICAgICAgIGlmIChkb25lKSB7XG4gICAgICAgICAgICAgICAgY29udHJvbGxlci5jbG9zZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgY29udHJvbGxlci5lbnF1ZXVlKHZhbHVlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgYXN5bmMgY2FuY2VsKCkge1xuICAgICAgICAgICAgYXdhaXQgaXRlci5yZXR1cm4/LigpO1xuICAgICAgICB9LFxuICAgIH0pO1xufVxuLyoqXG4gKiBNb3N0IGJyb3dzZXJzIGRvbid0IHlldCBoYXZlIGFzeW5jIGl0ZXJhYmxlIHN1cHBvcnQgZm9yIFJlYWRhYmxlU3RyZWFtLFxuICogYW5kIE5vZGUgaGFzIGEgdmVyeSBkaWZmZXJlbnQgd2F5IG9mIHJlYWRpbmcgYnl0ZXMgZnJvbSBpdHMgXCJSZWFkYWJsZVN0cmVhbVwiLlxuICpcbiAqIFRoaXMgcG9seWZpbGwgd2FzIHB1bGxlZCBmcm9tIGh0dHBzOi8vZ2l0aHViLmNvbS9NYXR0aWFzQnVlbGVucy93ZWItc3RyZWFtcy1wb2x5ZmlsbC9wdWxsLzEyMiNpc3N1ZWNvbW1lbnQtMTYyNzM1NDQ5MFxuICovXG5leHBvcnQgZnVuY3Rpb24gUmVhZGFibGVTdHJlYW1Ub0FzeW5jSXRlcmFibGUoc3RyZWFtKSB7XG4gICAgaWYgKHN0cmVhbVtTeW1ib2wuYXN5bmNJdGVyYXRvcl0pXG4gICAgICAgIHJldHVybiBzdHJlYW07XG4gICAgY29uc3QgcmVhZGVyID0gc3RyZWFtLmdldFJlYWRlcigpO1xuICAgIHJldHVybiB7XG4gICAgICAgIGFzeW5jIG5leHQoKSB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHJlYWRlci5yZWFkKCk7XG4gICAgICAgICAgICAgICAgaWYgKHJlc3VsdD8uZG9uZSlcbiAgICAgICAgICAgICAgICAgICAgcmVhZGVyLnJlbGVhc2VMb2NrKCk7IC8vIHJlbGVhc2UgbG9jayB3aGVuIHN0cmVhbSBiZWNvbWVzIGNsb3NlZFxuICAgICAgICAgICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICAgIHJlYWRlci5yZWxlYXNlTG9jaygpOyAvLyByZWxlYXNlIGxvY2sgd2hlbiBzdHJlYW0gYmVjb21lcyBlcnJvcmVkXG4gICAgICAgICAgICAgICAgdGhyb3cgZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgYXN5bmMgcmV0dXJuKCkge1xuICAgICAgICAgICAgY29uc3QgY2FuY2VsUHJvbWlzZSA9IHJlYWRlci5jYW5jZWwoKTtcbiAgICAgICAgICAgIHJlYWRlci5yZWxlYXNlTG9jaygpO1xuICAgICAgICAgICAgYXdhaXQgY2FuY2VsUHJvbWlzZTtcbiAgICAgICAgICAgIHJldHVybiB7IGRvbmU6IHRydWUsIHZhbHVlOiB1bmRlZmluZWQgfTtcbiAgICAgICAgfSxcbiAgICAgICAgW1N5bWJvbC5hc3luY0l0ZXJhdG9yXSgpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICB9LFxuICAgIH07XG59XG4vKipcbiAqIENhbmNlbHMgYSBSZWFkYWJsZVN0cmVhbSB3ZSBkb24ndCBuZWVkIHRvIGNvbnN1bWUuXG4gKiBTZWUgaHR0cHM6Ly91bmRpY2kubm9kZWpzLm9yZy8jLz9pZD1nYXJiYWdlLWNvbGxlY3Rpb25cbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIENhbmNlbFJlYWRhYmxlU3RyZWFtKHN0cmVhbSkge1xuICAgIGlmIChzdHJlYW0gPT09IG51bGwgfHwgdHlwZW9mIHN0cmVhbSAhPT0gJ29iamVjdCcpXG4gICAgICAgIHJldHVybjtcbiAgICBpZiAoc3RyZWFtW1N5bWJvbC5hc3luY0l0ZXJhdG9yXSkge1xuICAgICAgICBhd2FpdCBzdHJlYW1bU3ltYm9sLmFzeW5jSXRlcmF0b3JdKCkucmV0dXJuPy4oKTtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBjb25zdCByZWFkZXIgPSBzdHJlYW0uZ2V0UmVhZGVyKCk7XG4gICAgY29uc3QgY2FuY2VsUHJvbWlzZSA9IHJlYWRlci5jYW5jZWwoKTtcbiAgICByZWFkZXIucmVsZWFzZUxvY2soKTtcbiAgICBhd2FpdCBjYW5jZWxQcm9taXNlO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2hpbXMubWpzLm1hcCJdLCJuYW1lcyI6WyJnZXREZWZhdWx0RmV0Y2giLCJmZXRjaCIsIkVycm9yIiwibWFrZVJlYWRhYmxlU3RyZWFtIiwiYXJncyIsIlJlYWRhYmxlU3RyZWFtIiwiZ2xvYmFsVGhpcyIsIlJlYWRhYmxlU3RyZWFtRnJvbSIsIml0ZXJhYmxlIiwiaXRlciIsIlN5bWJvbCIsImFzeW5jSXRlcmF0b3IiLCJpdGVyYXRvciIsInN0YXJ0IiwicHVsbCIsImNvbnRyb2xsZXIiLCJkb25lIiwidmFsdWUiLCJuZXh0IiwiY2xvc2UiLCJlbnF1ZXVlIiwiY2FuY2VsIiwicmV0dXJuIiwiUmVhZGFibGVTdHJlYW1Ub0FzeW5jSXRlcmFibGUiLCJzdHJlYW0iLCJyZWFkZXIiLCJnZXRSZWFkZXIiLCJyZXN1bHQiLCJyZWFkIiwicmVsZWFzZUxvY2siLCJlIiwiY2FuY2VsUHJvbWlzZSIsInVuZGVmaW5lZCIsIkNhbmNlbFJlYWRhYmxlU3RyZWFtIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/internal/shims.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/internal/to-file.mjs":
/*!**************************************************!*\
  !*** ./node_modules/openai/internal/to-file.mjs ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   toFile: () => (/* binding */ toFile)\n/* harmony export */ });\n/* harmony import */ var _uploads_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./uploads.mjs */ \"(rsc)/./node_modules/openai/internal/uploads.mjs\");\n\n\n/**\n * This check adds the arrayBuffer() method type because it is available and used at runtime\n */ const isBlobLike = (value)=>value != null && typeof value === \"object\" && typeof value.size === \"number\" && typeof value.type === \"string\" && typeof value.text === \"function\" && typeof value.slice === \"function\" && typeof value.arrayBuffer === \"function\";\n/**\n * This check adds the arrayBuffer() method type because it is available and used at runtime\n */ const isFileLike = (value)=>value != null && typeof value === \"object\" && typeof value.name === \"string\" && typeof value.lastModified === \"number\" && isBlobLike(value);\nconst isResponseLike = (value)=>value != null && typeof value === \"object\" && typeof value.url === \"string\" && typeof value.blob === \"function\";\n/**\n * Helper for creating a {@link File} to pass to an SDK upload method from a variety of different data formats\n * @param value the raw content of the file.  Can be an {@link Uploadable}, {@link BlobLikePart}, or {@link AsyncIterable} of {@link BlobLikePart}s\n * @param {string=} name the name of the file. If omitted, toFile will try to determine a file name from bits if possible\n * @param {Object=} options additional properties\n * @param {string=} options.type the MIME type of the content\n * @param {number=} options.lastModified the last modified timestamp\n * @returns a {@link File} with the given properties\n */ async function toFile(value, name, options) {\n    (0,_uploads_mjs__WEBPACK_IMPORTED_MODULE_0__.checkFileSupport)();\n    // If it's a promise, resolve it.\n    value = await value;\n    // If we've been given a `File` we don't need to do anything\n    if (isFileLike(value)) {\n        if (value instanceof File) {\n            return value;\n        }\n        return (0,_uploads_mjs__WEBPACK_IMPORTED_MODULE_0__.makeFile)([\n            await value.arrayBuffer()\n        ], value.name);\n    }\n    if (isResponseLike(value)) {\n        const blob = await value.blob();\n        name || (name = new URL(value.url).pathname.split(/[\\\\/]/).pop());\n        return (0,_uploads_mjs__WEBPACK_IMPORTED_MODULE_0__.makeFile)(await getBytes(blob), name, options);\n    }\n    const parts = await getBytes(value);\n    name || (name = (0,_uploads_mjs__WEBPACK_IMPORTED_MODULE_0__.getName)(value));\n    if (!options?.type) {\n        const type = parts.find((part)=>typeof part === \"object\" && \"type\" in part && part.type);\n        if (typeof type === \"string\") {\n            options = {\n                ...options,\n                type\n            };\n        }\n    }\n    return (0,_uploads_mjs__WEBPACK_IMPORTED_MODULE_0__.makeFile)(parts, name, options);\n}\nasync function getBytes(value) {\n    let parts = [];\n    if (typeof value === \"string\" || ArrayBuffer.isView(value) || // includes Uint8Array, Buffer, etc.\n    value instanceof ArrayBuffer) {\n        parts.push(value);\n    } else if (isBlobLike(value)) {\n        parts.push(value instanceof Blob ? value : await value.arrayBuffer());\n    } else if ((0,_uploads_mjs__WEBPACK_IMPORTED_MODULE_0__.isAsyncIterable)(value) // includes Readable, ReadableStream, etc.\n    ) {\n        for await (const chunk of value){\n            parts.push(...await getBytes(chunk)); // TODO, consider validating?\n        }\n    } else {\n        const constructor = value?.constructor?.name;\n        throw new Error(`Unexpected data type: ${typeof value}${constructor ? `; constructor: ${constructor}` : \"\"}${propsForError(value)}`);\n    }\n    return parts;\n}\nfunction propsForError(value) {\n    if (typeof value !== \"object\" || value === null) return \"\";\n    const props = Object.getOwnPropertyNames(value);\n    return `; props: [${props.map((p)=>`\"${p}\"`).join(\", \")}]`;\n} //# sourceMappingURL=to-file.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/internal/to-file.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/internal/tslib.mjs":
/*!************************************************!*\
  !*** ./node_modules/openai/internal/tslib.mjs ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __classPrivateFieldGet: () => (/* binding */ __classPrivateFieldGet),\n/* harmony export */   __classPrivateFieldSet: () => (/* binding */ __classPrivateFieldSet)\n/* harmony export */ });\nfunction __classPrivateFieldSet(receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n}\nfunction __classPrivateFieldGet(receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvb3BlbmFpL2ludGVybmFsL3RzbGliLm1qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLFNBQVNBLHVCQUF1QkMsUUFBUSxFQUFFQyxLQUFLLEVBQUVDLEtBQUssRUFBRUMsSUFBSSxFQUFFQyxDQUFDO0lBQzNELElBQUlELFNBQVMsS0FDVCxNQUFNLElBQUlFLFVBQVU7SUFDeEIsSUFBSUYsU0FBUyxPQUFPLENBQUNDLEdBQ2pCLE1BQU0sSUFBSUMsVUFBVTtJQUN4QixJQUFJLE9BQU9KLFVBQVUsYUFBYUQsYUFBYUMsU0FBUyxDQUFDRyxJQUFJLENBQUNILE1BQU1LLEdBQUcsQ0FBQ04sV0FDcEUsTUFBTSxJQUFJSyxVQUFVO0lBQ3hCLE9BQU9GLFNBQVMsTUFBTUMsRUFBRUcsSUFBSSxDQUFDUCxVQUFVRSxTQUFTRSxJQUFLQSxFQUFFRixLQUFLLEdBQUdBLFFBQVNELE1BQU1PLEdBQUcsQ0FBQ1IsVUFBVUUsUUFBUUE7QUFDeEc7QUFDQSxTQUFTTyx1QkFBdUJULFFBQVEsRUFBRUMsS0FBSyxFQUFFRSxJQUFJLEVBQUVDLENBQUM7SUFDcEQsSUFBSUQsU0FBUyxPQUFPLENBQUNDLEdBQ2pCLE1BQU0sSUFBSUMsVUFBVTtJQUN4QixJQUFJLE9BQU9KLFVBQVUsYUFBYUQsYUFBYUMsU0FBUyxDQUFDRyxJQUFJLENBQUNILE1BQU1LLEdBQUcsQ0FBQ04sV0FDcEUsTUFBTSxJQUFJSyxVQUFVO0lBQ3hCLE9BQU9GLFNBQVMsTUFBTUMsSUFBSUQsU0FBUyxNQUFNQyxFQUFFRyxJQUFJLENBQUNQLFlBQVlJLElBQUlBLEVBQUVGLEtBQUssR0FBR0QsTUFBTVMsR0FBRyxDQUFDVjtBQUN4RjtBQUMwRCIsInNvdXJjZXMiOlsid2VicGFjazovL3N5c3RlbS1wcm9tcHQtdG9vbC13ZWIvLi9ub2RlX21vZHVsZXMvb3BlbmFpL2ludGVybmFsL3RzbGliLm1qcz84Y2Y5Il0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIF9fY2xhc3NQcml2YXRlRmllbGRTZXQocmVjZWl2ZXIsIHN0YXRlLCB2YWx1ZSwga2luZCwgZikge1xuICAgIGlmIChraW5kID09PSBcIm1cIilcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlByaXZhdGUgbWV0aG9kIGlzIG5vdCB3cml0YWJsZVwiKTtcbiAgICBpZiAoa2luZCA9PT0gXCJhXCIgJiYgIWYpXG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJQcml2YXRlIGFjY2Vzc29yIHdhcyBkZWZpbmVkIHdpdGhvdXQgYSBzZXR0ZXJcIik7XG4gICAgaWYgKHR5cGVvZiBzdGF0ZSA9PT0gXCJmdW5jdGlvblwiID8gcmVjZWl2ZXIgIT09IHN0YXRlIHx8ICFmIDogIXN0YXRlLmhhcyhyZWNlaXZlcikpXG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3Qgd3JpdGUgcHJpdmF0ZSBtZW1iZXIgdG8gYW4gb2JqZWN0IHdob3NlIGNsYXNzIGRpZCBub3QgZGVjbGFyZSBpdFwiKTtcbiAgICByZXR1cm4ga2luZCA9PT0gXCJhXCIgPyBmLmNhbGwocmVjZWl2ZXIsIHZhbHVlKSA6IGYgPyAoZi52YWx1ZSA9IHZhbHVlKSA6IHN0YXRlLnNldChyZWNlaXZlciwgdmFsdWUpLCB2YWx1ZTtcbn1cbmZ1bmN0aW9uIF9fY2xhc3NQcml2YXRlRmllbGRHZXQocmVjZWl2ZXIsIHN0YXRlLCBraW5kLCBmKSB7XG4gICAgaWYgKGtpbmQgPT09IFwiYVwiICYmICFmKVxuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiUHJpdmF0ZSBhY2Nlc3NvciB3YXMgZGVmaW5lZCB3aXRob3V0IGEgZ2V0dGVyXCIpO1xuICAgIGlmICh0eXBlb2Ygc3RhdGUgPT09IFwiZnVuY3Rpb25cIiA/IHJlY2VpdmVyICE9PSBzdGF0ZSB8fCAhZiA6ICFzdGF0ZS5oYXMocmVjZWl2ZXIpKVxuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IHJlYWQgcHJpdmF0ZSBtZW1iZXIgZnJvbSBhbiBvYmplY3Qgd2hvc2UgY2xhc3MgZGlkIG5vdCBkZWNsYXJlIGl0XCIpO1xuICAgIHJldHVybiBraW5kID09PSBcIm1cIiA/IGYgOiBraW5kID09PSBcImFcIiA/IGYuY2FsbChyZWNlaXZlcikgOiBmID8gZi52YWx1ZSA6IHN0YXRlLmdldChyZWNlaXZlcik7XG59XG5leHBvcnQgeyBfX2NsYXNzUHJpdmF0ZUZpZWxkU2V0LCBfX2NsYXNzUHJpdmF0ZUZpZWxkR2V0IH07XG4iXSwibmFtZXMiOlsiX19jbGFzc1ByaXZhdGVGaWVsZFNldCIsInJlY2VpdmVyIiwic3RhdGUiLCJ2YWx1ZSIsImtpbmQiLCJmIiwiVHlwZUVycm9yIiwiaGFzIiwiY2FsbCIsInNldCIsIl9fY2xhc3NQcml2YXRlRmllbGRHZXQiLCJnZXQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/internal/tslib.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/internal/uploads.mjs":
/*!**************************************************!*\
  !*** ./node_modules/openai/internal/uploads.mjs ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   checkFileSupport: () => (/* binding */ checkFileSupport),\n/* harmony export */   createForm: () => (/* binding */ createForm),\n/* harmony export */   getName: () => (/* binding */ getName),\n/* harmony export */   isAsyncIterable: () => (/* binding */ isAsyncIterable),\n/* harmony export */   makeFile: () => (/* binding */ makeFile),\n/* harmony export */   maybeMultipartFormRequestOptions: () => (/* binding */ maybeMultipartFormRequestOptions),\n/* harmony export */   multipartFormRequestOptions: () => (/* binding */ multipartFormRequestOptions)\n/* harmony export */ });\n/* harmony import */ var _shims_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./shims.mjs */ \"(rsc)/./node_modules/openai/internal/shims.mjs\");\n\nconst checkFileSupport = ()=>{\n    if (typeof File === \"undefined\") {\n        const { process } = globalThis;\n        const isOldNode = typeof process?.versions?.node === \"string\" && parseInt(process.versions.node.split(\".\")) < 20;\n        throw new Error(\"`File` is not defined as a global, which is required for file uploads.\" + (isOldNode ? \" Update to Node 20 LTS or newer, or set `globalThis.File` to `import('node:buffer').File`.\" : \"\"));\n    }\n};\n/**\n * Construct a `File` instance. This is used to ensure a helpful error is thrown\n * for environments that don't define a global `File` yet.\n */ function makeFile(fileBits, fileName, options) {\n    checkFileSupport();\n    return new File(fileBits, fileName ?? \"unknown_file\", options);\n}\nfunction getName(value) {\n    return (typeof value === \"object\" && value !== null && (\"name\" in value && value.name && String(value.name) || \"url\" in value && value.url && String(value.url) || \"filename\" in value && value.filename && String(value.filename) || \"path\" in value && value.path && String(value.path)) || \"\").split(/[\\\\/]/).pop() || undefined;\n}\nconst isAsyncIterable = (value)=>value != null && typeof value === \"object\" && typeof value[Symbol.asyncIterator] === \"function\";\n/**\n * Returns a multipart/form-data request if any part of the given request body contains a File / Blob value.\n * Otherwise returns the request as is.\n */ const maybeMultipartFormRequestOptions = async (opts, fetch)=>{\n    if (!hasUploadableValue(opts.body)) return opts;\n    return {\n        ...opts,\n        body: await createForm(opts.body, fetch)\n    };\n};\nconst multipartFormRequestOptions = async (opts, fetch)=>{\n    return {\n        ...opts,\n        body: await createForm(opts.body, fetch)\n    };\n};\nconst supportsFormDataMap = /* @__PURE__ */ new WeakMap();\n/**\n * node-fetch doesn't support the global FormData object in recent node versions. Instead of sending\n * properly-encoded form data, it just stringifies the object, resulting in a request body of \"[object FormData]\".\n * This function detects if the fetch function provided supports the global FormData object to avoid\n * confusing error messages later on.\n */ function supportsFormData(fetchObject) {\n    const fetch = typeof fetchObject === \"function\" ? fetchObject : fetchObject.fetch;\n    const cached = supportsFormDataMap.get(fetch);\n    if (cached) return cached;\n    const promise = (async ()=>{\n        try {\n            const FetchResponse = \"Response\" in fetch ? fetch.Response : (await fetch(\"data:,\")).constructor;\n            const data = new FormData();\n            if (data.toString() === await new FetchResponse(data).text()) {\n                return false;\n            }\n            return true;\n        } catch  {\n            // avoid false negatives\n            return true;\n        }\n    })();\n    supportsFormDataMap.set(fetch, promise);\n    return promise;\n}\nconst createForm = async (body, fetch)=>{\n    if (!await supportsFormData(fetch)) {\n        throw new TypeError(\"The provided fetch function does not support file uploads with the current global FormData class.\");\n    }\n    const form = new FormData();\n    await Promise.all(Object.entries(body || {}).map(([key, value])=>addFormValue(form, key, value)));\n    return form;\n};\n// We check for Blob not File because Bun.File doesn't inherit from File,\n// but they both inherit from Blob and have a `name` property at runtime.\nconst isNamedBlob = (value)=>value instanceof Blob && \"name\" in value;\nconst isUploadable = (value)=>typeof value === \"object\" && value !== null && (value instanceof Response || isAsyncIterable(value) || isNamedBlob(value));\nconst hasUploadableValue = (value)=>{\n    if (isUploadable(value)) return true;\n    if (Array.isArray(value)) return value.some(hasUploadableValue);\n    if (value && typeof value === \"object\") {\n        for(const k in value){\n            if (hasUploadableValue(value[k])) return true;\n        }\n    }\n    return false;\n};\nconst addFormValue = async (form, key, value)=>{\n    if (value === undefined) return;\n    if (value == null) {\n        throw new TypeError(`Received null for \"${key}\"; to pass null in FormData, you must use the string 'null'`);\n    }\n    // TODO: make nested formats configurable\n    if (typeof value === \"string\" || typeof value === \"number\" || typeof value === \"boolean\") {\n        form.append(key, String(value));\n    } else if (value instanceof Response) {\n        form.append(key, makeFile([\n            await value.blob()\n        ], getName(value)));\n    } else if (isAsyncIterable(value)) {\n        form.append(key, makeFile([\n            await new Response((0,_shims_mjs__WEBPACK_IMPORTED_MODULE_0__.ReadableStreamFrom)(value)).blob()\n        ], getName(value)));\n    } else if (isNamedBlob(value)) {\n        form.append(key, value, getName(value));\n    } else if (Array.isArray(value)) {\n        await Promise.all(value.map((entry)=>addFormValue(form, key + \"[]\", entry)));\n    } else if (typeof value === \"object\") {\n        await Promise.all(Object.entries(value).map(([name, prop])=>addFormValue(form, `${key}[${name}]`, prop)));\n    } else {\n        throw new TypeError(`Invalid value given to form, expected a string, number, boolean, object, Array, File or Blob but got ${value} instead`);\n    }\n}; //# sourceMappingURL=uploads.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/internal/uploads.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/internal/utils.mjs":
/*!************************************************!*\
  !*** ./node_modules/openai/internal/utils.mjs ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   coerceBoolean: () => (/* reexport safe */ _utils_values_mjs__WEBPACK_IMPORTED_MODULE_0__.coerceBoolean),\n/* harmony export */   coerceFloat: () => (/* reexport safe */ _utils_values_mjs__WEBPACK_IMPORTED_MODULE_0__.coerceFloat),\n/* harmony export */   coerceInteger: () => (/* reexport safe */ _utils_values_mjs__WEBPACK_IMPORTED_MODULE_0__.coerceInteger),\n/* harmony export */   ensurePresent: () => (/* reexport safe */ _utils_values_mjs__WEBPACK_IMPORTED_MODULE_0__.ensurePresent),\n/* harmony export */   formatRequestDetails: () => (/* reexport safe */ _utils_log_mjs__WEBPACK_IMPORTED_MODULE_3__.formatRequestDetails),\n/* harmony export */   fromBase64: () => (/* reexport safe */ _utils_base64_mjs__WEBPACK_IMPORTED_MODULE_1__.fromBase64),\n/* harmony export */   hasOwn: () => (/* reexport safe */ _utils_values_mjs__WEBPACK_IMPORTED_MODULE_0__.hasOwn),\n/* harmony export */   isAbsoluteURL: () => (/* reexport safe */ _utils_values_mjs__WEBPACK_IMPORTED_MODULE_0__.isAbsoluteURL),\n/* harmony export */   isArray: () => (/* reexport safe */ _utils_values_mjs__WEBPACK_IMPORTED_MODULE_0__.isArray),\n/* harmony export */   isEmptyObj: () => (/* reexport safe */ _utils_values_mjs__WEBPACK_IMPORTED_MODULE_0__.isEmptyObj),\n/* harmony export */   isObj: () => (/* reexport safe */ _utils_values_mjs__WEBPACK_IMPORTED_MODULE_0__.isObj),\n/* harmony export */   isReadonlyArray: () => (/* reexport safe */ _utils_values_mjs__WEBPACK_IMPORTED_MODULE_0__.isReadonlyArray),\n/* harmony export */   loggerFor: () => (/* reexport safe */ _utils_log_mjs__WEBPACK_IMPORTED_MODULE_3__.loggerFor),\n/* harmony export */   maybeCoerceBoolean: () => (/* reexport safe */ _utils_values_mjs__WEBPACK_IMPORTED_MODULE_0__.maybeCoerceBoolean),\n/* harmony export */   maybeCoerceFloat: () => (/* reexport safe */ _utils_values_mjs__WEBPACK_IMPORTED_MODULE_0__.maybeCoerceFloat),\n/* harmony export */   maybeCoerceInteger: () => (/* reexport safe */ _utils_values_mjs__WEBPACK_IMPORTED_MODULE_0__.maybeCoerceInteger),\n/* harmony export */   maybeObj: () => (/* reexport safe */ _utils_values_mjs__WEBPACK_IMPORTED_MODULE_0__.maybeObj),\n/* harmony export */   parseLogLevel: () => (/* reexport safe */ _utils_log_mjs__WEBPACK_IMPORTED_MODULE_3__.parseLogLevel),\n/* harmony export */   readEnv: () => (/* reexport safe */ _utils_env_mjs__WEBPACK_IMPORTED_MODULE_2__.readEnv),\n/* harmony export */   safeJSON: () => (/* reexport safe */ _utils_values_mjs__WEBPACK_IMPORTED_MODULE_0__.safeJSON),\n/* harmony export */   sleep: () => (/* reexport safe */ _utils_sleep_mjs__WEBPACK_IMPORTED_MODULE_5__.sleep),\n/* harmony export */   toBase64: () => (/* reexport safe */ _utils_base64_mjs__WEBPACK_IMPORTED_MODULE_1__.toBase64),\n/* harmony export */   toFloat32Array: () => (/* reexport safe */ _utils_base64_mjs__WEBPACK_IMPORTED_MODULE_1__.toFloat32Array),\n/* harmony export */   uuid4: () => (/* reexport safe */ _utils_uuid_mjs__WEBPACK_IMPORTED_MODULE_4__.uuid4),\n/* harmony export */   validatePositiveInteger: () => (/* reexport safe */ _utils_values_mjs__WEBPACK_IMPORTED_MODULE_0__.validatePositiveInteger)\n/* harmony export */ });\n/* harmony import */ var _utils_values_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/values.mjs */ \"(rsc)/./node_modules/openai/internal/utils/values.mjs\");\n/* harmony import */ var _utils_base64_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/base64.mjs */ \"(rsc)/./node_modules/openai/internal/utils/base64.mjs\");\n/* harmony import */ var _utils_env_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/env.mjs */ \"(rsc)/./node_modules/openai/internal/utils/env.mjs\");\n/* harmony import */ var _utils_log_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/log.mjs */ \"(rsc)/./node_modules/openai/internal/utils/log.mjs\");\n/* harmony import */ var _utils_uuid_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils/uuid.mjs */ \"(rsc)/./node_modules/openai/internal/utils/uuid.mjs\");\n/* harmony import */ var _utils_sleep_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils/sleep.mjs */ \"(rsc)/./node_modules/openai/internal/utils/sleep.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\n\n\n //# sourceMappingURL=utils.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvb3BlbmFpL2ludGVybmFsL3V0aWxzLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsc0ZBQXNGO0FBQ25EO0FBQ0E7QUFDSDtBQUNBO0FBQ0M7QUFDQyxDQUNsQyxrQ0FBa0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zeXN0ZW0tcHJvbXB0LXRvb2wtd2ViLy4vbm9kZV9tb2R1bGVzL29wZW5haS9pbnRlcm5hbC91dGlscy5tanM/ZjIwNSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlIGdlbmVyYXRlZCBmcm9tIG91ciBPcGVuQVBJIHNwZWMgYnkgU3RhaW5sZXNzLiBTZWUgQ09OVFJJQlVUSU5HLm1kIGZvciBkZXRhaWxzLlxuZXhwb3J0ICogZnJvbSBcIi4vdXRpbHMvdmFsdWVzLm1qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vdXRpbHMvYmFzZTY0Lm1qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vdXRpbHMvZW52Lm1qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vdXRpbHMvbG9nLm1qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vdXRpbHMvdXVpZC5tanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3V0aWxzL3NsZWVwLm1qc1wiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXRpbHMubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/internal/utils.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/internal/utils/base64.mjs":
/*!*******************************************************!*\
  !*** ./node_modules/openai/internal/utils/base64.mjs ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fromBase64: () => (/* binding */ fromBase64),\n/* harmony export */   toBase64: () => (/* binding */ toBase64),\n/* harmony export */   toFloat32Array: () => (/* binding */ toFloat32Array)\n/* harmony export */ });\n/* harmony import */ var _core_error_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/error.mjs */ \"(rsc)/./node_modules/openai/core/error.mjs\");\n/* harmony import */ var _bytes_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bytes.mjs */ \"(rsc)/./node_modules/openai/internal/utils/bytes.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\nconst toBase64 = (data)=>{\n    if (!data) return \"\";\n    if (typeof globalThis.Buffer !== \"undefined\") {\n        return globalThis.Buffer.from(data).toString(\"base64\");\n    }\n    if (typeof data === \"string\") {\n        data = (0,_bytes_mjs__WEBPACK_IMPORTED_MODULE_1__.encodeUTF8)(data);\n    }\n    if (typeof btoa !== \"undefined\") {\n        return btoa(String.fromCharCode.apply(null, data));\n    }\n    throw new _core_error_mjs__WEBPACK_IMPORTED_MODULE_0__.OpenAIError(\"Cannot generate base64 string; Expected `Buffer` or `btoa` to be defined\");\n};\nconst fromBase64 = (str)=>{\n    if (typeof globalThis.Buffer !== \"undefined\") {\n        const buf = globalThis.Buffer.from(str, \"base64\");\n        return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n    }\n    if (typeof atob !== \"undefined\") {\n        const bstr = atob(str);\n        const buf = new Uint8Array(bstr.length);\n        for(let i = 0; i < bstr.length; i++){\n            buf[i] = bstr.charCodeAt(i);\n        }\n        return buf;\n    }\n    throw new _core_error_mjs__WEBPACK_IMPORTED_MODULE_0__.OpenAIError(\"Cannot decode base64 string; Expected `Buffer` or `atob` to be defined\");\n};\n/**\n * Converts a Base64 encoded string to a Float32Array.\n * @param base64Str - The Base64 encoded string.\n * @returns An Array of numbers interpreted as Float32 values.\n */ const toFloat32Array = (base64Str)=>{\n    if (typeof Buffer !== \"undefined\") {\n        // for Node.js environment\n        const buf = Buffer.from(base64Str, \"base64\");\n        return Array.from(new Float32Array(buf.buffer, buf.byteOffset, buf.length / Float32Array.BYTES_PER_ELEMENT));\n    } else {\n        // for legacy web platform APIs\n        const binaryStr = atob(base64Str);\n        const len = binaryStr.length;\n        const bytes = new Uint8Array(len);\n        for(let i = 0; i < len; i++){\n            bytes[i] = binaryStr.charCodeAt(i);\n        }\n        return Array.from(new Float32Array(bytes.buffer));\n    }\n}; //# sourceMappingURL=base64.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvb3BlbmFpL2ludGVybmFsL3V0aWxzL2Jhc2U2NC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQSxzRkFBc0Y7QUFDbkM7QUFDVjtBQUNsQyxNQUFNRSxXQUFXLENBQUNDO0lBQ3JCLElBQUksQ0FBQ0EsTUFDRCxPQUFPO0lBQ1gsSUFBSSxPQUFPQyxXQUFXQyxNQUFNLEtBQUssYUFBYTtRQUMxQyxPQUFPRCxXQUFXQyxNQUFNLENBQUNDLElBQUksQ0FBQ0gsTUFBTUksUUFBUSxDQUFDO0lBQ2pEO0lBQ0EsSUFBSSxPQUFPSixTQUFTLFVBQVU7UUFDMUJBLE9BQU9GLHNEQUFVQSxDQUFDRTtJQUN0QjtJQUNBLElBQUksT0FBT0ssU0FBUyxhQUFhO1FBQzdCLE9BQU9BLEtBQUtDLE9BQU9DLFlBQVksQ0FBQ0MsS0FBSyxDQUFDLE1BQU1SO0lBQ2hEO0lBQ0EsTUFBTSxJQUFJSCx3REFBV0EsQ0FBQztBQUMxQixFQUFFO0FBQ0ssTUFBTVksYUFBYSxDQUFDQztJQUN2QixJQUFJLE9BQU9ULFdBQVdDLE1BQU0sS0FBSyxhQUFhO1FBQzFDLE1BQU1TLE1BQU1WLFdBQVdDLE1BQU0sQ0FBQ0MsSUFBSSxDQUFDTyxLQUFLO1FBQ3hDLE9BQU8sSUFBSUUsV0FBV0QsSUFBSUUsTUFBTSxFQUFFRixJQUFJRyxVQUFVLEVBQUVILElBQUlJLFVBQVU7SUFDcEU7SUFDQSxJQUFJLE9BQU9DLFNBQVMsYUFBYTtRQUM3QixNQUFNQyxPQUFPRCxLQUFLTjtRQUNsQixNQUFNQyxNQUFNLElBQUlDLFdBQVdLLEtBQUtDLE1BQU07UUFDdEMsSUFBSyxJQUFJQyxJQUFJLEdBQUdBLElBQUlGLEtBQUtDLE1BQU0sRUFBRUMsSUFBSztZQUNsQ1IsR0FBRyxDQUFDUSxFQUFFLEdBQUdGLEtBQUtHLFVBQVUsQ0FBQ0Q7UUFDN0I7UUFDQSxPQUFPUjtJQUNYO0lBQ0EsTUFBTSxJQUFJZCx3REFBV0EsQ0FBQztBQUMxQixFQUFFO0FBQ0Y7Ozs7Q0FJQyxHQUNNLE1BQU13QixpQkFBaUIsQ0FBQ0M7SUFDM0IsSUFBSSxPQUFPcEIsV0FBVyxhQUFhO1FBQy9CLDBCQUEwQjtRQUMxQixNQUFNUyxNQUFNVCxPQUFPQyxJQUFJLENBQUNtQixXQUFXO1FBQ25DLE9BQU9DLE1BQU1wQixJQUFJLENBQUMsSUFBSXFCLGFBQWFiLElBQUlFLE1BQU0sRUFBRUYsSUFBSUcsVUFBVSxFQUFFSCxJQUFJTyxNQUFNLEdBQUdNLGFBQWFDLGlCQUFpQjtJQUM5RyxPQUNLO1FBQ0QsK0JBQStCO1FBQy9CLE1BQU1DLFlBQVlWLEtBQUtNO1FBQ3ZCLE1BQU1LLE1BQU1ELFVBQVVSLE1BQU07UUFDNUIsTUFBTVUsUUFBUSxJQUFJaEIsV0FBV2U7UUFDN0IsSUFBSyxJQUFJUixJQUFJLEdBQUdBLElBQUlRLEtBQUtSLElBQUs7WUFDMUJTLEtBQUssQ0FBQ1QsRUFBRSxHQUFHTyxVQUFVTixVQUFVLENBQUNEO1FBQ3BDO1FBQ0EsT0FBT0ksTUFBTXBCLElBQUksQ0FBQyxJQUFJcUIsYUFBYUksTUFBTWYsTUFBTTtJQUNuRDtBQUNKLEVBQUUsQ0FDRixtQ0FBbUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zeXN0ZW0tcHJvbXB0LXRvb2wtd2ViLy4vbm9kZV9tb2R1bGVzL29wZW5haS9pbnRlcm5hbC91dGlscy9iYXNlNjQubWpzPzZhZTIiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZSBnZW5lcmF0ZWQgZnJvbSBvdXIgT3BlbkFQSSBzcGVjIGJ5IFN0YWlubGVzcy4gU2VlIENPTlRSSUJVVElORy5tZCBmb3IgZGV0YWlscy5cbmltcG9ydCB7IE9wZW5BSUVycm9yIH0gZnJvbSBcIi4uLy4uL2NvcmUvZXJyb3IubWpzXCI7XG5pbXBvcnQgeyBlbmNvZGVVVEY4IH0gZnJvbSBcIi4vYnl0ZXMubWpzXCI7XG5leHBvcnQgY29uc3QgdG9CYXNlNjQgPSAoZGF0YSkgPT4ge1xuICAgIGlmICghZGF0YSlcbiAgICAgICAgcmV0dXJuICcnO1xuICAgIGlmICh0eXBlb2YgZ2xvYmFsVGhpcy5CdWZmZXIgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIHJldHVybiBnbG9iYWxUaGlzLkJ1ZmZlci5mcm9tKGRhdGEpLnRvU3RyaW5nKCdiYXNlNjQnKTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBkYXRhID09PSAnc3RyaW5nJykge1xuICAgICAgICBkYXRhID0gZW5jb2RlVVRGOChkYXRhKTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBidG9hICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICByZXR1cm4gYnRvYShTdHJpbmcuZnJvbUNoYXJDb2RlLmFwcGx5KG51bGwsIGRhdGEpKTtcbiAgICB9XG4gICAgdGhyb3cgbmV3IE9wZW5BSUVycm9yKCdDYW5ub3QgZ2VuZXJhdGUgYmFzZTY0IHN0cmluZzsgRXhwZWN0ZWQgYEJ1ZmZlcmAgb3IgYGJ0b2FgIHRvIGJlIGRlZmluZWQnKTtcbn07XG5leHBvcnQgY29uc3QgZnJvbUJhc2U2NCA9IChzdHIpID0+IHtcbiAgICBpZiAodHlwZW9mIGdsb2JhbFRoaXMuQnVmZmVyICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICBjb25zdCBidWYgPSBnbG9iYWxUaGlzLkJ1ZmZlci5mcm9tKHN0ciwgJ2Jhc2U2NCcpO1xuICAgICAgICByZXR1cm4gbmV3IFVpbnQ4QXJyYXkoYnVmLmJ1ZmZlciwgYnVmLmJ5dGVPZmZzZXQsIGJ1Zi5ieXRlTGVuZ3RoKTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBhdG9iICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICBjb25zdCBic3RyID0gYXRvYihzdHIpO1xuICAgICAgICBjb25zdCBidWYgPSBuZXcgVWludDhBcnJheShic3RyLmxlbmd0aCk7XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYnN0ci5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgYnVmW2ldID0gYnN0ci5jaGFyQ29kZUF0KGkpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBidWY7XG4gICAgfVxuICAgIHRocm93IG5ldyBPcGVuQUlFcnJvcignQ2Fubm90IGRlY29kZSBiYXNlNjQgc3RyaW5nOyBFeHBlY3RlZCBgQnVmZmVyYCBvciBgYXRvYmAgdG8gYmUgZGVmaW5lZCcpO1xufTtcbi8qKlxuICogQ29udmVydHMgYSBCYXNlNjQgZW5jb2RlZCBzdHJpbmcgdG8gYSBGbG9hdDMyQXJyYXkuXG4gKiBAcGFyYW0gYmFzZTY0U3RyIC0gVGhlIEJhc2U2NCBlbmNvZGVkIHN0cmluZy5cbiAqIEByZXR1cm5zIEFuIEFycmF5IG9mIG51bWJlcnMgaW50ZXJwcmV0ZWQgYXMgRmxvYXQzMiB2YWx1ZXMuXG4gKi9cbmV4cG9ydCBjb25zdCB0b0Zsb2F0MzJBcnJheSA9IChiYXNlNjRTdHIpID0+IHtcbiAgICBpZiAodHlwZW9mIEJ1ZmZlciAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgLy8gZm9yIE5vZGUuanMgZW52aXJvbm1lbnRcbiAgICAgICAgY29uc3QgYnVmID0gQnVmZmVyLmZyb20oYmFzZTY0U3RyLCAnYmFzZTY0Jyk7XG4gICAgICAgIHJldHVybiBBcnJheS5mcm9tKG5ldyBGbG9hdDMyQXJyYXkoYnVmLmJ1ZmZlciwgYnVmLmJ5dGVPZmZzZXQsIGJ1Zi5sZW5ndGggLyBGbG9hdDMyQXJyYXkuQllURVNfUEVSX0VMRU1FTlQpKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIC8vIGZvciBsZWdhY3kgd2ViIHBsYXRmb3JtIEFQSXNcbiAgICAgICAgY29uc3QgYmluYXJ5U3RyID0gYXRvYihiYXNlNjRTdHIpO1xuICAgICAgICBjb25zdCBsZW4gPSBiaW5hcnlTdHIubGVuZ3RoO1xuICAgICAgICBjb25zdCBieXRlcyA9IG5ldyBVaW50OEFycmF5KGxlbik7XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbGVuOyBpKyspIHtcbiAgICAgICAgICAgIGJ5dGVzW2ldID0gYmluYXJ5U3RyLmNoYXJDb2RlQXQoaSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIEFycmF5LmZyb20obmV3IEZsb2F0MzJBcnJheShieXRlcy5idWZmZXIpKTtcbiAgICB9XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YmFzZTY0Lm1qcy5tYXAiXSwibmFtZXMiOlsiT3BlbkFJRXJyb3IiLCJlbmNvZGVVVEY4IiwidG9CYXNlNjQiLCJkYXRhIiwiZ2xvYmFsVGhpcyIsIkJ1ZmZlciIsImZyb20iLCJ0b1N0cmluZyIsImJ0b2EiLCJTdHJpbmciLCJmcm9tQ2hhckNvZGUiLCJhcHBseSIsImZyb21CYXNlNjQiLCJzdHIiLCJidWYiLCJVaW50OEFycmF5IiwiYnVmZmVyIiwiYnl0ZU9mZnNldCIsImJ5dGVMZW5ndGgiLCJhdG9iIiwiYnN0ciIsImxlbmd0aCIsImkiLCJjaGFyQ29kZUF0IiwidG9GbG9hdDMyQXJyYXkiLCJiYXNlNjRTdHIiLCJBcnJheSIsIkZsb2F0MzJBcnJheSIsIkJZVEVTX1BFUl9FTEVNRU5UIiwiYmluYXJ5U3RyIiwibGVuIiwiYnl0ZXMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/internal/utils/base64.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/internal/utils/bytes.mjs":
/*!******************************************************!*\
  !*** ./node_modules/openai/internal/utils/bytes.mjs ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   concatBytes: () => (/* binding */ concatBytes),\n/* harmony export */   decodeUTF8: () => (/* binding */ decodeUTF8),\n/* harmony export */   encodeUTF8: () => (/* binding */ encodeUTF8)\n/* harmony export */ });\nfunction concatBytes(buffers) {\n    let length = 0;\n    for (const buffer of buffers){\n        length += buffer.length;\n    }\n    const output = new Uint8Array(length);\n    let index = 0;\n    for (const buffer of buffers){\n        output.set(buffer, index);\n        index += buffer.length;\n    }\n    return output;\n}\nlet encodeUTF8_;\nfunction encodeUTF8(str) {\n    let encoder;\n    return (encodeUTF8_ ?? (encoder = new globalThis.TextEncoder(), encodeUTF8_ = encoder.encode.bind(encoder)))(str);\n}\nlet decodeUTF8_;\nfunction decodeUTF8(bytes) {\n    let decoder;\n    return (decodeUTF8_ ?? (decoder = new globalThis.TextDecoder(), decodeUTF8_ = decoder.decode.bind(decoder)))(bytes);\n} //# sourceMappingURL=bytes.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvb3BlbmFpL2ludGVybmFsL3V0aWxzL2J5dGVzLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBTyxTQUFTQSxZQUFZQyxPQUFPO0lBQy9CLElBQUlDLFNBQVM7SUFDYixLQUFLLE1BQU1DLFVBQVVGLFFBQVM7UUFDMUJDLFVBQVVDLE9BQU9ELE1BQU07SUFDM0I7SUFDQSxNQUFNRSxTQUFTLElBQUlDLFdBQVdIO0lBQzlCLElBQUlJLFFBQVE7SUFDWixLQUFLLE1BQU1ILFVBQVVGLFFBQVM7UUFDMUJHLE9BQU9HLEdBQUcsQ0FBQ0osUUFBUUc7UUFDbkJBLFNBQVNILE9BQU9ELE1BQU07SUFDMUI7SUFDQSxPQUFPRTtBQUNYO0FBQ0EsSUFBSUk7QUFDRyxTQUFTQyxXQUFXQyxHQUFHO0lBQzFCLElBQUlDO0lBQ0osT0FBTyxDQUFDSCxlQUNILFdBQVcsSUFBSUksV0FBV0MsV0FBVyxJQUFNTCxjQUFjRyxRQUFRRyxNQUFNLENBQUNDLElBQUksQ0FBQ0osUUFBUSxDQUFDLEVBQUdEO0FBQ2xHO0FBQ0EsSUFBSU07QUFDRyxTQUFTQyxXQUFXQyxLQUFLO0lBQzVCLElBQUlDO0lBQ0osT0FBTyxDQUFDSCxlQUNILFdBQVcsSUFBSUosV0FBV1EsV0FBVyxJQUFNSixjQUFjRyxRQUFRRSxNQUFNLENBQUNOLElBQUksQ0FBQ0ksUUFBUSxDQUFDLEVBQUdEO0FBQ2xHLEVBQ0Esa0NBQWtDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3lzdGVtLXByb21wdC10b29sLXdlYi8uL25vZGVfbW9kdWxlcy9vcGVuYWkvaW50ZXJuYWwvdXRpbHMvYnl0ZXMubWpzP2FlMzciXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIGNvbmNhdEJ5dGVzKGJ1ZmZlcnMpIHtcbiAgICBsZXQgbGVuZ3RoID0gMDtcbiAgICBmb3IgKGNvbnN0IGJ1ZmZlciBvZiBidWZmZXJzKSB7XG4gICAgICAgIGxlbmd0aCArPSBidWZmZXIubGVuZ3RoO1xuICAgIH1cbiAgICBjb25zdCBvdXRwdXQgPSBuZXcgVWludDhBcnJheShsZW5ndGgpO1xuICAgIGxldCBpbmRleCA9IDA7XG4gICAgZm9yIChjb25zdCBidWZmZXIgb2YgYnVmZmVycykge1xuICAgICAgICBvdXRwdXQuc2V0KGJ1ZmZlciwgaW5kZXgpO1xuICAgICAgICBpbmRleCArPSBidWZmZXIubGVuZ3RoO1xuICAgIH1cbiAgICByZXR1cm4gb3V0cHV0O1xufVxubGV0IGVuY29kZVVURjhfO1xuZXhwb3J0IGZ1bmN0aW9uIGVuY29kZVVURjgoc3RyKSB7XG4gICAgbGV0IGVuY29kZXI7XG4gICAgcmV0dXJuIChlbmNvZGVVVEY4XyA/P1xuICAgICAgICAoKGVuY29kZXIgPSBuZXcgZ2xvYmFsVGhpcy5UZXh0RW5jb2RlcigpKSwgKGVuY29kZVVURjhfID0gZW5jb2Rlci5lbmNvZGUuYmluZChlbmNvZGVyKSkpKShzdHIpO1xufVxubGV0IGRlY29kZVVURjhfO1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZVVURjgoYnl0ZXMpIHtcbiAgICBsZXQgZGVjb2RlcjtcbiAgICByZXR1cm4gKGRlY29kZVVURjhfID8/XG4gICAgICAgICgoZGVjb2RlciA9IG5ldyBnbG9iYWxUaGlzLlRleHREZWNvZGVyKCkpLCAoZGVjb2RlVVRGOF8gPSBkZWNvZGVyLmRlY29kZS5iaW5kKGRlY29kZXIpKSkpKGJ5dGVzKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJ5dGVzLm1qcy5tYXAiXSwibmFtZXMiOlsiY29uY2F0Qnl0ZXMiLCJidWZmZXJzIiwibGVuZ3RoIiwiYnVmZmVyIiwib3V0cHV0IiwiVWludDhBcnJheSIsImluZGV4Iiwic2V0IiwiZW5jb2RlVVRGOF8iLCJlbmNvZGVVVEY4Iiwic3RyIiwiZW5jb2RlciIsImdsb2JhbFRoaXMiLCJUZXh0RW5jb2RlciIsImVuY29kZSIsImJpbmQiLCJkZWNvZGVVVEY4XyIsImRlY29kZVVURjgiLCJieXRlcyIsImRlY29kZXIiLCJUZXh0RGVjb2RlciIsImRlY29kZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/internal/utils/bytes.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/internal/utils/env.mjs":
/*!****************************************************!*\
  !*** ./node_modules/openai/internal/utils/env.mjs ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   readEnv: () => (/* binding */ readEnv)\n/* harmony export */ });\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n/**\n * Read an environment variable.\n *\n * Trims beginning and trailing whitespace.\n *\n * Will return undefined if the environment variable doesn't exist or cannot be accessed.\n */ const readEnv = (env)=>{\n    if (typeof globalThis.process !== \"undefined\") {\n        return globalThis.process.env?.[env]?.trim() ?? undefined;\n    }\n    if (typeof globalThis.Deno !== \"undefined\") {\n        return globalThis.Deno.env?.get?.(env)?.trim();\n    }\n    return undefined;\n}; //# sourceMappingURL=env.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvb3BlbmFpL2ludGVybmFsL3V0aWxzL2Vudi5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLHNGQUFzRjtBQUN0Rjs7Ozs7O0NBTUMsR0FDTSxNQUFNQSxVQUFVLENBQUNDO0lBQ3BCLElBQUksT0FBT0MsV0FBV0MsT0FBTyxLQUFLLGFBQWE7UUFDM0MsT0FBT0QsV0FBV0MsT0FBTyxDQUFDRixHQUFHLEVBQUUsQ0FBQ0EsSUFBSSxFQUFFRyxVQUFVQztJQUNwRDtJQUNBLElBQUksT0FBT0gsV0FBV0ksSUFBSSxLQUFLLGFBQWE7UUFDeEMsT0FBT0osV0FBV0ksSUFBSSxDQUFDTCxHQUFHLEVBQUVNLE1BQU1OLE1BQU1HO0lBQzVDO0lBQ0EsT0FBT0M7QUFDWCxFQUFFLENBQ0YsZ0NBQWdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3lzdGVtLXByb21wdC10b29sLXdlYi8uL25vZGVfbW9kdWxlcy9vcGVuYWkvaW50ZXJuYWwvdXRpbHMvZW52Lm1qcz9mZGVkIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG4vKipcbiAqIFJlYWQgYW4gZW52aXJvbm1lbnQgdmFyaWFibGUuXG4gKlxuICogVHJpbXMgYmVnaW5uaW5nIGFuZCB0cmFpbGluZyB3aGl0ZXNwYWNlLlxuICpcbiAqIFdpbGwgcmV0dXJuIHVuZGVmaW5lZCBpZiB0aGUgZW52aXJvbm1lbnQgdmFyaWFibGUgZG9lc24ndCBleGlzdCBvciBjYW5ub3QgYmUgYWNjZXNzZWQuXG4gKi9cbmV4cG9ydCBjb25zdCByZWFkRW52ID0gKGVudikgPT4ge1xuICAgIGlmICh0eXBlb2YgZ2xvYmFsVGhpcy5wcm9jZXNzICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICByZXR1cm4gZ2xvYmFsVGhpcy5wcm9jZXNzLmVudj8uW2Vudl0/LnRyaW0oKSA/PyB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgZ2xvYmFsVGhpcy5EZW5vICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICByZXR1cm4gZ2xvYmFsVGhpcy5EZW5vLmVudj8uZ2V0Py4oZW52KT8udHJpbSgpO1xuICAgIH1cbiAgICByZXR1cm4gdW5kZWZpbmVkO1xufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWVudi5tanMubWFwIl0sIm5hbWVzIjpbInJlYWRFbnYiLCJlbnYiLCJnbG9iYWxUaGlzIiwicHJvY2VzcyIsInRyaW0iLCJ1bmRlZmluZWQiLCJEZW5vIiwiZ2V0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/internal/utils/env.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/internal/utils/log.mjs":
/*!****************************************************!*\
  !*** ./node_modules/openai/internal/utils/log.mjs ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   formatRequestDetails: () => (/* binding */ formatRequestDetails),\n/* harmony export */   loggerFor: () => (/* binding */ loggerFor),\n/* harmony export */   parseLogLevel: () => (/* binding */ parseLogLevel)\n/* harmony export */ });\n/* harmony import */ var _values_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./values.mjs */ \"(rsc)/./node_modules/openai/internal/utils/values.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nconst levelNumbers = {\n    off: 0,\n    error: 200,\n    warn: 300,\n    info: 400,\n    debug: 500\n};\nconst parseLogLevel = (maybeLevel, sourceName, client)=>{\n    if (!maybeLevel) {\n        return undefined;\n    }\n    if ((0,_values_mjs__WEBPACK_IMPORTED_MODULE_0__.hasOwn)(levelNumbers, maybeLevel)) {\n        return maybeLevel;\n    }\n    loggerFor(client).warn(`${sourceName} was set to ${JSON.stringify(maybeLevel)}, expected one of ${JSON.stringify(Object.keys(levelNumbers))}`);\n    return undefined;\n};\nfunction noop() {}\nfunction makeLogFn(fnLevel, logger, logLevel) {\n    if (!logger || levelNumbers[fnLevel] > levelNumbers[logLevel]) {\n        return noop;\n    } else {\n        // Don't wrap logger functions, we want the stacktrace intact!\n        return logger[fnLevel].bind(logger);\n    }\n}\nconst noopLogger = {\n    error: noop,\n    warn: noop,\n    info: noop,\n    debug: noop\n};\nlet cachedLoggers = /* @__PURE__ */ new WeakMap();\nfunction loggerFor(client) {\n    const logger = client.logger;\n    const logLevel = client.logLevel ?? \"off\";\n    if (!logger) {\n        return noopLogger;\n    }\n    const cachedLogger = cachedLoggers.get(logger);\n    if (cachedLogger && cachedLogger[0] === logLevel) {\n        return cachedLogger[1];\n    }\n    const levelLogger = {\n        error: makeLogFn(\"error\", logger, logLevel),\n        warn: makeLogFn(\"warn\", logger, logLevel),\n        info: makeLogFn(\"info\", logger, logLevel),\n        debug: makeLogFn(\"debug\", logger, logLevel)\n    };\n    cachedLoggers.set(logger, [\n        logLevel,\n        levelLogger\n    ]);\n    return levelLogger;\n}\nconst formatRequestDetails = (details)=>{\n    if (details.options) {\n        details.options = {\n            ...details.options\n        };\n        delete details.options[\"headers\"]; // redundant + leaks internals\n    }\n    if (details.headers) {\n        details.headers = Object.fromEntries((details.headers instanceof Headers ? [\n            ...details.headers\n        ] : Object.entries(details.headers)).map(([name, value])=>[\n                name,\n                name.toLowerCase() === \"authorization\" || name.toLowerCase() === \"cookie\" || name.toLowerCase() === \"set-cookie\" ? \"***\" : value\n            ]));\n    }\n    if (\"retryOfRequestLogID\" in details) {\n        if (details.retryOfRequestLogID) {\n            details.retryOf = details.retryOfRequestLogID;\n        }\n        delete details.retryOfRequestLogID;\n    }\n    return details;\n}; //# sourceMappingURL=log.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvb3BlbmFpL2ludGVybmFsL3V0aWxzL2xvZy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBLHNGQUFzRjtBQUNoRDtBQUN0QyxNQUFNQyxlQUFlO0lBQ2pCQyxLQUFLO0lBQ0xDLE9BQU87SUFDUEMsTUFBTTtJQUNOQyxNQUFNO0lBQ05DLE9BQU87QUFDWDtBQUNPLE1BQU1DLGdCQUFnQixDQUFDQyxZQUFZQyxZQUFZQztJQUNsRCxJQUFJLENBQUNGLFlBQVk7UUFDYixPQUFPRztJQUNYO0lBQ0EsSUFBSVgsbURBQU1BLENBQUNDLGNBQWNPLGFBQWE7UUFDbEMsT0FBT0E7SUFDWDtJQUNBSSxVQUFVRixRQUFRTixJQUFJLENBQUMsQ0FBQyxFQUFFSyxXQUFXLFlBQVksRUFBRUksS0FBS0MsU0FBUyxDQUFDTixZQUFZLGtCQUFrQixFQUFFSyxLQUFLQyxTQUFTLENBQUNDLE9BQU9DLElBQUksQ0FBQ2YsZUFBZSxDQUFDO0lBQzdJLE9BQU9VO0FBQ1gsRUFBRTtBQUNGLFNBQVNNLFFBQVM7QUFDbEIsU0FBU0MsVUFBVUMsT0FBTyxFQUFFQyxNQUFNLEVBQUVDLFFBQVE7SUFDeEMsSUFBSSxDQUFDRCxVQUFVbkIsWUFBWSxDQUFDa0IsUUFBUSxHQUFHbEIsWUFBWSxDQUFDb0IsU0FBUyxFQUFFO1FBQzNELE9BQU9KO0lBQ1gsT0FDSztRQUNELDhEQUE4RDtRQUM5RCxPQUFPRyxNQUFNLENBQUNELFFBQVEsQ0FBQ0csSUFBSSxDQUFDRjtJQUNoQztBQUNKO0FBQ0EsTUFBTUcsYUFBYTtJQUNmcEIsT0FBT2M7SUFDUGIsTUFBTWE7SUFDTlosTUFBTVk7SUFDTlgsT0FBT1c7QUFDWDtBQUNBLElBQUlPLGdCQUFnQixhQUFhLEdBQUcsSUFBSUM7QUFDakMsU0FBU2IsVUFBVUYsTUFBTTtJQUM1QixNQUFNVSxTQUFTVixPQUFPVSxNQUFNO0lBQzVCLE1BQU1DLFdBQVdYLE9BQU9XLFFBQVEsSUFBSTtJQUNwQyxJQUFJLENBQUNELFFBQVE7UUFDVCxPQUFPRztJQUNYO0lBQ0EsTUFBTUcsZUFBZUYsY0FBY0csR0FBRyxDQUFDUDtJQUN2QyxJQUFJTSxnQkFBZ0JBLFlBQVksQ0FBQyxFQUFFLEtBQUtMLFVBQVU7UUFDOUMsT0FBT0ssWUFBWSxDQUFDLEVBQUU7SUFDMUI7SUFDQSxNQUFNRSxjQUFjO1FBQ2hCekIsT0FBT2UsVUFBVSxTQUFTRSxRQUFRQztRQUNsQ2pCLE1BQU1jLFVBQVUsUUFBUUUsUUFBUUM7UUFDaENoQixNQUFNYSxVQUFVLFFBQVFFLFFBQVFDO1FBQ2hDZixPQUFPWSxVQUFVLFNBQVNFLFFBQVFDO0lBQ3RDO0lBQ0FHLGNBQWNLLEdBQUcsQ0FBQ1QsUUFBUTtRQUFDQztRQUFVTztLQUFZO0lBQ2pELE9BQU9BO0FBQ1g7QUFDTyxNQUFNRSx1QkFBdUIsQ0FBQ0M7SUFDakMsSUFBSUEsUUFBUUMsT0FBTyxFQUFFO1FBQ2pCRCxRQUFRQyxPQUFPLEdBQUc7WUFBRSxHQUFHRCxRQUFRQyxPQUFPO1FBQUM7UUFDdkMsT0FBT0QsUUFBUUMsT0FBTyxDQUFDLFVBQVUsRUFBRSw4QkFBOEI7SUFDckU7SUFDQSxJQUFJRCxRQUFRRSxPQUFPLEVBQUU7UUFDakJGLFFBQVFFLE9BQU8sR0FBR2xCLE9BQU9tQixXQUFXLENBQUMsQ0FBQ0gsUUFBUUUsT0FBTyxZQUFZRSxVQUFVO2VBQUlKLFFBQVFFLE9BQU87U0FBQyxHQUFHbEIsT0FBT3FCLE9BQU8sQ0FBQ0wsUUFBUUUsT0FBTyxHQUFHSSxHQUFHLENBQUMsQ0FBQyxDQUFDQyxNQUFNQyxNQUFNLEdBQUs7Z0JBQ3RKRDtnQkFDQ0EsS0FBS0UsV0FBVyxPQUFPLG1CQUNwQkYsS0FBS0UsV0FBVyxPQUFPLFlBQ3ZCRixLQUFLRSxXQUFXLE9BQU8sZUFDdkIsUUFDRUQ7YUFDVDtJQUNMO0lBQ0EsSUFBSSx5QkFBeUJSLFNBQVM7UUFDbEMsSUFBSUEsUUFBUVUsbUJBQW1CLEVBQUU7WUFDN0JWLFFBQVFXLE9BQU8sR0FBR1gsUUFBUVUsbUJBQW1CO1FBQ2pEO1FBQ0EsT0FBT1YsUUFBUVUsbUJBQW1CO0lBQ3RDO0lBQ0EsT0FBT1Y7QUFDWCxFQUFFLENBQ0YsZ0NBQWdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3lzdGVtLXByb21wdC10b29sLXdlYi8uL25vZGVfbW9kdWxlcy9vcGVuYWkvaW50ZXJuYWwvdXRpbHMvbG9nLm1qcz9mOWU1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG5pbXBvcnQgeyBoYXNPd24gfSBmcm9tIFwiLi92YWx1ZXMubWpzXCI7XG5jb25zdCBsZXZlbE51bWJlcnMgPSB7XG4gICAgb2ZmOiAwLFxuICAgIGVycm9yOiAyMDAsXG4gICAgd2FybjogMzAwLFxuICAgIGluZm86IDQwMCxcbiAgICBkZWJ1ZzogNTAwLFxufTtcbmV4cG9ydCBjb25zdCBwYXJzZUxvZ0xldmVsID0gKG1heWJlTGV2ZWwsIHNvdXJjZU5hbWUsIGNsaWVudCkgPT4ge1xuICAgIGlmICghbWF5YmVMZXZlbCkge1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgICBpZiAoaGFzT3duKGxldmVsTnVtYmVycywgbWF5YmVMZXZlbCkpIHtcbiAgICAgICAgcmV0dXJuIG1heWJlTGV2ZWw7XG4gICAgfVxuICAgIGxvZ2dlckZvcihjbGllbnQpLndhcm4oYCR7c291cmNlTmFtZX0gd2FzIHNldCB0byAke0pTT04uc3RyaW5naWZ5KG1heWJlTGV2ZWwpfSwgZXhwZWN0ZWQgb25lIG9mICR7SlNPTi5zdHJpbmdpZnkoT2JqZWN0LmtleXMobGV2ZWxOdW1iZXJzKSl9YCk7XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbn07XG5mdW5jdGlvbiBub29wKCkgeyB9XG5mdW5jdGlvbiBtYWtlTG9nRm4oZm5MZXZlbCwgbG9nZ2VyLCBsb2dMZXZlbCkge1xuICAgIGlmICghbG9nZ2VyIHx8IGxldmVsTnVtYmVyc1tmbkxldmVsXSA+IGxldmVsTnVtYmVyc1tsb2dMZXZlbF0pIHtcbiAgICAgICAgcmV0dXJuIG5vb3A7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICAvLyBEb24ndCB3cmFwIGxvZ2dlciBmdW5jdGlvbnMsIHdlIHdhbnQgdGhlIHN0YWNrdHJhY2UgaW50YWN0IVxuICAgICAgICByZXR1cm4gbG9nZ2VyW2ZuTGV2ZWxdLmJpbmQobG9nZ2VyKTtcbiAgICB9XG59XG5jb25zdCBub29wTG9nZ2VyID0ge1xuICAgIGVycm9yOiBub29wLFxuICAgIHdhcm46IG5vb3AsXG4gICAgaW5mbzogbm9vcCxcbiAgICBkZWJ1Zzogbm9vcCxcbn07XG5sZXQgY2FjaGVkTG9nZ2VycyA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgV2Vha01hcCgpO1xuZXhwb3J0IGZ1bmN0aW9uIGxvZ2dlckZvcihjbGllbnQpIHtcbiAgICBjb25zdCBsb2dnZXIgPSBjbGllbnQubG9nZ2VyO1xuICAgIGNvbnN0IGxvZ0xldmVsID0gY2xpZW50LmxvZ0xldmVsID8/ICdvZmYnO1xuICAgIGlmICghbG9nZ2VyKSB7XG4gICAgICAgIHJldHVybiBub29wTG9nZ2VyO1xuICAgIH1cbiAgICBjb25zdCBjYWNoZWRMb2dnZXIgPSBjYWNoZWRMb2dnZXJzLmdldChsb2dnZXIpO1xuICAgIGlmIChjYWNoZWRMb2dnZXIgJiYgY2FjaGVkTG9nZ2VyWzBdID09PSBsb2dMZXZlbCkge1xuICAgICAgICByZXR1cm4gY2FjaGVkTG9nZ2VyWzFdO1xuICAgIH1cbiAgICBjb25zdCBsZXZlbExvZ2dlciA9IHtcbiAgICAgICAgZXJyb3I6IG1ha2VMb2dGbignZXJyb3InLCBsb2dnZXIsIGxvZ0xldmVsKSxcbiAgICAgICAgd2FybjogbWFrZUxvZ0ZuKCd3YXJuJywgbG9nZ2VyLCBsb2dMZXZlbCksXG4gICAgICAgIGluZm86IG1ha2VMb2dGbignaW5mbycsIGxvZ2dlciwgbG9nTGV2ZWwpLFxuICAgICAgICBkZWJ1ZzogbWFrZUxvZ0ZuKCdkZWJ1ZycsIGxvZ2dlciwgbG9nTGV2ZWwpLFxuICAgIH07XG4gICAgY2FjaGVkTG9nZ2Vycy5zZXQobG9nZ2VyLCBbbG9nTGV2ZWwsIGxldmVsTG9nZ2VyXSk7XG4gICAgcmV0dXJuIGxldmVsTG9nZ2VyO1xufVxuZXhwb3J0IGNvbnN0IGZvcm1hdFJlcXVlc3REZXRhaWxzID0gKGRldGFpbHMpID0+IHtcbiAgICBpZiAoZGV0YWlscy5vcHRpb25zKSB7XG4gICAgICAgIGRldGFpbHMub3B0aW9ucyA9IHsgLi4uZGV0YWlscy5vcHRpb25zIH07XG4gICAgICAgIGRlbGV0ZSBkZXRhaWxzLm9wdGlvbnNbJ2hlYWRlcnMnXTsgLy8gcmVkdW5kYW50ICsgbGVha3MgaW50ZXJuYWxzXG4gICAgfVxuICAgIGlmIChkZXRhaWxzLmhlYWRlcnMpIHtcbiAgICAgICAgZGV0YWlscy5oZWFkZXJzID0gT2JqZWN0LmZyb21FbnRyaWVzKChkZXRhaWxzLmhlYWRlcnMgaW5zdGFuY2VvZiBIZWFkZXJzID8gWy4uLmRldGFpbHMuaGVhZGVyc10gOiBPYmplY3QuZW50cmllcyhkZXRhaWxzLmhlYWRlcnMpKS5tYXAoKFtuYW1lLCB2YWx1ZV0pID0+IFtcbiAgICAgICAgICAgIG5hbWUsXG4gICAgICAgICAgICAobmFtZS50b0xvd2VyQ2FzZSgpID09PSAnYXV0aG9yaXphdGlvbicgfHxcbiAgICAgICAgICAgICAgICBuYW1lLnRvTG93ZXJDYXNlKCkgPT09ICdjb29raWUnIHx8XG4gICAgICAgICAgICAgICAgbmFtZS50b0xvd2VyQ2FzZSgpID09PSAnc2V0LWNvb2tpZScpID9cbiAgICAgICAgICAgICAgICAnKioqJ1xuICAgICAgICAgICAgICAgIDogdmFsdWUsXG4gICAgICAgIF0pKTtcbiAgICB9XG4gICAgaWYgKCdyZXRyeU9mUmVxdWVzdExvZ0lEJyBpbiBkZXRhaWxzKSB7XG4gICAgICAgIGlmIChkZXRhaWxzLnJldHJ5T2ZSZXF1ZXN0TG9nSUQpIHtcbiAgICAgICAgICAgIGRldGFpbHMucmV0cnlPZiA9IGRldGFpbHMucmV0cnlPZlJlcXVlc3RMb2dJRDtcbiAgICAgICAgfVxuICAgICAgICBkZWxldGUgZGV0YWlscy5yZXRyeU9mUmVxdWVzdExvZ0lEO1xuICAgIH1cbiAgICByZXR1cm4gZGV0YWlscztcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1sb2cubWpzLm1hcCJdLCJuYW1lcyI6WyJoYXNPd24iLCJsZXZlbE51bWJlcnMiLCJvZmYiLCJlcnJvciIsIndhcm4iLCJpbmZvIiwiZGVidWciLCJwYXJzZUxvZ0xldmVsIiwibWF5YmVMZXZlbCIsInNvdXJjZU5hbWUiLCJjbGllbnQiLCJ1bmRlZmluZWQiLCJsb2dnZXJGb3IiLCJKU09OIiwic3RyaW5naWZ5IiwiT2JqZWN0Iiwia2V5cyIsIm5vb3AiLCJtYWtlTG9nRm4iLCJmbkxldmVsIiwibG9nZ2VyIiwibG9nTGV2ZWwiLCJiaW5kIiwibm9vcExvZ2dlciIsImNhY2hlZExvZ2dlcnMiLCJXZWFrTWFwIiwiY2FjaGVkTG9nZ2VyIiwiZ2V0IiwibGV2ZWxMb2dnZXIiLCJzZXQiLCJmb3JtYXRSZXF1ZXN0RGV0YWlscyIsImRldGFpbHMiLCJvcHRpb25zIiwiaGVhZGVycyIsImZyb21FbnRyaWVzIiwiSGVhZGVycyIsImVudHJpZXMiLCJtYXAiLCJuYW1lIiwidmFsdWUiLCJ0b0xvd2VyQ2FzZSIsInJldHJ5T2ZSZXF1ZXN0TG9nSUQiLCJyZXRyeU9mIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/internal/utils/log.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/internal/utils/path.mjs":
/*!*****************************************************!*\
  !*** ./node_modules/openai/internal/utils/path.mjs ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createPathTagFunction: () => (/* binding */ createPathTagFunction),\n/* harmony export */   encodeURIPath: () => (/* binding */ encodeURIPath),\n/* harmony export */   path: () => (/* binding */ path)\n/* harmony export */ });\n/* harmony import */ var _core_error_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/error.mjs */ \"(rsc)/./node_modules/openai/core/error.mjs\");\n\n/**\n * Percent-encode everything that isn't safe to have in a path without encoding safe chars.\n *\n * Taken from https://datatracker.ietf.org/doc/html/rfc3986#section-3.3:\n * > unreserved  = ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\"\n * > sub-delims  = \"!\" / \"$\" / \"&\" / \"'\" / \"(\" / \")\" / \"*\" / \"+\" / \",\" / \";\" / \"=\"\n * > pchar       = unreserved / pct-encoded / sub-delims / \":\" / \"@\"\n */ function encodeURIPath(str) {\n    return str.replace(/[^A-Za-z0-9\\-._~!$&'()*+,;=:@]+/g, encodeURIComponent);\n}\nconst EMPTY = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.create(null));\nconst createPathTagFunction = (pathEncoder = encodeURIPath)=>function path(statics, ...params) {\n        // If there are no params, no processing is needed.\n        if (statics.length === 1) return statics[0];\n        let postPath = false;\n        const invalidSegments = [];\n        const path1 = statics.reduce((previousValue, currentValue, index)=>{\n            if (/[?#]/.test(currentValue)) {\n                postPath = true;\n            }\n            const value = params[index];\n            let encoded = (postPath ? encodeURIComponent : pathEncoder)(\"\" + value);\n            if (index !== params.length && (value == null || typeof value === \"object\" && // handle values from other realms\n            value.toString === Object.getPrototypeOf(Object.getPrototypeOf(value.hasOwnProperty ?? EMPTY) ?? EMPTY)?.toString)) {\n                encoded = value + \"\";\n                invalidSegments.push({\n                    start: previousValue.length + currentValue.length,\n                    length: encoded.length,\n                    error: `Value of type ${Object.prototype.toString.call(value).slice(8, -1)} is not a valid path parameter`\n                });\n            }\n            return previousValue + currentValue + (index === params.length ? \"\" : encoded);\n        }, \"\");\n        const pathOnly = path1.split(/[?#]/, 1)[0];\n        const invalidSegmentPattern = /(?<=^|\\/)(?:\\.|%2e){1,2}(?=\\/|$)/gi;\n        let match;\n        // Find all invalid segments\n        while((match = invalidSegmentPattern.exec(pathOnly)) !== null){\n            invalidSegments.push({\n                start: match.index,\n                length: match[0].length,\n                error: `Value \"${match[0]}\" can\\'t be safely passed as a path parameter`\n            });\n        }\n        invalidSegments.sort((a, b)=>a.start - b.start);\n        if (invalidSegments.length > 0) {\n            let lastEnd = 0;\n            const underline = invalidSegments.reduce((acc, segment)=>{\n                const spaces = \" \".repeat(segment.start - lastEnd);\n                const arrows = \"^\".repeat(segment.length);\n                lastEnd = segment.start + segment.length;\n                return acc + spaces + arrows;\n            }, \"\");\n            throw new _core_error_mjs__WEBPACK_IMPORTED_MODULE_0__.OpenAIError(`Path parameters result in path with invalid segments:\\n${invalidSegments.map((e)=>e.error).join(\"\\n\")}\\n${path1}\\n${underline}`);\n        }\n        return path1;\n    };\n/**\n * URI-encodes path params and ensures no unsafe /./ or /../ path segments are introduced.\n */ const path = /* @__PURE__ */ createPathTagFunction(encodeURIPath); //# sourceMappingURL=path.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/internal/utils/path.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/internal/utils/sleep.mjs":
/*!******************************************************!*\
  !*** ./node_modules/openai/internal/utils/sleep.mjs ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   sleep: () => (/* binding */ sleep)\n/* harmony export */ });\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nconst sleep = (ms)=>new Promise((resolve)=>setTimeout(resolve, ms)); //# sourceMappingURL=sleep.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvb3BlbmFpL2ludGVybmFsL3V0aWxzL3NsZWVwLm1qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsc0ZBQXNGO0FBQy9FLE1BQU1BLFFBQVEsQ0FBQ0MsS0FBTyxJQUFJQyxRQUFRLENBQUNDLFVBQVlDLFdBQVdELFNBQVNGLEtBQUssQ0FDL0Usa0NBQWtDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3lzdGVtLXByb21wdC10b29sLXdlYi8uL25vZGVfbW9kdWxlcy9vcGVuYWkvaW50ZXJuYWwvdXRpbHMvc2xlZXAubWpzP2Y1OTAiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZSBnZW5lcmF0ZWQgZnJvbSBvdXIgT3BlbkFQSSBzcGVjIGJ5IFN0YWlubGVzcy4gU2VlIENPTlRSSUJVVElORy5tZCBmb3IgZGV0YWlscy5cbmV4cG9ydCBjb25zdCBzbGVlcCA9IChtcykgPT4gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHNldFRpbWVvdXQocmVzb2x2ZSwgbXMpKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNsZWVwLm1qcy5tYXAiXSwibmFtZXMiOlsic2xlZXAiLCJtcyIsIlByb21pc2UiLCJyZXNvbHZlIiwic2V0VGltZW91dCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/internal/utils/sleep.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/internal/utils/uuid.mjs":
/*!*****************************************************!*\
  !*** ./node_modules/openai/internal/utils/uuid.mjs ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   uuid4: () => (/* binding */ uuid4)\n/* harmony export */ });\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n/**\n * https://stackoverflow.com/a/2117523\n */ let uuid4 = function() {\n    const { crypto } = globalThis;\n    if (crypto?.randomUUID) {\n        uuid4 = crypto.randomUUID.bind(crypto);\n        return crypto.randomUUID();\n    }\n    const u8 = new Uint8Array(1);\n    const randomByte = crypto ? ()=>crypto.getRandomValues(u8)[0] : ()=>Math.random() * 0xff & 0xff;\n    return \"10000000-1000-4000-8000-100000000000\".replace(/[018]/g, (c)=>(+c ^ randomByte() & 15 >> +c / 4).toString(16));\n}; //# sourceMappingURL=uuid.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvb3BlbmFpL2ludGVybmFsL3V0aWxzL3V1aWQubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxzRkFBc0Y7QUFDdEY7O0NBRUMsR0FDTSxJQUFJQSxRQUFRO0lBQ2YsTUFBTSxFQUFFQyxNQUFNLEVBQUUsR0FBR0M7SUFDbkIsSUFBSUQsUUFBUUUsWUFBWTtRQUNwQkgsUUFBUUMsT0FBT0UsVUFBVSxDQUFDQyxJQUFJLENBQUNIO1FBQy9CLE9BQU9BLE9BQU9FLFVBQVU7SUFDNUI7SUFDQSxNQUFNRSxLQUFLLElBQUlDLFdBQVc7SUFDMUIsTUFBTUMsYUFBYU4sU0FBUyxJQUFNQSxPQUFPTyxlQUFlLENBQUNILEdBQUcsQ0FBQyxFQUFFLEdBQUcsSUFBTSxLQUFNSyxNQUFNLEtBQUssT0FBUTtJQUNqRyxPQUFPLHVDQUF1Q0MsT0FBTyxDQUFDLFVBQVUsQ0FBQ0MsSUFBTSxDQUFDLENBQUNBLElBQUtMLGVBQWdCLE1BQU8sQ0FBQ0ssSUFBSSxDQUFHLEVBQUdDLFFBQVEsQ0FBQztBQUM3SCxFQUFFLENBQ0YsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3lzdGVtLXByb21wdC10b29sLXdlYi8uL25vZGVfbW9kdWxlcy9vcGVuYWkvaW50ZXJuYWwvdXRpbHMvdXVpZC5tanM/NjNmNiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlIGdlbmVyYXRlZCBmcm9tIG91ciBPcGVuQVBJIHNwZWMgYnkgU3RhaW5sZXNzLiBTZWUgQ09OVFJJQlVUSU5HLm1kIGZvciBkZXRhaWxzLlxuLyoqXG4gKiBodHRwczovL3N0YWNrb3ZlcmZsb3cuY29tL2EvMjExNzUyM1xuICovXG5leHBvcnQgbGV0IHV1aWQ0ID0gZnVuY3Rpb24gKCkge1xuICAgIGNvbnN0IHsgY3J5cHRvIH0gPSBnbG9iYWxUaGlzO1xuICAgIGlmIChjcnlwdG8/LnJhbmRvbVVVSUQpIHtcbiAgICAgICAgdXVpZDQgPSBjcnlwdG8ucmFuZG9tVVVJRC5iaW5kKGNyeXB0byk7XG4gICAgICAgIHJldHVybiBjcnlwdG8ucmFuZG9tVVVJRCgpO1xuICAgIH1cbiAgICBjb25zdCB1OCA9IG5ldyBVaW50OEFycmF5KDEpO1xuICAgIGNvbnN0IHJhbmRvbUJ5dGUgPSBjcnlwdG8gPyAoKSA9PiBjcnlwdG8uZ2V0UmFuZG9tVmFsdWVzKHU4KVswXSA6ICgpID0+IChNYXRoLnJhbmRvbSgpICogMHhmZikgJiAweGZmO1xuICAgIHJldHVybiAnMTAwMDAwMDAtMTAwMC00MDAwLTgwMDAtMTAwMDAwMDAwMDAwJy5yZXBsYWNlKC9bMDE4XS9nLCAoYykgPT4gKCtjIF4gKHJhbmRvbUJ5dGUoKSAmICgxNSA+PiAoK2MgLyA0KSkpKS50b1N0cmluZygxNikpO1xufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXV1aWQubWpzLm1hcCJdLCJuYW1lcyI6WyJ1dWlkNCIsImNyeXB0byIsImdsb2JhbFRoaXMiLCJyYW5kb21VVUlEIiwiYmluZCIsInU4IiwiVWludDhBcnJheSIsInJhbmRvbUJ5dGUiLCJnZXRSYW5kb21WYWx1ZXMiLCJNYXRoIiwicmFuZG9tIiwicmVwbGFjZSIsImMiLCJ0b1N0cmluZyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/internal/utils/uuid.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/internal/utils/values.mjs":
/*!*******************************************************!*\
  !*** ./node_modules/openai/internal/utils/values.mjs ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   coerceBoolean: () => (/* binding */ coerceBoolean),\n/* harmony export */   coerceFloat: () => (/* binding */ coerceFloat),\n/* harmony export */   coerceInteger: () => (/* binding */ coerceInteger),\n/* harmony export */   ensurePresent: () => (/* binding */ ensurePresent),\n/* harmony export */   hasOwn: () => (/* binding */ hasOwn),\n/* harmony export */   isAbsoluteURL: () => (/* binding */ isAbsoluteURL),\n/* harmony export */   isArray: () => (/* binding */ isArray),\n/* harmony export */   isEmptyObj: () => (/* binding */ isEmptyObj),\n/* harmony export */   isObj: () => (/* binding */ isObj),\n/* harmony export */   isReadonlyArray: () => (/* binding */ isReadonlyArray),\n/* harmony export */   maybeCoerceBoolean: () => (/* binding */ maybeCoerceBoolean),\n/* harmony export */   maybeCoerceFloat: () => (/* binding */ maybeCoerceFloat),\n/* harmony export */   maybeCoerceInteger: () => (/* binding */ maybeCoerceInteger),\n/* harmony export */   maybeObj: () => (/* binding */ maybeObj),\n/* harmony export */   safeJSON: () => (/* binding */ safeJSON),\n/* harmony export */   validatePositiveInteger: () => (/* binding */ validatePositiveInteger)\n/* harmony export */ });\n/* harmony import */ var _core_error_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/error.mjs */ \"(rsc)/./node_modules/openai/core/error.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n// https://url.spec.whatwg.org/#url-scheme-string\nconst startsWithSchemeRegexp = /^[a-z][a-z0-9+.-]*:/i;\nconst isAbsoluteURL = (url)=>{\n    return startsWithSchemeRegexp.test(url);\n};\nlet isArray = (val)=>(isArray = Array.isArray, isArray(val));\nlet isReadonlyArray = isArray;\n/** Returns an object if the given value isn't an object, otherwise returns as-is */ function maybeObj(x) {\n    if (typeof x !== \"object\") {\n        return {};\n    }\n    return x ?? {};\n}\n// https://stackoverflow.com/a/34491287\nfunction isEmptyObj(obj) {\n    if (!obj) return true;\n    for(const _k in obj)return false;\n    return true;\n}\n// https://eslint.org/docs/latest/rules/no-prototype-builtins\nfunction hasOwn(obj, key) {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n}\nfunction isObj(obj) {\n    return obj != null && typeof obj === \"object\" && !Array.isArray(obj);\n}\nconst ensurePresent = (value)=>{\n    if (value == null) {\n        throw new _core_error_mjs__WEBPACK_IMPORTED_MODULE_0__.OpenAIError(`Expected a value to be given but received ${value} instead.`);\n    }\n    return value;\n};\nconst validatePositiveInteger = (name, n)=>{\n    if (typeof n !== \"number\" || !Number.isInteger(n)) {\n        throw new _core_error_mjs__WEBPACK_IMPORTED_MODULE_0__.OpenAIError(`${name} must be an integer`);\n    }\n    if (n < 0) {\n        throw new _core_error_mjs__WEBPACK_IMPORTED_MODULE_0__.OpenAIError(`${name} must be a positive integer`);\n    }\n    return n;\n};\nconst coerceInteger = (value)=>{\n    if (typeof value === \"number\") return Math.round(value);\n    if (typeof value === \"string\") return parseInt(value, 10);\n    throw new _core_error_mjs__WEBPACK_IMPORTED_MODULE_0__.OpenAIError(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\nconst coerceFloat = (value)=>{\n    if (typeof value === \"number\") return value;\n    if (typeof value === \"string\") return parseFloat(value);\n    throw new _core_error_mjs__WEBPACK_IMPORTED_MODULE_0__.OpenAIError(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\nconst coerceBoolean = (value)=>{\n    if (typeof value === \"boolean\") return value;\n    if (typeof value === \"string\") return value === \"true\";\n    return Boolean(value);\n};\nconst maybeCoerceInteger = (value)=>{\n    if (value === undefined) {\n        return undefined;\n    }\n    return coerceInteger(value);\n};\nconst maybeCoerceFloat = (value)=>{\n    if (value === undefined) {\n        return undefined;\n    }\n    return coerceFloat(value);\n};\nconst maybeCoerceBoolean = (value)=>{\n    if (value === undefined) {\n        return undefined;\n    }\n    return coerceBoolean(value);\n};\nconst safeJSON = (text)=>{\n    try {\n        return JSON.parse(text);\n    } catch (err) {\n        return undefined;\n    }\n}; //# sourceMappingURL=values.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvb3BlbmFpL2ludGVybmFsL3V0aWxzL3ZhbHVlcy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxzRkFBc0Y7QUFDbkM7QUFDbkQsaURBQWlEO0FBQ2pELE1BQU1DLHlCQUF5QjtBQUN4QixNQUFNQyxnQkFBZ0IsQ0FBQ0M7SUFDMUIsT0FBT0YsdUJBQXVCRyxJQUFJLENBQUNEO0FBQ3ZDLEVBQUU7QUFDSyxJQUFJRSxVQUFVLENBQUNDLE1BQVMsV0FBV0MsTUFBTUYsT0FBTyxFQUFHQSxRQUFRQyxJQUFHLEVBQUc7QUFDakUsSUFBSUUsa0JBQWtCSCxRQUFRO0FBQ3JDLGtGQUFrRixHQUMzRSxTQUFTSSxTQUFTQyxDQUFDO0lBQ3RCLElBQUksT0FBT0EsTUFBTSxVQUFVO1FBQ3ZCLE9BQU8sQ0FBQztJQUNaO0lBQ0EsT0FBT0EsS0FBSyxDQUFDO0FBQ2pCO0FBQ0EsdUNBQXVDO0FBQ2hDLFNBQVNDLFdBQVdDLEdBQUc7SUFDMUIsSUFBSSxDQUFDQSxLQUNELE9BQU87SUFDWCxJQUFLLE1BQU1DLE1BQU1ELElBQ2IsT0FBTztJQUNYLE9BQU87QUFDWDtBQUNBLDZEQUE2RDtBQUN0RCxTQUFTRSxPQUFPRixHQUFHLEVBQUVHLEdBQUc7SUFDM0IsT0FBT0MsT0FBT0MsU0FBUyxDQUFDQyxjQUFjLENBQUNDLElBQUksQ0FBQ1AsS0FBS0c7QUFDckQ7QUFDTyxTQUFTSyxNQUFNUixHQUFHO0lBQ3JCLE9BQU9BLE9BQU8sUUFBUSxPQUFPQSxRQUFRLFlBQVksQ0FBQ0wsTUFBTUYsT0FBTyxDQUFDTztBQUNwRTtBQUNPLE1BQU1TLGdCQUFnQixDQUFDQztJQUMxQixJQUFJQSxTQUFTLE1BQU07UUFDZixNQUFNLElBQUl0Qix3REFBV0EsQ0FBQyxDQUFDLDBDQUEwQyxFQUFFc0IsTUFBTSxTQUFTLENBQUM7SUFDdkY7SUFDQSxPQUFPQTtBQUNYLEVBQUU7QUFDSyxNQUFNQywwQkFBMEIsQ0FBQ0MsTUFBTUM7SUFDMUMsSUFBSSxPQUFPQSxNQUFNLFlBQVksQ0FBQ0MsT0FBT0MsU0FBUyxDQUFDRixJQUFJO1FBQy9DLE1BQU0sSUFBSXpCLHdEQUFXQSxDQUFDLENBQUMsRUFBRXdCLEtBQUssbUJBQW1CLENBQUM7SUFDdEQ7SUFDQSxJQUFJQyxJQUFJLEdBQUc7UUFDUCxNQUFNLElBQUl6Qix3REFBV0EsQ0FBQyxDQUFDLEVBQUV3QixLQUFLLDJCQUEyQixDQUFDO0lBQzlEO0lBQ0EsT0FBT0M7QUFDWCxFQUFFO0FBQ0ssTUFBTUcsZ0JBQWdCLENBQUNOO0lBQzFCLElBQUksT0FBT0EsVUFBVSxVQUNqQixPQUFPTyxLQUFLQyxLQUFLLENBQUNSO0lBQ3RCLElBQUksT0FBT0EsVUFBVSxVQUNqQixPQUFPUyxTQUFTVCxPQUFPO0lBQzNCLE1BQU0sSUFBSXRCLHdEQUFXQSxDQUFDLENBQUMsaUJBQWlCLEVBQUVzQixNQUFNLFFBQVEsRUFBRSxPQUFPQSxNQUFNLGVBQWUsQ0FBQztBQUMzRixFQUFFO0FBQ0ssTUFBTVUsY0FBYyxDQUFDVjtJQUN4QixJQUFJLE9BQU9BLFVBQVUsVUFDakIsT0FBT0E7SUFDWCxJQUFJLE9BQU9BLFVBQVUsVUFDakIsT0FBT1csV0FBV1g7SUFDdEIsTUFBTSxJQUFJdEIsd0RBQVdBLENBQUMsQ0FBQyxpQkFBaUIsRUFBRXNCLE1BQU0sUUFBUSxFQUFFLE9BQU9BLE1BQU0sZUFBZSxDQUFDO0FBQzNGLEVBQUU7QUFDSyxNQUFNWSxnQkFBZ0IsQ0FBQ1o7SUFDMUIsSUFBSSxPQUFPQSxVQUFVLFdBQ2pCLE9BQU9BO0lBQ1gsSUFBSSxPQUFPQSxVQUFVLFVBQ2pCLE9BQU9BLFVBQVU7SUFDckIsT0FBT2EsUUFBUWI7QUFDbkIsRUFBRTtBQUNLLE1BQU1jLHFCQUFxQixDQUFDZDtJQUMvQixJQUFJQSxVQUFVZSxXQUFXO1FBQ3JCLE9BQU9BO0lBQ1g7SUFDQSxPQUFPVCxjQUFjTjtBQUN6QixFQUFFO0FBQ0ssTUFBTWdCLG1CQUFtQixDQUFDaEI7SUFDN0IsSUFBSUEsVUFBVWUsV0FBVztRQUNyQixPQUFPQTtJQUNYO0lBQ0EsT0FBT0wsWUFBWVY7QUFDdkIsRUFBRTtBQUNLLE1BQU1pQixxQkFBcUIsQ0FBQ2pCO0lBQy9CLElBQUlBLFVBQVVlLFdBQVc7UUFDckIsT0FBT0E7SUFDWDtJQUNBLE9BQU9ILGNBQWNaO0FBQ3pCLEVBQUU7QUFDSyxNQUFNa0IsV0FBVyxDQUFDQztJQUNyQixJQUFJO1FBQ0EsT0FBT0MsS0FBS0MsS0FBSyxDQUFDRjtJQUN0QixFQUNBLE9BQU9HLEtBQUs7UUFDUixPQUFPUDtJQUNYO0FBQ0osRUFBRSxDQUNGLG1DQUFtQyIsInNvdXJjZXMiOlsid2VicGFjazovL3N5c3RlbS1wcm9tcHQtdG9vbC13ZWIvLi9ub2RlX21vZHVsZXMvb3BlbmFpL2ludGVybmFsL3V0aWxzL3ZhbHVlcy5tanM/MTE2YyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlIGdlbmVyYXRlZCBmcm9tIG91ciBPcGVuQVBJIHNwZWMgYnkgU3RhaW5sZXNzLiBTZWUgQ09OVFJJQlVUSU5HLm1kIGZvciBkZXRhaWxzLlxuaW1wb3J0IHsgT3BlbkFJRXJyb3IgfSBmcm9tIFwiLi4vLi4vY29yZS9lcnJvci5tanNcIjtcbi8vIGh0dHBzOi8vdXJsLnNwZWMud2hhdHdnLm9yZy8jdXJsLXNjaGVtZS1zdHJpbmdcbmNvbnN0IHN0YXJ0c1dpdGhTY2hlbWVSZWdleHAgPSAvXlthLXpdW2EtejAtOSsuLV0qOi9pO1xuZXhwb3J0IGNvbnN0IGlzQWJzb2x1dGVVUkwgPSAodXJsKSA9PiB7XG4gICAgcmV0dXJuIHN0YXJ0c1dpdGhTY2hlbWVSZWdleHAudGVzdCh1cmwpO1xufTtcbmV4cG9ydCBsZXQgaXNBcnJheSA9ICh2YWwpID0+ICgoaXNBcnJheSA9IEFycmF5LmlzQXJyYXkpLCBpc0FycmF5KHZhbCkpO1xuZXhwb3J0IGxldCBpc1JlYWRvbmx5QXJyYXkgPSBpc0FycmF5O1xuLyoqIFJldHVybnMgYW4gb2JqZWN0IGlmIHRoZSBnaXZlbiB2YWx1ZSBpc24ndCBhbiBvYmplY3QsIG90aGVyd2lzZSByZXR1cm5zIGFzLWlzICovXG5leHBvcnQgZnVuY3Rpb24gbWF5YmVPYmooeCkge1xuICAgIGlmICh0eXBlb2YgeCAhPT0gJ29iamVjdCcpIHtcbiAgICAgICAgcmV0dXJuIHt9O1xuICAgIH1cbiAgICByZXR1cm4geCA/PyB7fTtcbn1cbi8vIGh0dHBzOi8vc3RhY2tvdmVyZmxvdy5jb20vYS8zNDQ5MTI4N1xuZXhwb3J0IGZ1bmN0aW9uIGlzRW1wdHlPYmoob2JqKSB7XG4gICAgaWYgKCFvYmopXG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIGZvciAoY29uc3QgX2sgaW4gb2JqKVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgcmV0dXJuIHRydWU7XG59XG4vLyBodHRwczovL2VzbGludC5vcmcvZG9jcy9sYXRlc3QvcnVsZXMvbm8tcHJvdG90eXBlLWJ1aWx0aW5zXG5leHBvcnQgZnVuY3Rpb24gaGFzT3duKG9iaiwga2V5KSB7XG4gICAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIGtleSk7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNPYmoob2JqKSB7XG4gICAgcmV0dXJuIG9iaiAhPSBudWxsICYmIHR5cGVvZiBvYmogPT09ICdvYmplY3QnICYmICFBcnJheS5pc0FycmF5KG9iaik7XG59XG5leHBvcnQgY29uc3QgZW5zdXJlUHJlc2VudCA9ICh2YWx1ZSkgPT4ge1xuICAgIGlmICh2YWx1ZSA9PSBudWxsKSB7XG4gICAgICAgIHRocm93IG5ldyBPcGVuQUlFcnJvcihgRXhwZWN0ZWQgYSB2YWx1ZSB0byBiZSBnaXZlbiBidXQgcmVjZWl2ZWQgJHt2YWx1ZX0gaW5zdGVhZC5gKTtcbiAgICB9XG4gICAgcmV0dXJuIHZhbHVlO1xufTtcbmV4cG9ydCBjb25zdCB2YWxpZGF0ZVBvc2l0aXZlSW50ZWdlciA9IChuYW1lLCBuKSA9PiB7XG4gICAgaWYgKHR5cGVvZiBuICE9PSAnbnVtYmVyJyB8fCAhTnVtYmVyLmlzSW50ZWdlcihuKSkge1xuICAgICAgICB0aHJvdyBuZXcgT3BlbkFJRXJyb3IoYCR7bmFtZX0gbXVzdCBiZSBhbiBpbnRlZ2VyYCk7XG4gICAgfVxuICAgIGlmIChuIDwgMCkge1xuICAgICAgICB0aHJvdyBuZXcgT3BlbkFJRXJyb3IoYCR7bmFtZX0gbXVzdCBiZSBhIHBvc2l0aXZlIGludGVnZXJgKTtcbiAgICB9XG4gICAgcmV0dXJuIG47XG59O1xuZXhwb3J0IGNvbnN0IGNvZXJjZUludGVnZXIgPSAodmFsdWUpID0+IHtcbiAgICBpZiAodHlwZW9mIHZhbHVlID09PSAnbnVtYmVyJylcbiAgICAgICAgcmV0dXJuIE1hdGgucm91bmQodmFsdWUpO1xuICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnKVxuICAgICAgICByZXR1cm4gcGFyc2VJbnQodmFsdWUsIDEwKTtcbiAgICB0aHJvdyBuZXcgT3BlbkFJRXJyb3IoYENvdWxkIG5vdCBjb2VyY2UgJHt2YWx1ZX0gKHR5cGU6ICR7dHlwZW9mIHZhbHVlfSkgaW50byBhIG51bWJlcmApO1xufTtcbmV4cG9ydCBjb25zdCBjb2VyY2VGbG9hdCA9ICh2YWx1ZSkgPT4ge1xuICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICdudW1iZXInKVxuICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycpXG4gICAgICAgIHJldHVybiBwYXJzZUZsb2F0KHZhbHVlKTtcbiAgICB0aHJvdyBuZXcgT3BlbkFJRXJyb3IoYENvdWxkIG5vdCBjb2VyY2UgJHt2YWx1ZX0gKHR5cGU6ICR7dHlwZW9mIHZhbHVlfSkgaW50byBhIG51bWJlcmApO1xufTtcbmV4cG9ydCBjb25zdCBjb2VyY2VCb29sZWFuID0gKHZhbHVlKSA9PiB7XG4gICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ2Jvb2xlYW4nKVxuICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycpXG4gICAgICAgIHJldHVybiB2YWx1ZSA9PT0gJ3RydWUnO1xuICAgIHJldHVybiBCb29sZWFuKHZhbHVlKTtcbn07XG5leHBvcnQgY29uc3QgbWF5YmVDb2VyY2VJbnRlZ2VyID0gKHZhbHVlKSA9PiB7XG4gICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgcmV0dXJuIGNvZXJjZUludGVnZXIodmFsdWUpO1xufTtcbmV4cG9ydCBjb25zdCBtYXliZUNvZXJjZUZsb2F0ID0gKHZhbHVlKSA9PiB7XG4gICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgcmV0dXJuIGNvZXJjZUZsb2F0KHZhbHVlKTtcbn07XG5leHBvcnQgY29uc3QgbWF5YmVDb2VyY2VCb29sZWFuID0gKHZhbHVlKSA9PiB7XG4gICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgcmV0dXJuIGNvZXJjZUJvb2xlYW4odmFsdWUpO1xufTtcbmV4cG9ydCBjb25zdCBzYWZlSlNPTiA9ICh0ZXh0KSA9PiB7XG4gICAgdHJ5IHtcbiAgICAgICAgcmV0dXJuIEpTT04ucGFyc2UodGV4dCk7XG4gICAgfVxuICAgIGNhdGNoIChlcnIpIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dmFsdWVzLm1qcy5tYXAiXSwibmFtZXMiOlsiT3BlbkFJRXJyb3IiLCJzdGFydHNXaXRoU2NoZW1lUmVnZXhwIiwiaXNBYnNvbHV0ZVVSTCIsInVybCIsInRlc3QiLCJpc0FycmF5IiwidmFsIiwiQXJyYXkiLCJpc1JlYWRvbmx5QXJyYXkiLCJtYXliZU9iaiIsIngiLCJpc0VtcHR5T2JqIiwib2JqIiwiX2siLCJoYXNPd24iLCJrZXkiLCJPYmplY3QiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJpc09iaiIsImVuc3VyZVByZXNlbnQiLCJ2YWx1ZSIsInZhbGlkYXRlUG9zaXRpdmVJbnRlZ2VyIiwibmFtZSIsIm4iLCJOdW1iZXIiLCJpc0ludGVnZXIiLCJjb2VyY2VJbnRlZ2VyIiwiTWF0aCIsInJvdW5kIiwicGFyc2VJbnQiLCJjb2VyY2VGbG9hdCIsInBhcnNlRmxvYXQiLCJjb2VyY2VCb29sZWFuIiwiQm9vbGVhbiIsIm1heWJlQ29lcmNlSW50ZWdlciIsInVuZGVmaW5lZCIsIm1heWJlQ29lcmNlRmxvYXQiLCJtYXliZUNvZXJjZUJvb2xlYW4iLCJzYWZlSlNPTiIsInRleHQiLCJKU09OIiwicGFyc2UiLCJlcnIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/internal/utils/values.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/lib/AbstractChatCompletionRunner.mjs":
/*!******************************************************************!*\
  !*** ./node_modules/openai/lib/AbstractChatCompletionRunner.mjs ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AbstractChatCompletionRunner: () => (/* binding */ AbstractChatCompletionRunner)\n/* harmony export */ });\n/* harmony import */ var _internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../internal/tslib.mjs */ \"(rsc)/./node_modules/openai/internal/tslib.mjs\");\n/* harmony import */ var _error_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error.mjs */ \"(rsc)/./node_modules/openai/error.mjs\");\n/* harmony import */ var _lib_parser_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../lib/parser.mjs */ \"(rsc)/./node_modules/openai/lib/parser.mjs\");\n/* harmony import */ var _chatCompletionUtils_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./chatCompletionUtils.mjs */ \"(rsc)/./node_modules/openai/lib/chatCompletionUtils.mjs\");\n/* harmony import */ var _EventStream_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./EventStream.mjs */ \"(rsc)/./node_modules/openai/lib/EventStream.mjs\");\n/* harmony import */ var _RunnableFunction_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./RunnableFunction.mjs */ \"(rsc)/./node_modules/openai/lib/RunnableFunction.mjs\");\nvar _AbstractChatCompletionRunner_instances, _AbstractChatCompletionRunner_getFinalContent, _AbstractChatCompletionRunner_getFinalMessage, _AbstractChatCompletionRunner_getFinalFunctionToolCall, _AbstractChatCompletionRunner_getFinalFunctionToolCallResult, _AbstractChatCompletionRunner_calculateTotalUsage, _AbstractChatCompletionRunner_validateParams, _AbstractChatCompletionRunner_stringifyFunctionCallResult;\n\n\n\n\n\n\nconst DEFAULT_MAX_CHAT_COMPLETIONS = 10;\nclass AbstractChatCompletionRunner extends _EventStream_mjs__WEBPACK_IMPORTED_MODULE_4__.EventStream {\n    constructor(){\n        super(...arguments);\n        _AbstractChatCompletionRunner_instances.add(this);\n        this._chatCompletions = [];\n        this.messages = [];\n    }\n    _addChatCompletion(chatCompletion) {\n        this._chatCompletions.push(chatCompletion);\n        this._emit(\"chatCompletion\", chatCompletion);\n        const message = chatCompletion.choices[0]?.message;\n        if (message) this._addMessage(message);\n        return chatCompletion;\n    }\n    _addMessage(message, emit = true) {\n        if (!(\"content\" in message)) message.content = null;\n        this.messages.push(message);\n        if (emit) {\n            this._emit(\"message\", message);\n            if ((0,_chatCompletionUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.isToolMessage)(message) && message.content) {\n                // Note, this assumes that {role: 'tool', content: …} is always the result of a call of tool of type=function.\n                this._emit(\"functionToolCallResult\", message.content);\n            } else if ((0,_chatCompletionUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.isAssistantMessage)(message) && message.tool_calls) {\n                for (const tool_call of message.tool_calls){\n                    if (tool_call.type === \"function\") {\n                        this._emit(\"functionToolCall\", tool_call.function);\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * @returns a promise that resolves with the final ChatCompletion, or rejects\n     * if an error occurred or the stream ended prematurely without producing a ChatCompletion.\n     */ async finalChatCompletion() {\n        await this.done();\n        const completion = this._chatCompletions[this._chatCompletions.length - 1];\n        if (!completion) throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(\"stream ended without producing a ChatCompletion\");\n        return completion;\n    }\n    /**\n     * @returns a promise that resolves with the content of the final ChatCompletionMessage, or rejects\n     * if an error occurred or the stream ended prematurely without producing a ChatCompletionMessage.\n     */ async finalContent() {\n        await this.done();\n        return (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalContent).call(this);\n    }\n    /**\n     * @returns a promise that resolves with the the final assistant ChatCompletionMessage response,\n     * or rejects if an error occurred or the stream ended prematurely without producing a ChatCompletionMessage.\n     */ async finalMessage() {\n        await this.done();\n        return (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalMessage).call(this);\n    }\n    /**\n     * @returns a promise that resolves with the content of the final FunctionCall, or rejects\n     * if an error occurred or the stream ended prematurely without producing a ChatCompletionMessage.\n     */ async finalFunctionToolCall() {\n        await this.done();\n        return (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalFunctionToolCall).call(this);\n    }\n    async finalFunctionToolCallResult() {\n        await this.done();\n        return (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalFunctionToolCallResult).call(this);\n    }\n    async totalUsage() {\n        await this.done();\n        return (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_calculateTotalUsage).call(this);\n    }\n    allChatCompletions() {\n        return [\n            ...this._chatCompletions\n        ];\n    }\n    _emitFinal() {\n        const completion = this._chatCompletions[this._chatCompletions.length - 1];\n        if (completion) this._emit(\"finalChatCompletion\", completion);\n        const finalMessage = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalMessage).call(this);\n        if (finalMessage) this._emit(\"finalMessage\", finalMessage);\n        const finalContent = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalContent).call(this);\n        if (finalContent) this._emit(\"finalContent\", finalContent);\n        const finalFunctionCall = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalFunctionToolCall).call(this);\n        if (finalFunctionCall) this._emit(\"finalFunctionToolCall\", finalFunctionCall);\n        const finalFunctionCallResult = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalFunctionToolCallResult).call(this);\n        if (finalFunctionCallResult != null) this._emit(\"finalFunctionToolCallResult\", finalFunctionCallResult);\n        if (this._chatCompletions.some((c)=>c.usage)) {\n            this._emit(\"totalUsage\", (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_calculateTotalUsage).call(this));\n        }\n    }\n    async _createChatCompletion(client, params, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted) this.controller.abort();\n            signal.addEventListener(\"abort\", ()=>this.controller.abort());\n        }\n        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_validateParams).call(this, params);\n        const chatCompletion = await client.chat.completions.create({\n            ...params,\n            stream: false\n        }, {\n            ...options,\n            signal: this.controller.signal\n        });\n        this._connected();\n        return this._addChatCompletion((0,_lib_parser_mjs__WEBPACK_IMPORTED_MODULE_2__.parseChatCompletion)(chatCompletion, params));\n    }\n    async _runChatCompletion(client, params, options) {\n        for (const message of params.messages){\n            this._addMessage(message, false);\n        }\n        return await this._createChatCompletion(client, params, options);\n    }\n    async _runTools(client, params, options) {\n        const role = \"tool\";\n        const { tool_choice = \"auto\", stream, ...restParams } = params;\n        const singleFunctionToCall = typeof tool_choice !== \"string\" && tool_choice.type === \"function\" && tool_choice?.function?.name;\n        const { maxChatCompletions = DEFAULT_MAX_CHAT_COMPLETIONS } = options || {};\n        // TODO(someday): clean this logic up\n        const inputTools = params.tools.map((tool)=>{\n            if ((0,_lib_parser_mjs__WEBPACK_IMPORTED_MODULE_2__.isAutoParsableTool)(tool)) {\n                if (!tool.$callback) {\n                    throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(\"Tool given to `.runTools()` that does not have an associated function\");\n                }\n                return {\n                    type: \"function\",\n                    function: {\n                        function: tool.$callback,\n                        name: tool.function.name,\n                        description: tool.function.description || \"\",\n                        parameters: tool.function.parameters,\n                        parse: tool.$parseRaw,\n                        strict: true\n                    }\n                };\n            }\n            return tool;\n        });\n        const functionsByName = {};\n        for (const f of inputTools){\n            if (f.type === \"function\") {\n                functionsByName[f.function.name || f.function.function.name] = f.function;\n            }\n        }\n        const tools = \"tools\" in params ? inputTools.map((t)=>t.type === \"function\" ? {\n                type: \"function\",\n                function: {\n                    name: t.function.name || t.function.function.name,\n                    parameters: t.function.parameters,\n                    description: t.function.description,\n                    strict: t.function.strict\n                }\n            } : t) : undefined;\n        for (const message of params.messages){\n            this._addMessage(message, false);\n        }\n        for(let i = 0; i < maxChatCompletions; ++i){\n            const chatCompletion = await this._createChatCompletion(client, {\n                ...restParams,\n                tool_choice,\n                tools,\n                messages: [\n                    ...this.messages\n                ]\n            }, options);\n            const message = chatCompletion.choices[0]?.message;\n            if (!message) {\n                throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(`missing message in ChatCompletion response`);\n            }\n            if (!message.tool_calls?.length) {\n                return;\n            }\n            for (const tool_call of message.tool_calls){\n                if (tool_call.type !== \"function\") continue;\n                const tool_call_id = tool_call.id;\n                const { name, arguments: args } = tool_call.function;\n                const fn = functionsByName[name];\n                if (!fn) {\n                    const content = `Invalid tool_call: ${JSON.stringify(name)}. Available options are: ${Object.keys(functionsByName).map((name)=>JSON.stringify(name)).join(\", \")}. Please try again`;\n                    this._addMessage({\n                        role,\n                        tool_call_id,\n                        content\n                    });\n                    continue;\n                } else if (singleFunctionToCall && singleFunctionToCall !== name) {\n                    const content = `Invalid tool_call: ${JSON.stringify(name)}. ${JSON.stringify(singleFunctionToCall)} requested. Please try again`;\n                    this._addMessage({\n                        role,\n                        tool_call_id,\n                        content\n                    });\n                    continue;\n                }\n                let parsed;\n                try {\n                    parsed = (0,_RunnableFunction_mjs__WEBPACK_IMPORTED_MODULE_5__.isRunnableFunctionWithParse)(fn) ? await fn.parse(args) : args;\n                } catch (error) {\n                    const content = error instanceof Error ? error.message : String(error);\n                    this._addMessage({\n                        role,\n                        tool_call_id,\n                        content\n                    });\n                    continue;\n                }\n                // @ts-expect-error it can't rule out `never` type.\n                const rawContent = await fn.function(parsed, this);\n                const content = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_stringifyFunctionCallResult).call(this, rawContent);\n                this._addMessage({\n                    role,\n                    tool_call_id,\n                    content\n                });\n                if (singleFunctionToCall) {\n                    return;\n                }\n            }\n        }\n        return;\n    }\n}\n_AbstractChatCompletionRunner_instances = new WeakSet(), _AbstractChatCompletionRunner_getFinalContent = function _AbstractChatCompletionRunner_getFinalContent() {\n    return (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalMessage).call(this).content ?? null;\n}, _AbstractChatCompletionRunner_getFinalMessage = function _AbstractChatCompletionRunner_getFinalMessage() {\n    let i = this.messages.length;\n    while(i-- > 0){\n        const message = this.messages[i];\n        if ((0,_chatCompletionUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.isAssistantMessage)(message)) {\n            // TODO: support audio here\n            const ret = {\n                ...message,\n                content: message.content ?? null,\n                refusal: message.refusal ?? null\n            };\n            return ret;\n        }\n    }\n    throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(\"stream ended without producing a ChatCompletionMessage with role=assistant\");\n}, _AbstractChatCompletionRunner_getFinalFunctionToolCall = function _AbstractChatCompletionRunner_getFinalFunctionToolCall() {\n    for(let i = this.messages.length - 1; i >= 0; i--){\n        const message = this.messages[i];\n        if ((0,_chatCompletionUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.isAssistantMessage)(message) && message?.tool_calls?.length) {\n            return message.tool_calls.filter((x)=>x.type === \"function\").at(-1)?.function;\n        }\n    }\n    return;\n}, _AbstractChatCompletionRunner_getFinalFunctionToolCallResult = function _AbstractChatCompletionRunner_getFinalFunctionToolCallResult() {\n    for(let i = this.messages.length - 1; i >= 0; i--){\n        const message = this.messages[i];\n        if ((0,_chatCompletionUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.isToolMessage)(message) && message.content != null && typeof message.content === \"string\" && this.messages.some((x)=>x.role === \"assistant\" && x.tool_calls?.some((y)=>y.type === \"function\" && y.id === message.tool_call_id))) {\n            return message.content;\n        }\n    }\n    return;\n}, _AbstractChatCompletionRunner_calculateTotalUsage = function _AbstractChatCompletionRunner_calculateTotalUsage() {\n    const total = {\n        completion_tokens: 0,\n        prompt_tokens: 0,\n        total_tokens: 0\n    };\n    for (const { usage } of this._chatCompletions){\n        if (usage) {\n            total.completion_tokens += usage.completion_tokens;\n            total.prompt_tokens += usage.prompt_tokens;\n            total.total_tokens += usage.total_tokens;\n        }\n    }\n    return total;\n}, _AbstractChatCompletionRunner_validateParams = function _AbstractChatCompletionRunner_validateParams(params) {\n    if (params.n != null && params.n > 1) {\n        throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(\"ChatCompletion convenience helpers only support n=1 at this time. To use n>1, please use chat.completions.create() directly.\");\n    }\n}, _AbstractChatCompletionRunner_stringifyFunctionCallResult = function _AbstractChatCompletionRunner_stringifyFunctionCallResult(rawContent) {\n    return typeof rawContent === \"string\" ? rawContent : rawContent === undefined ? \"undefined\" : JSON.stringify(rawContent);\n}; //# sourceMappingURL=AbstractChatCompletionRunner.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/lib/AbstractChatCompletionRunner.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/lib/AssistantStream.mjs":
/*!*****************************************************!*\
  !*** ./node_modules/openai/lib/AssistantStream.mjs ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AssistantStream: () => (/* binding */ AssistantStream)\n/* harmony export */ });\n/* harmony import */ var _internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../internal/tslib.mjs */ \"(rsc)/./node_modules/openai/internal/tslib.mjs\");\n/* harmony import */ var _streaming_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../streaming.mjs */ \"(rsc)/./node_modules/openai/streaming.mjs\");\n/* harmony import */ var _error_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../error.mjs */ \"(rsc)/./node_modules/openai/error.mjs\");\n/* harmony import */ var _EventStream_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./EventStream.mjs */ \"(rsc)/./node_modules/openai/lib/EventStream.mjs\");\n/* harmony import */ var _internal_utils_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../internal/utils.mjs */ \"(rsc)/./node_modules/openai/internal/utils.mjs\");\nvar _AssistantStream_instances, _a, _AssistantStream_events, _AssistantStream_runStepSnapshots, _AssistantStream_messageSnapshots, _AssistantStream_messageSnapshot, _AssistantStream_finalRun, _AssistantStream_currentContentIndex, _AssistantStream_currentContent, _AssistantStream_currentToolCallIndex, _AssistantStream_currentToolCall, _AssistantStream_currentEvent, _AssistantStream_currentRunSnapshot, _AssistantStream_currentRunStepSnapshot, _AssistantStream_addEvent, _AssistantStream_endRequest, _AssistantStream_handleMessage, _AssistantStream_handleRunStep, _AssistantStream_handleEvent, _AssistantStream_accumulateRunStep, _AssistantStream_accumulateMessage, _AssistantStream_accumulateContent, _AssistantStream_handleRun;\n\n\n\n\n\nclass AssistantStream extends _EventStream_mjs__WEBPACK_IMPORTED_MODULE_3__.EventStream {\n    constructor(){\n        super(...arguments);\n        _AssistantStream_instances.add(this);\n        //Track all events in a single list for reference\n        _AssistantStream_events.set(this, []);\n        //Used to accumulate deltas\n        //We are accumulating many types so the value here is not strict\n        _AssistantStream_runStepSnapshots.set(this, {});\n        _AssistantStream_messageSnapshots.set(this, {});\n        _AssistantStream_messageSnapshot.set(this, void 0);\n        _AssistantStream_finalRun.set(this, void 0);\n        _AssistantStream_currentContentIndex.set(this, void 0);\n        _AssistantStream_currentContent.set(this, void 0);\n        _AssistantStream_currentToolCallIndex.set(this, void 0);\n        _AssistantStream_currentToolCall.set(this, void 0);\n        //For current snapshot methods\n        _AssistantStream_currentEvent.set(this, void 0);\n        _AssistantStream_currentRunSnapshot.set(this, void 0);\n        _AssistantStream_currentRunStepSnapshot.set(this, void 0);\n    }\n    [(_AssistantStream_events = new WeakMap(), _AssistantStream_runStepSnapshots = new WeakMap(), _AssistantStream_messageSnapshots = new WeakMap(), _AssistantStream_messageSnapshot = new WeakMap(), _AssistantStream_finalRun = new WeakMap(), _AssistantStream_currentContentIndex = new WeakMap(), _AssistantStream_currentContent = new WeakMap(), _AssistantStream_currentToolCallIndex = new WeakMap(), _AssistantStream_currentToolCall = new WeakMap(), _AssistantStream_currentEvent = new WeakMap(), _AssistantStream_currentRunSnapshot = new WeakMap(), _AssistantStream_currentRunStepSnapshot = new WeakMap(), _AssistantStream_instances = new WeakSet(), Symbol.asyncIterator)]() {\n        const pushQueue = [];\n        const readQueue = [];\n        let done = false;\n        //Catch all for passing along all events\n        this.on(\"event\", (event)=>{\n            const reader = readQueue.shift();\n            if (reader) {\n                reader.resolve(event);\n            } else {\n                pushQueue.push(event);\n            }\n        });\n        this.on(\"end\", ()=>{\n            done = true;\n            for (const reader of readQueue){\n                reader.resolve(undefined);\n            }\n            readQueue.length = 0;\n        });\n        this.on(\"abort\", (err)=>{\n            done = true;\n            for (const reader of readQueue){\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        this.on(\"error\", (err)=>{\n            done = true;\n            for (const reader of readQueue){\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        return {\n            next: async ()=>{\n                if (!pushQueue.length) {\n                    if (done) {\n                        return {\n                            value: undefined,\n                            done: true\n                        };\n                    }\n                    return new Promise((resolve, reject)=>readQueue.push({\n                            resolve,\n                            reject\n                        })).then((chunk)=>chunk ? {\n                            value: chunk,\n                            done: false\n                        } : {\n                            value: undefined,\n                            done: true\n                        });\n                }\n                const chunk = pushQueue.shift();\n                return {\n                    value: chunk,\n                    done: false\n                };\n            },\n            return: async ()=>{\n                this.abort();\n                return {\n                    value: undefined,\n                    done: true\n                };\n            }\n        };\n    }\n    static fromReadableStream(stream) {\n        const runner = new _a();\n        runner._run(()=>runner._fromReadableStream(stream));\n        return runner;\n    }\n    async _fromReadableStream(readableStream, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted) this.controller.abort();\n            signal.addEventListener(\"abort\", ()=>this.controller.abort());\n        }\n        this._connected();\n        const stream = _streaming_mjs__WEBPACK_IMPORTED_MODULE_1__.Stream.fromReadableStream(readableStream, this.controller);\n        for await (const event of stream){\n            (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_instances, \"m\", _AssistantStream_addEvent).call(this, event);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_2__.APIUserAbortError();\n        }\n        return this._addRun((0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_instances, \"m\", _AssistantStream_endRequest).call(this));\n    }\n    toReadableStream() {\n        const stream = new _streaming_mjs__WEBPACK_IMPORTED_MODULE_1__.Stream(this[Symbol.asyncIterator].bind(this), this.controller);\n        return stream.toReadableStream();\n    }\n    static createToolAssistantStream(runId, runs, params, options) {\n        const runner = new _a();\n        runner._run(()=>runner._runToolAssistantStream(runId, runs, params, {\n                ...options,\n                headers: {\n                    ...options?.headers,\n                    \"X-Stainless-Helper-Method\": \"stream\"\n                }\n            }));\n        return runner;\n    }\n    async _createToolAssistantStream(run, runId, params, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted) this.controller.abort();\n            signal.addEventListener(\"abort\", ()=>this.controller.abort());\n        }\n        const body = {\n            ...params,\n            stream: true\n        };\n        const stream = await run.submitToolOutputs(runId, body, {\n            ...options,\n            signal: this.controller.signal\n        });\n        this._connected();\n        for await (const event of stream){\n            (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_instances, \"m\", _AssistantStream_addEvent).call(this, event);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_2__.APIUserAbortError();\n        }\n        return this._addRun((0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_instances, \"m\", _AssistantStream_endRequest).call(this));\n    }\n    static createThreadAssistantStream(params, thread, options) {\n        const runner = new _a();\n        runner._run(()=>runner._threadAssistantStream(params, thread, {\n                ...options,\n                headers: {\n                    ...options?.headers,\n                    \"X-Stainless-Helper-Method\": \"stream\"\n                }\n            }));\n        return runner;\n    }\n    static createAssistantStream(threadId, runs, params, options) {\n        const runner = new _a();\n        runner._run(()=>runner._runAssistantStream(threadId, runs, params, {\n                ...options,\n                headers: {\n                    ...options?.headers,\n                    \"X-Stainless-Helper-Method\": \"stream\"\n                }\n            }));\n        return runner;\n    }\n    currentEvent() {\n        return (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_currentEvent, \"f\");\n    }\n    currentRun() {\n        return (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_currentRunSnapshot, \"f\");\n    }\n    currentMessageSnapshot() {\n        return (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_messageSnapshot, \"f\");\n    }\n    currentRunStepSnapshot() {\n        return (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_currentRunStepSnapshot, \"f\");\n    }\n    async finalRunSteps() {\n        await this.done();\n        return Object.values((0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_runStepSnapshots, \"f\"));\n    }\n    async finalMessages() {\n        await this.done();\n        return Object.values((0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_messageSnapshots, \"f\"));\n    }\n    async finalRun() {\n        await this.done();\n        if (!(0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_finalRun, \"f\")) throw Error(\"Final run was not received.\");\n        return (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_finalRun, \"f\");\n    }\n    async _createThreadAssistantStream(thread, params, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted) this.controller.abort();\n            signal.addEventListener(\"abort\", ()=>this.controller.abort());\n        }\n        const body = {\n            ...params,\n            stream: true\n        };\n        const stream = await thread.createAndRun(body, {\n            ...options,\n            signal: this.controller.signal\n        });\n        this._connected();\n        for await (const event of stream){\n            (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_instances, \"m\", _AssistantStream_addEvent).call(this, event);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_2__.APIUserAbortError();\n        }\n        return this._addRun((0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_instances, \"m\", _AssistantStream_endRequest).call(this));\n    }\n    async _createAssistantStream(run, threadId, params, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted) this.controller.abort();\n            signal.addEventListener(\"abort\", ()=>this.controller.abort());\n        }\n        const body = {\n            ...params,\n            stream: true\n        };\n        const stream = await run.create(threadId, body, {\n            ...options,\n            signal: this.controller.signal\n        });\n        this._connected();\n        for await (const event of stream){\n            (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_instances, \"m\", _AssistantStream_addEvent).call(this, event);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_2__.APIUserAbortError();\n        }\n        return this._addRun((0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_instances, \"m\", _AssistantStream_endRequest).call(this));\n    }\n    static accumulateDelta(acc, delta) {\n        for (const [key, deltaValue] of Object.entries(delta)){\n            if (!acc.hasOwnProperty(key)) {\n                acc[key] = deltaValue;\n                continue;\n            }\n            let accValue = acc[key];\n            if (accValue === null || accValue === undefined) {\n                acc[key] = deltaValue;\n                continue;\n            }\n            // We don't accumulate these special properties\n            if (key === \"index\" || key === \"type\") {\n                acc[key] = deltaValue;\n                continue;\n            }\n            // Type-specific accumulation logic\n            if (typeof accValue === \"string\" && typeof deltaValue === \"string\") {\n                accValue += deltaValue;\n            } else if (typeof accValue === \"number\" && typeof deltaValue === \"number\") {\n                accValue += deltaValue;\n            } else if ((0,_internal_utils_mjs__WEBPACK_IMPORTED_MODULE_4__.isObj)(accValue) && (0,_internal_utils_mjs__WEBPACK_IMPORTED_MODULE_4__.isObj)(deltaValue)) {\n                accValue = this.accumulateDelta(accValue, deltaValue);\n            } else if (Array.isArray(accValue) && Array.isArray(deltaValue)) {\n                if (accValue.every((x)=>typeof x === \"string\" || typeof x === \"number\")) {\n                    accValue.push(...deltaValue); // Use spread syntax for efficient addition\n                    continue;\n                }\n                for (const deltaEntry of deltaValue){\n                    if (!(0,_internal_utils_mjs__WEBPACK_IMPORTED_MODULE_4__.isObj)(deltaEntry)) {\n                        throw new Error(`Expected array delta entry to be an object but got: ${deltaEntry}`);\n                    }\n                    const index = deltaEntry[\"index\"];\n                    if (index == null) {\n                        console.error(deltaEntry);\n                        throw new Error(\"Expected array delta entry to have an `index` property\");\n                    }\n                    if (typeof index !== \"number\") {\n                        throw new Error(`Expected array delta entry \\`index\\` property to be a number but got ${index}`);\n                    }\n                    const accEntry = accValue[index];\n                    if (accEntry == null) {\n                        accValue.push(deltaEntry);\n                    } else {\n                        accValue[index] = this.accumulateDelta(accEntry, deltaEntry);\n                    }\n                }\n                continue;\n            } else {\n                throw Error(`Unhandled record type: ${key}, deltaValue: ${deltaValue}, accValue: ${accValue}`);\n            }\n            acc[key] = accValue;\n        }\n        return acc;\n    }\n    _addRun(run) {\n        return run;\n    }\n    async _threadAssistantStream(params, thread, options) {\n        return await this._createThreadAssistantStream(thread, params, options);\n    }\n    async _runAssistantStream(threadId, runs, params, options) {\n        return await this._createAssistantStream(runs, threadId, params, options);\n    }\n    async _runToolAssistantStream(runId, runs, params, options) {\n        return await this._createToolAssistantStream(runs, runId, params, options);\n    }\n}\n_a = AssistantStream, _AssistantStream_addEvent = function _AssistantStream_addEvent(event) {\n    if (this.ended) return;\n    (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _AssistantStream_currentEvent, event, \"f\");\n    (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_instances, \"m\", _AssistantStream_handleEvent).call(this, event);\n    switch(event.event){\n        case \"thread.created\":\n            break;\n        case \"thread.run.created\":\n        case \"thread.run.queued\":\n        case \"thread.run.in_progress\":\n        case \"thread.run.requires_action\":\n        case \"thread.run.completed\":\n        case \"thread.run.incomplete\":\n        case \"thread.run.failed\":\n        case \"thread.run.cancelling\":\n        case \"thread.run.cancelled\":\n        case \"thread.run.expired\":\n            (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_instances, \"m\", _AssistantStream_handleRun).call(this, event);\n            break;\n        case \"thread.run.step.created\":\n        case \"thread.run.step.in_progress\":\n        case \"thread.run.step.delta\":\n        case \"thread.run.step.completed\":\n        case \"thread.run.step.failed\":\n        case \"thread.run.step.cancelled\":\n        case \"thread.run.step.expired\":\n            (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_instances, \"m\", _AssistantStream_handleRunStep).call(this, event);\n            break;\n        case \"thread.message.created\":\n        case \"thread.message.in_progress\":\n        case \"thread.message.delta\":\n        case \"thread.message.completed\":\n        case \"thread.message.incomplete\":\n            (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_instances, \"m\", _AssistantStream_handleMessage).call(this, event);\n            break;\n        case \"error\":\n            //This is included for completeness, but errors are processed in the SSE event processing so this should not occur\n            throw new Error(\"Encountered an error event in event processing - errors should be processed earlier\");\n        default:\n            assertNever(event);\n    }\n}, _AssistantStream_endRequest = function _AssistantStream_endRequest() {\n    if (this.ended) {\n        throw new _error_mjs__WEBPACK_IMPORTED_MODULE_2__.OpenAIError(`stream has ended, this shouldn't happen`);\n    }\n    if (!(0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_finalRun, \"f\")) throw Error(\"Final run has not been received\");\n    return (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_finalRun, \"f\");\n}, _AssistantStream_handleMessage = function _AssistantStream_handleMessage(event) {\n    const [accumulatedMessage, newContent] = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_instances, \"m\", _AssistantStream_accumulateMessage).call(this, event, (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_messageSnapshot, \"f\"));\n    (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _AssistantStream_messageSnapshot, accumulatedMessage, \"f\");\n    (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_messageSnapshots, \"f\")[accumulatedMessage.id] = accumulatedMessage;\n    for (const content of newContent){\n        const snapshotContent = accumulatedMessage.content[content.index];\n        if (snapshotContent?.type == \"text\") {\n            this._emit(\"textCreated\", snapshotContent.text);\n        }\n    }\n    switch(event.event){\n        case \"thread.message.created\":\n            this._emit(\"messageCreated\", event.data);\n            break;\n        case \"thread.message.in_progress\":\n            break;\n        case \"thread.message.delta\":\n            this._emit(\"messageDelta\", event.data.delta, accumulatedMessage);\n            if (event.data.delta.content) {\n                for (const content of event.data.delta.content){\n                    //If it is text delta, emit a text delta event\n                    if (content.type == \"text\" && content.text) {\n                        let textDelta = content.text;\n                        let snapshot = accumulatedMessage.content[content.index];\n                        if (snapshot && snapshot.type == \"text\") {\n                            this._emit(\"textDelta\", textDelta, snapshot.text);\n                        } else {\n                            throw Error(\"The snapshot associated with this text delta is not text or missing\");\n                        }\n                    }\n                    if (content.index != (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_currentContentIndex, \"f\")) {\n                        //See if we have in progress content\n                        if ((0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_currentContent, \"f\")) {\n                            switch((0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_currentContent, \"f\").type){\n                                case \"text\":\n                                    this._emit(\"textDone\", (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_currentContent, \"f\").text, (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_messageSnapshot, \"f\"));\n                                    break;\n                                case \"image_file\":\n                                    this._emit(\"imageFileDone\", (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_currentContent, \"f\").image_file, (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_messageSnapshot, \"f\"));\n                                    break;\n                            }\n                        }\n                        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _AssistantStream_currentContentIndex, content.index, \"f\");\n                    }\n                    (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _AssistantStream_currentContent, accumulatedMessage.content[content.index], \"f\");\n                }\n            }\n            break;\n        case \"thread.message.completed\":\n        case \"thread.message.incomplete\":\n            //We emit the latest content we were working on on completion (including incomplete)\n            if ((0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_currentContentIndex, \"f\") !== undefined) {\n                const currentContent = event.data.content[(0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_currentContentIndex, \"f\")];\n                if (currentContent) {\n                    switch(currentContent.type){\n                        case \"image_file\":\n                            this._emit(\"imageFileDone\", currentContent.image_file, (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_messageSnapshot, \"f\"));\n                            break;\n                        case \"text\":\n                            this._emit(\"textDone\", currentContent.text, (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_messageSnapshot, \"f\"));\n                            break;\n                    }\n                }\n            }\n            if ((0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_messageSnapshot, \"f\")) {\n                this._emit(\"messageDone\", event.data);\n            }\n            (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _AssistantStream_messageSnapshot, undefined, \"f\");\n    }\n}, _AssistantStream_handleRunStep = function _AssistantStream_handleRunStep(event) {\n    const accumulatedRunStep = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_instances, \"m\", _AssistantStream_accumulateRunStep).call(this, event);\n    (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _AssistantStream_currentRunStepSnapshot, accumulatedRunStep, \"f\");\n    switch(event.event){\n        case \"thread.run.step.created\":\n            this._emit(\"runStepCreated\", event.data);\n            break;\n        case \"thread.run.step.delta\":\n            const delta = event.data.delta;\n            if (delta.step_details && delta.step_details.type == \"tool_calls\" && delta.step_details.tool_calls && accumulatedRunStep.step_details.type == \"tool_calls\") {\n                for (const toolCall of delta.step_details.tool_calls){\n                    if (toolCall.index == (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_currentToolCallIndex, \"f\")) {\n                        this._emit(\"toolCallDelta\", toolCall, accumulatedRunStep.step_details.tool_calls[toolCall.index]);\n                    } else {\n                        if ((0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_currentToolCall, \"f\")) {\n                            this._emit(\"toolCallDone\", (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_currentToolCall, \"f\"));\n                        }\n                        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _AssistantStream_currentToolCallIndex, toolCall.index, \"f\");\n                        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _AssistantStream_currentToolCall, accumulatedRunStep.step_details.tool_calls[toolCall.index], \"f\");\n                        if ((0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_currentToolCall, \"f\")) this._emit(\"toolCallCreated\", (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_currentToolCall, \"f\"));\n                    }\n                }\n            }\n            this._emit(\"runStepDelta\", event.data.delta, accumulatedRunStep);\n            break;\n        case \"thread.run.step.completed\":\n        case \"thread.run.step.failed\":\n        case \"thread.run.step.cancelled\":\n        case \"thread.run.step.expired\":\n            (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _AssistantStream_currentRunStepSnapshot, undefined, \"f\");\n            const details = event.data.step_details;\n            if (details.type == \"tool_calls\") {\n                if ((0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_currentToolCall, \"f\")) {\n                    this._emit(\"toolCallDone\", (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_currentToolCall, \"f\"));\n                    (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _AssistantStream_currentToolCall, undefined, \"f\");\n                }\n            }\n            this._emit(\"runStepDone\", event.data, accumulatedRunStep);\n            break;\n        case \"thread.run.step.in_progress\":\n            break;\n    }\n}, _AssistantStream_handleEvent = function _AssistantStream_handleEvent(event) {\n    (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_events, \"f\").push(event);\n    this._emit(\"event\", event);\n}, _AssistantStream_accumulateRunStep = function _AssistantStream_accumulateRunStep(event) {\n    switch(event.event){\n        case \"thread.run.step.created\":\n            (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id] = event.data;\n            return event.data;\n        case \"thread.run.step.delta\":\n            let snapshot = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id];\n            if (!snapshot) {\n                throw Error(\"Received a RunStepDelta before creation of a snapshot\");\n            }\n            let data = event.data;\n            if (data.delta) {\n                const accumulated = _a.accumulateDelta(snapshot, data.delta);\n                (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id] = accumulated;\n            }\n            return (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id];\n        case \"thread.run.step.completed\":\n        case \"thread.run.step.failed\":\n        case \"thread.run.step.cancelled\":\n        case \"thread.run.step.expired\":\n        case \"thread.run.step.in_progress\":\n            (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id] = event.data;\n            break;\n    }\n    if ((0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id]) return (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id];\n    throw new Error(\"No snapshot available\");\n}, _AssistantStream_accumulateMessage = function _AssistantStream_accumulateMessage(event, snapshot) {\n    let newContent = [];\n    switch(event.event){\n        case \"thread.message.created\":\n            //On creation the snapshot is just the initial message\n            return [\n                event.data,\n                newContent\n            ];\n        case \"thread.message.delta\":\n            if (!snapshot) {\n                throw Error(\"Received a delta with no existing snapshot (there should be one from message creation)\");\n            }\n            let data = event.data;\n            //If this delta does not have content, nothing to process\n            if (data.delta.content) {\n                for (const contentElement of data.delta.content){\n                    if (contentElement.index in snapshot.content) {\n                        let currentContent = snapshot.content[contentElement.index];\n                        snapshot.content[contentElement.index] = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_instances, \"m\", _AssistantStream_accumulateContent).call(this, contentElement, currentContent);\n                    } else {\n                        snapshot.content[contentElement.index] = contentElement;\n                        // This is a new element\n                        newContent.push(contentElement);\n                    }\n                }\n            }\n            return [\n                snapshot,\n                newContent\n            ];\n        case \"thread.message.in_progress\":\n        case \"thread.message.completed\":\n        case \"thread.message.incomplete\":\n            //No changes on other thread events\n            if (snapshot) {\n                return [\n                    snapshot,\n                    newContent\n                ];\n            } else {\n                throw Error(\"Received thread message event with no existing snapshot\");\n            }\n    }\n    throw Error(\"Tried to accumulate a non-message event\");\n}, _AssistantStream_accumulateContent = function _AssistantStream_accumulateContent(contentElement, currentContent) {\n    return _a.accumulateDelta(currentContent, contentElement);\n}, _AssistantStream_handleRun = function _AssistantStream_handleRun(event) {\n    (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _AssistantStream_currentRunSnapshot, event.data, \"f\");\n    switch(event.event){\n        case \"thread.run.created\":\n            break;\n        case \"thread.run.queued\":\n            break;\n        case \"thread.run.in_progress\":\n            break;\n        case \"thread.run.requires_action\":\n        case \"thread.run.cancelled\":\n        case \"thread.run.failed\":\n        case \"thread.run.completed\":\n        case \"thread.run.expired\":\n        case \"thread.run.incomplete\":\n            (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _AssistantStream_finalRun, event.data, \"f\");\n            if ((0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_currentToolCall, \"f\")) {\n                this._emit(\"toolCallDone\", (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_currentToolCall, \"f\"));\n                (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _AssistantStream_currentToolCall, undefined, \"f\");\n            }\n            break;\n        case \"thread.run.cancelling\":\n            break;\n    }\n};\nfunction assertNever(_x) {} //# sourceMappingURL=AssistantStream.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/lib/AssistantStream.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/lib/ChatCompletionRunner.mjs":
/*!**********************************************************!*\
  !*** ./node_modules/openai/lib/ChatCompletionRunner.mjs ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChatCompletionRunner: () => (/* binding */ ChatCompletionRunner)\n/* harmony export */ });\n/* harmony import */ var _AbstractChatCompletionRunner_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AbstractChatCompletionRunner.mjs */ \"(rsc)/./node_modules/openai/lib/AbstractChatCompletionRunner.mjs\");\n/* harmony import */ var _chatCompletionUtils_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chatCompletionUtils.mjs */ \"(rsc)/./node_modules/openai/lib/chatCompletionUtils.mjs\");\n\n\nclass ChatCompletionRunner extends _AbstractChatCompletionRunner_mjs__WEBPACK_IMPORTED_MODULE_0__.AbstractChatCompletionRunner {\n    static runTools(client, params, options) {\n        const runner = new ChatCompletionRunner();\n        const opts = {\n            ...options,\n            headers: {\n                ...options?.headers,\n                \"X-Stainless-Helper-Method\": \"runTools\"\n            }\n        };\n        runner._run(()=>runner._runTools(client, params, opts));\n        return runner;\n    }\n    _addMessage(message, emit = true) {\n        super._addMessage(message, emit);\n        if ((0,_chatCompletionUtils_mjs__WEBPACK_IMPORTED_MODULE_1__.isAssistantMessage)(message) && message.content) {\n            this._emit(\"content\", message.content);\n        }\n    }\n} //# sourceMappingURL=ChatCompletionRunner.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvb3BlbmFpL2xpYi9DaGF0Q29tcGxldGlvblJ1bm5lci5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQW1GO0FBQ3BCO0FBQ3hELE1BQU1FLDZCQUE2QkYsMkZBQTRCQTtJQUNsRSxPQUFPRyxTQUFTQyxNQUFNLEVBQUVDLE1BQU0sRUFBRUMsT0FBTyxFQUFFO1FBQ3JDLE1BQU1DLFNBQVMsSUFBSUw7UUFDbkIsTUFBTU0sT0FBTztZQUNULEdBQUdGLE9BQU87WUFDVkcsU0FBUztnQkFBRSxHQUFHSCxTQUFTRyxPQUFPO2dCQUFFLDZCQUE2QjtZQUFXO1FBQzVFO1FBQ0FGLE9BQU9HLElBQUksQ0FBQyxJQUFNSCxPQUFPSSxTQUFTLENBQUNQLFFBQVFDLFFBQVFHO1FBQ25ELE9BQU9EO0lBQ1g7SUFDQUssWUFBWUMsT0FBTyxFQUFFQyxPQUFPLElBQUksRUFBRTtRQUM5QixLQUFLLENBQUNGLFlBQVlDLFNBQVNDO1FBQzNCLElBQUliLDRFQUFrQkEsQ0FBQ1ksWUFBWUEsUUFBUUUsT0FBTyxFQUFFO1lBQ2hELElBQUksQ0FBQ0MsS0FBSyxDQUFDLFdBQVdILFFBQVFFLE9BQU87UUFDekM7SUFDSjtBQUNKLEVBQ0EsaURBQWlEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3lzdGVtLXByb21wdC10b29sLXdlYi8uL25vZGVfbW9kdWxlcy9vcGVuYWkvbGliL0NoYXRDb21wbGV0aW9uUnVubmVyLm1qcz8xZTBkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFic3RyYWN0Q2hhdENvbXBsZXRpb25SdW5uZXIsIH0gZnJvbSBcIi4vQWJzdHJhY3RDaGF0Q29tcGxldGlvblJ1bm5lci5tanNcIjtcbmltcG9ydCB7IGlzQXNzaXN0YW50TWVzc2FnZSB9IGZyb20gXCIuL2NoYXRDb21wbGV0aW9uVXRpbHMubWpzXCI7XG5leHBvcnQgY2xhc3MgQ2hhdENvbXBsZXRpb25SdW5uZXIgZXh0ZW5kcyBBYnN0cmFjdENoYXRDb21wbGV0aW9uUnVubmVyIHtcbiAgICBzdGF0aWMgcnVuVG9vbHMoY2xpZW50LCBwYXJhbXMsIG9wdGlvbnMpIHtcbiAgICAgICAgY29uc3QgcnVubmVyID0gbmV3IENoYXRDb21wbGV0aW9uUnVubmVyKCk7XG4gICAgICAgIGNvbnN0IG9wdHMgPSB7XG4gICAgICAgICAgICAuLi5vcHRpb25zLFxuICAgICAgICAgICAgaGVhZGVyczogeyAuLi5vcHRpb25zPy5oZWFkZXJzLCAnWC1TdGFpbmxlc3MtSGVscGVyLU1ldGhvZCc6ICdydW5Ub29scycgfSxcbiAgICAgICAgfTtcbiAgICAgICAgcnVubmVyLl9ydW4oKCkgPT4gcnVubmVyLl9ydW5Ub29scyhjbGllbnQsIHBhcmFtcywgb3B0cykpO1xuICAgICAgICByZXR1cm4gcnVubmVyO1xuICAgIH1cbiAgICBfYWRkTWVzc2FnZShtZXNzYWdlLCBlbWl0ID0gdHJ1ZSkge1xuICAgICAgICBzdXBlci5fYWRkTWVzc2FnZShtZXNzYWdlLCBlbWl0KTtcbiAgICAgICAgaWYgKGlzQXNzaXN0YW50TWVzc2FnZShtZXNzYWdlKSAmJiBtZXNzYWdlLmNvbnRlbnQpIHtcbiAgICAgICAgICAgIHRoaXMuX2VtaXQoJ2NvbnRlbnQnLCBtZXNzYWdlLmNvbnRlbnQpO1xuICAgICAgICB9XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Q2hhdENvbXBsZXRpb25SdW5uZXIubWpzLm1hcCJdLCJuYW1lcyI6WyJBYnN0cmFjdENoYXRDb21wbGV0aW9uUnVubmVyIiwiaXNBc3Npc3RhbnRNZXNzYWdlIiwiQ2hhdENvbXBsZXRpb25SdW5uZXIiLCJydW5Ub29scyIsImNsaWVudCIsInBhcmFtcyIsIm9wdGlvbnMiLCJydW5uZXIiLCJvcHRzIiwiaGVhZGVycyIsIl9ydW4iLCJfcnVuVG9vbHMiLCJfYWRkTWVzc2FnZSIsIm1lc3NhZ2UiLCJlbWl0IiwiY29udGVudCIsIl9lbWl0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/lib/ChatCompletionRunner.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/lib/ChatCompletionStream.mjs":
/*!**********************************************************!*\
  !*** ./node_modules/openai/lib/ChatCompletionStream.mjs ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChatCompletionStream: () => (/* binding */ ChatCompletionStream)\n/* harmony export */ });\n/* harmony import */ var _internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../internal/tslib.mjs */ \"(rsc)/./node_modules/openai/internal/tslib.mjs\");\n/* harmony import */ var _vendor_partial_json_parser_parser_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../_vendor/partial-json-parser/parser.mjs */ \"(rsc)/./node_modules/openai/_vendor/partial-json-parser/parser.mjs\");\n/* harmony import */ var _error_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../error.mjs */ \"(rsc)/./node_modules/openai/error.mjs\");\n/* harmony import */ var _lib_parser_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../lib/parser.mjs */ \"(rsc)/./node_modules/openai/lib/parser.mjs\");\n/* harmony import */ var _streaming_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../streaming.mjs */ \"(rsc)/./node_modules/openai/streaming.mjs\");\n/* harmony import */ var _AbstractChatCompletionRunner_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./AbstractChatCompletionRunner.mjs */ \"(rsc)/./node_modules/openai/lib/AbstractChatCompletionRunner.mjs\");\nvar _ChatCompletionStream_instances, _ChatCompletionStream_params, _ChatCompletionStream_choiceEventStates, _ChatCompletionStream_currentChatCompletionSnapshot, _ChatCompletionStream_beginRequest, _ChatCompletionStream_getChoiceEventState, _ChatCompletionStream_addChunk, _ChatCompletionStream_emitToolCallDoneEvent, _ChatCompletionStream_emitContentDoneEvents, _ChatCompletionStream_endRequest, _ChatCompletionStream_getAutoParseableResponseFormat, _ChatCompletionStream_accumulateChatCompletion;\n\n\n\n\n\n\nclass ChatCompletionStream extends _AbstractChatCompletionRunner_mjs__WEBPACK_IMPORTED_MODULE_5__.AbstractChatCompletionRunner {\n    constructor(params){\n        super();\n        _ChatCompletionStream_instances.add(this);\n        _ChatCompletionStream_params.set(this, void 0);\n        _ChatCompletionStream_choiceEventStates.set(this, void 0);\n        _ChatCompletionStream_currentChatCompletionSnapshot.set(this, void 0);\n        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _ChatCompletionStream_params, params, \"f\");\n        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _ChatCompletionStream_choiceEventStates, [], \"f\");\n    }\n    get currentChatCompletionSnapshot() {\n        return (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ChatCompletionStream_currentChatCompletionSnapshot, \"f\");\n    }\n    /**\n     * Intended for use on the frontend, consuming a stream produced with\n     * `.toReadableStream()` on the backend.\n     *\n     * Note that messages sent to the model do not appear in `.on('message')`\n     * in this context.\n     */ static fromReadableStream(stream) {\n        const runner = new ChatCompletionStream(null);\n        runner._run(()=>runner._fromReadableStream(stream));\n        return runner;\n    }\n    static createChatCompletion(client, params, options) {\n        const runner = new ChatCompletionStream(params);\n        runner._run(()=>runner._runChatCompletion(client, {\n                ...params,\n                stream: true\n            }, {\n                ...options,\n                headers: {\n                    ...options?.headers,\n                    \"X-Stainless-Helper-Method\": \"stream\"\n                }\n            }));\n        return runner;\n    }\n    async _createChatCompletion(client, params, options) {\n        super._createChatCompletion;\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted) this.controller.abort();\n            signal.addEventListener(\"abort\", ()=>this.controller.abort());\n        }\n        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_beginRequest).call(this);\n        const stream = await client.chat.completions.create({\n            ...params,\n            stream: true\n        }, {\n            ...options,\n            signal: this.controller.signal\n        });\n        this._connected();\n        for await (const chunk of stream){\n            (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_addChunk).call(this, chunk);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_2__.APIUserAbortError();\n        }\n        return this._addChatCompletion((0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_endRequest).call(this));\n    }\n    async _fromReadableStream(readableStream, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted) this.controller.abort();\n            signal.addEventListener(\"abort\", ()=>this.controller.abort());\n        }\n        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_beginRequest).call(this);\n        this._connected();\n        const stream = _streaming_mjs__WEBPACK_IMPORTED_MODULE_4__.Stream.fromReadableStream(readableStream, this.controller);\n        let chatId;\n        for await (const chunk of stream){\n            if (chatId && chatId !== chunk.id) {\n                // A new request has been made.\n                this._addChatCompletion((0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_endRequest).call(this));\n            }\n            (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_addChunk).call(this, chunk);\n            chatId = chunk.id;\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_2__.APIUserAbortError();\n        }\n        return this._addChatCompletion((0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_endRequest).call(this));\n    }\n    [(_ChatCompletionStream_params = new WeakMap(), _ChatCompletionStream_choiceEventStates = new WeakMap(), _ChatCompletionStream_currentChatCompletionSnapshot = new WeakMap(), _ChatCompletionStream_instances = new WeakSet(), _ChatCompletionStream_beginRequest = function _ChatCompletionStream_beginRequest() {\n        if (this.ended) return;\n        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _ChatCompletionStream_currentChatCompletionSnapshot, undefined, \"f\");\n    }, _ChatCompletionStream_getChoiceEventState = function _ChatCompletionStream_getChoiceEventState(choice) {\n        let state = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ChatCompletionStream_choiceEventStates, \"f\")[choice.index];\n        if (state) {\n            return state;\n        }\n        state = {\n            content_done: false,\n            refusal_done: false,\n            logprobs_content_done: false,\n            logprobs_refusal_done: false,\n            done_tool_calls: new Set(),\n            current_tool_call_index: null\n        };\n        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ChatCompletionStream_choiceEventStates, \"f\")[choice.index] = state;\n        return state;\n    }, _ChatCompletionStream_addChunk = function _ChatCompletionStream_addChunk(chunk) {\n        if (this.ended) return;\n        const completion = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_accumulateChatCompletion).call(this, chunk);\n        this._emit(\"chunk\", chunk, completion);\n        for (const choice of chunk.choices){\n            const choiceSnapshot = completion.choices[choice.index];\n            if (choice.delta.content != null && choiceSnapshot.message?.role === \"assistant\" && choiceSnapshot.message?.content) {\n                this._emit(\"content\", choice.delta.content, choiceSnapshot.message.content);\n                this._emit(\"content.delta\", {\n                    delta: choice.delta.content,\n                    snapshot: choiceSnapshot.message.content,\n                    parsed: choiceSnapshot.message.parsed\n                });\n            }\n            if (choice.delta.refusal != null && choiceSnapshot.message?.role === \"assistant\" && choiceSnapshot.message?.refusal) {\n                this._emit(\"refusal.delta\", {\n                    delta: choice.delta.refusal,\n                    snapshot: choiceSnapshot.message.refusal\n                });\n            }\n            if (choice.logprobs?.content != null && choiceSnapshot.message?.role === \"assistant\") {\n                this._emit(\"logprobs.content.delta\", {\n                    content: choice.logprobs?.content,\n                    snapshot: choiceSnapshot.logprobs?.content ?? []\n                });\n            }\n            if (choice.logprobs?.refusal != null && choiceSnapshot.message?.role === \"assistant\") {\n                this._emit(\"logprobs.refusal.delta\", {\n                    refusal: choice.logprobs?.refusal,\n                    snapshot: choiceSnapshot.logprobs?.refusal ?? []\n                });\n            }\n            const state = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_getChoiceEventState).call(this, choiceSnapshot);\n            if (choiceSnapshot.finish_reason) {\n                (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_emitContentDoneEvents).call(this, choiceSnapshot);\n                if (state.current_tool_call_index != null) {\n                    (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_emitToolCallDoneEvent).call(this, choiceSnapshot, state.current_tool_call_index);\n                }\n            }\n            for (const toolCall of choice.delta.tool_calls ?? []){\n                if (state.current_tool_call_index !== toolCall.index) {\n                    (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_emitContentDoneEvents).call(this, choiceSnapshot);\n                    // new tool call started, the previous one is done\n                    if (state.current_tool_call_index != null) {\n                        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_emitToolCallDoneEvent).call(this, choiceSnapshot, state.current_tool_call_index);\n                    }\n                }\n                state.current_tool_call_index = toolCall.index;\n            }\n            for (const toolCallDelta of choice.delta.tool_calls ?? []){\n                const toolCallSnapshot = choiceSnapshot.message.tool_calls?.[toolCallDelta.index];\n                if (!toolCallSnapshot?.type) {\n                    continue;\n                }\n                if (toolCallSnapshot?.type === \"function\") {\n                    this._emit(\"tool_calls.function.arguments.delta\", {\n                        name: toolCallSnapshot.function?.name,\n                        index: toolCallDelta.index,\n                        arguments: toolCallSnapshot.function.arguments,\n                        parsed_arguments: toolCallSnapshot.function.parsed_arguments,\n                        arguments_delta: toolCallDelta.function?.arguments ?? \"\"\n                    });\n                } else {\n                    assertNever(toolCallSnapshot?.type);\n                }\n            }\n        }\n    }, _ChatCompletionStream_emitToolCallDoneEvent = function _ChatCompletionStream_emitToolCallDoneEvent(choiceSnapshot, toolCallIndex) {\n        const state = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_getChoiceEventState).call(this, choiceSnapshot);\n        if (state.done_tool_calls.has(toolCallIndex)) {\n            // we've already fired the done event\n            return;\n        }\n        const toolCallSnapshot = choiceSnapshot.message.tool_calls?.[toolCallIndex];\n        if (!toolCallSnapshot) {\n            throw new Error(\"no tool call snapshot\");\n        }\n        if (!toolCallSnapshot.type) {\n            throw new Error(\"tool call snapshot missing `type`\");\n        }\n        if (toolCallSnapshot.type === \"function\") {\n            const inputTool = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ChatCompletionStream_params, \"f\")?.tools?.find((tool)=>(0,_lib_parser_mjs__WEBPACK_IMPORTED_MODULE_3__.isChatCompletionFunctionTool)(tool) && tool.function.name === toolCallSnapshot.function.name); // TS doesn't narrow based on isChatCompletionTool\n            this._emit(\"tool_calls.function.arguments.done\", {\n                name: toolCallSnapshot.function.name,\n                index: toolCallIndex,\n                arguments: toolCallSnapshot.function.arguments,\n                parsed_arguments: (0,_lib_parser_mjs__WEBPACK_IMPORTED_MODULE_3__.isAutoParsableTool)(inputTool) ? inputTool.$parseRaw(toolCallSnapshot.function.arguments) : inputTool?.function.strict ? JSON.parse(toolCallSnapshot.function.arguments) : null\n            });\n        } else {\n            assertNever(toolCallSnapshot.type);\n        }\n    }, _ChatCompletionStream_emitContentDoneEvents = function _ChatCompletionStream_emitContentDoneEvents(choiceSnapshot) {\n        const state = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_getChoiceEventState).call(this, choiceSnapshot);\n        if (choiceSnapshot.message.content && !state.content_done) {\n            state.content_done = true;\n            const responseFormat = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_getAutoParseableResponseFormat).call(this);\n            this._emit(\"content.done\", {\n                content: choiceSnapshot.message.content,\n                parsed: responseFormat ? responseFormat.$parseRaw(choiceSnapshot.message.content) : null\n            });\n        }\n        if (choiceSnapshot.message.refusal && !state.refusal_done) {\n            state.refusal_done = true;\n            this._emit(\"refusal.done\", {\n                refusal: choiceSnapshot.message.refusal\n            });\n        }\n        if (choiceSnapshot.logprobs?.content && !state.logprobs_content_done) {\n            state.logprobs_content_done = true;\n            this._emit(\"logprobs.content.done\", {\n                content: choiceSnapshot.logprobs.content\n            });\n        }\n        if (choiceSnapshot.logprobs?.refusal && !state.logprobs_refusal_done) {\n            state.logprobs_refusal_done = true;\n            this._emit(\"logprobs.refusal.done\", {\n                refusal: choiceSnapshot.logprobs.refusal\n            });\n        }\n    }, _ChatCompletionStream_endRequest = function _ChatCompletionStream_endRequest() {\n        if (this.ended) {\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_2__.OpenAIError(`stream has ended, this shouldn't happen`);\n        }\n        const snapshot = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ChatCompletionStream_currentChatCompletionSnapshot, \"f\");\n        if (!snapshot) {\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_2__.OpenAIError(`request ended without sending any chunks`);\n        }\n        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _ChatCompletionStream_currentChatCompletionSnapshot, undefined, \"f\");\n        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _ChatCompletionStream_choiceEventStates, [], \"f\");\n        return finalizeChatCompletion(snapshot, (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ChatCompletionStream_params, \"f\"));\n    }, _ChatCompletionStream_getAutoParseableResponseFormat = function _ChatCompletionStream_getAutoParseableResponseFormat() {\n        const responseFormat = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ChatCompletionStream_params, \"f\")?.response_format;\n        if ((0,_lib_parser_mjs__WEBPACK_IMPORTED_MODULE_3__.isAutoParsableResponseFormat)(responseFormat)) {\n            return responseFormat;\n        }\n        return null;\n    }, _ChatCompletionStream_accumulateChatCompletion = function _ChatCompletionStream_accumulateChatCompletion(chunk) {\n        var _a, _b, _c, _d;\n        let snapshot = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ChatCompletionStream_currentChatCompletionSnapshot, \"f\");\n        const { choices, ...rest } = chunk;\n        if (!snapshot) {\n            snapshot = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _ChatCompletionStream_currentChatCompletionSnapshot, {\n                ...rest,\n                choices: []\n            }, \"f\");\n        } else {\n            Object.assign(snapshot, rest);\n        }\n        for (const { delta, finish_reason, index, logprobs = null, ...other } of chunk.choices){\n            let choice = snapshot.choices[index];\n            if (!choice) {\n                choice = snapshot.choices[index] = {\n                    finish_reason,\n                    index,\n                    message: {},\n                    logprobs,\n                    ...other\n                };\n            }\n            if (logprobs) {\n                if (!choice.logprobs) {\n                    choice.logprobs = Object.assign({}, logprobs);\n                } else {\n                    const { content, refusal, ...rest } = logprobs;\n                    assertIsEmpty(rest);\n                    Object.assign(choice.logprobs, rest);\n                    if (content) {\n                        (_a = choice.logprobs).content ?? (_a.content = []);\n                        choice.logprobs.content.push(...content);\n                    }\n                    if (refusal) {\n                        (_b = choice.logprobs).refusal ?? (_b.refusal = []);\n                        choice.logprobs.refusal.push(...refusal);\n                    }\n                }\n            }\n            if (finish_reason) {\n                choice.finish_reason = finish_reason;\n                if ((0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ChatCompletionStream_params, \"f\") && (0,_lib_parser_mjs__WEBPACK_IMPORTED_MODULE_3__.hasAutoParseableInput)((0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ChatCompletionStream_params, \"f\"))) {\n                    if (finish_reason === \"length\") {\n                        throw new _error_mjs__WEBPACK_IMPORTED_MODULE_2__.LengthFinishReasonError();\n                    }\n                    if (finish_reason === \"content_filter\") {\n                        throw new _error_mjs__WEBPACK_IMPORTED_MODULE_2__.ContentFilterFinishReasonError();\n                    }\n                }\n            }\n            Object.assign(choice, other);\n            if (!delta) continue; // Shouldn't happen; just in case.\n            const { content, refusal, function_call, role, tool_calls, ...rest } = delta;\n            assertIsEmpty(rest);\n            Object.assign(choice.message, rest);\n            if (refusal) {\n                choice.message.refusal = (choice.message.refusal || \"\") + refusal;\n            }\n            if (role) choice.message.role = role;\n            if (function_call) {\n                if (!choice.message.function_call) {\n                    choice.message.function_call = function_call;\n                } else {\n                    if (function_call.name) choice.message.function_call.name = function_call.name;\n                    if (function_call.arguments) {\n                        (_c = choice.message.function_call).arguments ?? (_c.arguments = \"\");\n                        choice.message.function_call.arguments += function_call.arguments;\n                    }\n                }\n            }\n            if (content) {\n                choice.message.content = (choice.message.content || \"\") + content;\n                if (!choice.message.refusal && (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_getAutoParseableResponseFormat).call(this)) {\n                    choice.message.parsed = (0,_vendor_partial_json_parser_parser_mjs__WEBPACK_IMPORTED_MODULE_1__.partialParse)(choice.message.content);\n                }\n            }\n            if (tool_calls) {\n                if (!choice.message.tool_calls) choice.message.tool_calls = [];\n                for (const { index, id, type, function: fn, ...rest } of tool_calls){\n                    const tool_call = (_d = choice.message.tool_calls)[index] ?? (_d[index] = {});\n                    Object.assign(tool_call, rest);\n                    if (id) tool_call.id = id;\n                    if (type) tool_call.type = type;\n                    if (fn) tool_call.function ?? (tool_call.function = {\n                        name: fn.name ?? \"\",\n                        arguments: \"\"\n                    });\n                    if (fn?.name) tool_call.function.name = fn.name;\n                    if (fn?.arguments) {\n                        tool_call.function.arguments += fn.arguments;\n                        if ((0,_lib_parser_mjs__WEBPACK_IMPORTED_MODULE_3__.shouldParseToolCall)((0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ChatCompletionStream_params, \"f\"), tool_call)) {\n                            tool_call.function.parsed_arguments = (0,_vendor_partial_json_parser_parser_mjs__WEBPACK_IMPORTED_MODULE_1__.partialParse)(tool_call.function.arguments);\n                        }\n                    }\n                }\n            }\n        }\n        return snapshot;\n    }, Symbol.asyncIterator)]() {\n        const pushQueue = [];\n        const readQueue = [];\n        let done = false;\n        this.on(\"chunk\", (chunk)=>{\n            const reader = readQueue.shift();\n            if (reader) {\n                reader.resolve(chunk);\n            } else {\n                pushQueue.push(chunk);\n            }\n        });\n        this.on(\"end\", ()=>{\n            done = true;\n            for (const reader of readQueue){\n                reader.resolve(undefined);\n            }\n            readQueue.length = 0;\n        });\n        this.on(\"abort\", (err)=>{\n            done = true;\n            for (const reader of readQueue){\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        this.on(\"error\", (err)=>{\n            done = true;\n            for (const reader of readQueue){\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        return {\n            next: async ()=>{\n                if (!pushQueue.length) {\n                    if (done) {\n                        return {\n                            value: undefined,\n                            done: true\n                        };\n                    }\n                    return new Promise((resolve, reject)=>readQueue.push({\n                            resolve,\n                            reject\n                        })).then((chunk)=>chunk ? {\n                            value: chunk,\n                            done: false\n                        } : {\n                            value: undefined,\n                            done: true\n                        });\n                }\n                const chunk = pushQueue.shift();\n                return {\n                    value: chunk,\n                    done: false\n                };\n            },\n            return: async ()=>{\n                this.abort();\n                return {\n                    value: undefined,\n                    done: true\n                };\n            }\n        };\n    }\n    toReadableStream() {\n        const stream = new _streaming_mjs__WEBPACK_IMPORTED_MODULE_4__.Stream(this[Symbol.asyncIterator].bind(this), this.controller);\n        return stream.toReadableStream();\n    }\n}\nfunction finalizeChatCompletion(snapshot, params) {\n    const { id, choices, created, model, system_fingerprint, ...rest } = snapshot;\n    const completion = {\n        ...rest,\n        id,\n        choices: choices.map(({ message, finish_reason, index, logprobs, ...choiceRest })=>{\n            if (!finish_reason) {\n                throw new _error_mjs__WEBPACK_IMPORTED_MODULE_2__.OpenAIError(`missing finish_reason for choice ${index}`);\n            }\n            const { content = null, function_call, tool_calls, ...messageRest } = message;\n            const role = message.role; // this is what we expect; in theory it could be different which would make our types a slight lie but would be fine.\n            if (!role) {\n                throw new _error_mjs__WEBPACK_IMPORTED_MODULE_2__.OpenAIError(`missing role for choice ${index}`);\n            }\n            if (function_call) {\n                const { arguments: args, name } = function_call;\n                if (args == null) {\n                    throw new _error_mjs__WEBPACK_IMPORTED_MODULE_2__.OpenAIError(`missing function_call.arguments for choice ${index}`);\n                }\n                if (!name) {\n                    throw new _error_mjs__WEBPACK_IMPORTED_MODULE_2__.OpenAIError(`missing function_call.name for choice ${index}`);\n                }\n                return {\n                    ...choiceRest,\n                    message: {\n                        content,\n                        function_call: {\n                            arguments: args,\n                            name\n                        },\n                        role,\n                        refusal: message.refusal ?? null\n                    },\n                    finish_reason,\n                    index,\n                    logprobs\n                };\n            }\n            if (tool_calls) {\n                return {\n                    ...choiceRest,\n                    index,\n                    finish_reason,\n                    logprobs,\n                    message: {\n                        ...messageRest,\n                        role,\n                        content,\n                        refusal: message.refusal ?? null,\n                        tool_calls: tool_calls.map((tool_call, i)=>{\n                            const { function: fn, type, id, ...toolRest } = tool_call;\n                            const { arguments: args, name, ...fnRest } = fn || {};\n                            if (id == null) {\n                                throw new _error_mjs__WEBPACK_IMPORTED_MODULE_2__.OpenAIError(`missing choices[${index}].tool_calls[${i}].id\\n${str(snapshot)}`);\n                            }\n                            if (type == null) {\n                                throw new _error_mjs__WEBPACK_IMPORTED_MODULE_2__.OpenAIError(`missing choices[${index}].tool_calls[${i}].type\\n${str(snapshot)}`);\n                            }\n                            if (name == null) {\n                                throw new _error_mjs__WEBPACK_IMPORTED_MODULE_2__.OpenAIError(`missing choices[${index}].tool_calls[${i}].function.name\\n${str(snapshot)}`);\n                            }\n                            if (args == null) {\n                                throw new _error_mjs__WEBPACK_IMPORTED_MODULE_2__.OpenAIError(`missing choices[${index}].tool_calls[${i}].function.arguments\\n${str(snapshot)}`);\n                            }\n                            return {\n                                ...toolRest,\n                                id,\n                                type,\n                                function: {\n                                    ...fnRest,\n                                    name,\n                                    arguments: args\n                                }\n                            };\n                        })\n                    }\n                };\n            }\n            return {\n                ...choiceRest,\n                message: {\n                    ...messageRest,\n                    content,\n                    role,\n                    refusal: message.refusal ?? null\n                },\n                finish_reason,\n                index,\n                logprobs\n            };\n        }),\n        created,\n        model,\n        object: \"chat.completion\",\n        ...system_fingerprint ? {\n            system_fingerprint\n        } : {}\n    };\n    return (0,_lib_parser_mjs__WEBPACK_IMPORTED_MODULE_3__.maybeParseChatCompletion)(completion, params);\n}\nfunction str(x) {\n    return JSON.stringify(x);\n}\n/**\n * Ensures the given argument is an empty object, useful for\n * asserting that all known properties on an object have been\n * destructured.\n */ function assertIsEmpty(obj) {\n    return;\n}\nfunction assertNever(_x) {} //# sourceMappingURL=ChatCompletionStream.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvb3BlbmFpL2xpYi9DaGF0Q29tcGxldGlvblN0cmVhbS5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBLElBQUlBLGlDQUFpQ0MsOEJBQThCQyx5Q0FBeUNDLHFEQUFxREMsb0NBQW9DQywyQ0FBMkNDLGdDQUFnQ0MsNkNBQTZDQyw2Q0FBNkNDLGtDQUFrQ0Msc0RBQXNEQztBQUMzVztBQUNkO0FBQytDO0FBQ2tFO0FBQ2hKO0FBQ3lDO0FBQzVFLE1BQU1nQiw2QkFBNkJELDJGQUE0QkE7SUFDbEVFLFlBQVlDLE1BQU0sQ0FBRTtRQUNoQixLQUFLO1FBQ0w3QixnQ0FBZ0M4QixHQUFHLENBQUMsSUFBSTtRQUN4QzdCLDZCQUE2QjhCLEdBQUcsQ0FBQyxJQUFJLEVBQUUsS0FBSztRQUM1QzdCLHdDQUF3QzZCLEdBQUcsQ0FBQyxJQUFJLEVBQUUsS0FBSztRQUN2RDVCLG9EQUFvRDRCLEdBQUcsQ0FBQyxJQUFJLEVBQUUsS0FBSztRQUNuRWxCLDJFQUFzQkEsQ0FBQyxJQUFJLEVBQUVaLDhCQUE4QjRCLFFBQVE7UUFDbkVoQiwyRUFBc0JBLENBQUMsSUFBSSxFQUFFWCx5Q0FBeUMsRUFBRSxFQUFFO0lBQzlFO0lBQ0EsSUFBSThCLGdDQUFnQztRQUNoQyxPQUFPcEIsMkVBQXNCQSxDQUFDLElBQUksRUFBRVQscURBQXFEO0lBQzdGO0lBQ0E7Ozs7OztLQU1DLEdBQ0QsT0FBTzhCLG1CQUFtQkMsTUFBTSxFQUFFO1FBQzlCLE1BQU1DLFNBQVMsSUFBSVIscUJBQXFCO1FBQ3hDUSxPQUFPQyxJQUFJLENBQUMsSUFBTUQsT0FBT0UsbUJBQW1CLENBQUNIO1FBQzdDLE9BQU9DO0lBQ1g7SUFDQSxPQUFPRyxxQkFBcUJDLE1BQU0sRUFBRVYsTUFBTSxFQUFFVyxPQUFPLEVBQUU7UUFDakQsTUFBTUwsU0FBUyxJQUFJUixxQkFBcUJFO1FBQ3hDTSxPQUFPQyxJQUFJLENBQUMsSUFBTUQsT0FBT00sa0JBQWtCLENBQUNGLFFBQVE7Z0JBQUUsR0FBR1YsTUFBTTtnQkFBRUssUUFBUTtZQUFLLEdBQUc7Z0JBQUUsR0FBR00sT0FBTztnQkFBRUUsU0FBUztvQkFBRSxHQUFHRixTQUFTRSxPQUFPO29CQUFFLDZCQUE2QjtnQkFBUztZQUFFO1FBQ3ZLLE9BQU9QO0lBQ1g7SUFDQSxNQUFNUSxzQkFBc0JKLE1BQU0sRUFBRVYsTUFBTSxFQUFFVyxPQUFPLEVBQUU7UUFDakQsS0FBSyxDQUFDRztRQUNOLE1BQU1DLFNBQVNKLFNBQVNJO1FBQ3hCLElBQUlBLFFBQVE7WUFDUixJQUFJQSxPQUFPQyxPQUFPLEVBQ2QsSUFBSSxDQUFDQyxVQUFVLENBQUNDLEtBQUs7WUFDekJILE9BQU9JLGdCQUFnQixDQUFDLFNBQVMsSUFBTSxJQUFJLENBQUNGLFVBQVUsQ0FBQ0MsS0FBSztRQUNoRTtRQUNBbkMsMkVBQXNCQSxDQUFDLElBQUksRUFBRVosaUNBQWlDLEtBQUtJLG9DQUFvQzZDLElBQUksQ0FBQyxJQUFJO1FBQ2hILE1BQU1mLFNBQVMsTUFBTUssT0FBT1csSUFBSSxDQUFDQyxXQUFXLENBQUNDLE1BQU0sQ0FBQztZQUFFLEdBQUd2QixNQUFNO1lBQUVLLFFBQVE7UUFBSyxHQUFHO1lBQUUsR0FBR00sT0FBTztZQUFFSSxRQUFRLElBQUksQ0FBQ0UsVUFBVSxDQUFDRixNQUFNO1FBQUM7UUFDOUgsSUFBSSxDQUFDUyxVQUFVO1FBQ2YsV0FBVyxNQUFNQyxTQUFTcEIsT0FBUTtZQUM5QnRCLDJFQUFzQkEsQ0FBQyxJQUFJLEVBQUVaLGlDQUFpQyxLQUFLTSxnQ0FBZ0MyQyxJQUFJLENBQUMsSUFBSSxFQUFFSztRQUNsSDtRQUNBLElBQUlwQixPQUFPWSxVQUFVLENBQUNGLE1BQU0sRUFBRUMsU0FBUztZQUNuQyxNQUFNLElBQUk5Qix5REFBaUJBO1FBQy9CO1FBQ0EsT0FBTyxJQUFJLENBQUN3QyxrQkFBa0IsQ0FBQzNDLDJFQUFzQkEsQ0FBQyxJQUFJLEVBQUVaLGlDQUFpQyxLQUFLUyxrQ0FBa0N3QyxJQUFJLENBQUMsSUFBSTtJQUNqSjtJQUNBLE1BQU1aLG9CQUFvQm1CLGNBQWMsRUFBRWhCLE9BQU8sRUFBRTtRQUMvQyxNQUFNSSxTQUFTSixTQUFTSTtRQUN4QixJQUFJQSxRQUFRO1lBQ1IsSUFBSUEsT0FBT0MsT0FBTyxFQUNkLElBQUksQ0FBQ0MsVUFBVSxDQUFDQyxLQUFLO1lBQ3pCSCxPQUFPSSxnQkFBZ0IsQ0FBQyxTQUFTLElBQU0sSUFBSSxDQUFDRixVQUFVLENBQUNDLEtBQUs7UUFDaEU7UUFDQW5DLDJFQUFzQkEsQ0FBQyxJQUFJLEVBQUVaLGlDQUFpQyxLQUFLSSxvQ0FBb0M2QyxJQUFJLENBQUMsSUFBSTtRQUNoSCxJQUFJLENBQUNJLFVBQVU7UUFDZixNQUFNbkIsU0FBU1Qsa0RBQU1BLENBQUNRLGtCQUFrQixDQUFDdUIsZ0JBQWdCLElBQUksQ0FBQ1YsVUFBVTtRQUN4RSxJQUFJVztRQUNKLFdBQVcsTUFBTUgsU0FBU3BCLE9BQVE7WUFDOUIsSUFBSXVCLFVBQVVBLFdBQVdILE1BQU1JLEVBQUUsRUFBRTtnQkFDL0IsK0JBQStCO2dCQUMvQixJQUFJLENBQUNILGtCQUFrQixDQUFDM0MsMkVBQXNCQSxDQUFDLElBQUksRUFBRVosaUNBQWlDLEtBQUtTLGtDQUFrQ3dDLElBQUksQ0FBQyxJQUFJO1lBQzFJO1lBQ0FyQywyRUFBc0JBLENBQUMsSUFBSSxFQUFFWixpQ0FBaUMsS0FBS00sZ0NBQWdDMkMsSUFBSSxDQUFDLElBQUksRUFBRUs7WUFDOUdHLFNBQVNILE1BQU1JLEVBQUU7UUFDckI7UUFDQSxJQUFJeEIsT0FBT1ksVUFBVSxDQUFDRixNQUFNLEVBQUVDLFNBQVM7WUFDbkMsTUFBTSxJQUFJOUIseURBQWlCQTtRQUMvQjtRQUNBLE9BQU8sSUFBSSxDQUFDd0Msa0JBQWtCLENBQUMzQywyRUFBc0JBLENBQUMsSUFBSSxFQUFFWixpQ0FBaUMsS0FBS1Msa0NBQWtDd0MsSUFBSSxDQUFDLElBQUk7SUFDako7SUFDQSxDQUFFaEQsQ0FBQUEsK0JBQStCLElBQUkwRCxXQUFXekQsMENBQTBDLElBQUl5RCxXQUFXeEQsc0RBQXNELElBQUl3RCxXQUFXM0Qsa0NBQWtDLElBQUk0RCxXQUFXeEQscUNBQXFDLFNBQVNBO1FBQ3pRLElBQUksSUFBSSxDQUFDeUQsS0FBSyxFQUNWO1FBQ0poRCwyRUFBc0JBLENBQUMsSUFBSSxFQUFFVixxREFBcUQyRCxXQUFXO0lBQ2pHLEdBQUd6RCw0Q0FBNEMsU0FBU0EsMENBQTBDMEQsTUFBTTtRQUNwRyxJQUFJQyxRQUFRcEQsMkVBQXNCQSxDQUFDLElBQUksRUFBRVYseUNBQXlDLElBQUksQ0FBQzZELE9BQU9FLEtBQUssQ0FBQztRQUNwRyxJQUFJRCxPQUFPO1lBQ1AsT0FBT0E7UUFDWDtRQUNBQSxRQUFRO1lBQ0pFLGNBQWM7WUFDZEMsY0FBYztZQUNkQyx1QkFBdUI7WUFDdkJDLHVCQUF1QjtZQUN2QkMsaUJBQWlCLElBQUlDO1lBQ3JCQyx5QkFBeUI7UUFDN0I7UUFDQTVELDJFQUFzQkEsQ0FBQyxJQUFJLEVBQUVWLHlDQUF5QyxJQUFJLENBQUM2RCxPQUFPRSxLQUFLLENBQUMsR0FBR0Q7UUFDM0YsT0FBT0E7SUFDWCxHQUFHMUQsaUNBQWlDLFNBQVNBLCtCQUErQmdELEtBQUs7UUFDN0UsSUFBSSxJQUFJLENBQUNPLEtBQUssRUFDVjtRQUNKLE1BQU1ZLGFBQWE3RCwyRUFBc0JBLENBQUMsSUFBSSxFQUFFWixpQ0FBaUMsS0FBS1csZ0RBQWdEc0MsSUFBSSxDQUFDLElBQUksRUFBRUs7UUFDakosSUFBSSxDQUFDb0IsS0FBSyxDQUFDLFNBQVNwQixPQUFPbUI7UUFDM0IsS0FBSyxNQUFNVixVQUFVVCxNQUFNcUIsT0FBTyxDQUFFO1lBQ2hDLE1BQU1DLGlCQUFpQkgsV0FBV0UsT0FBTyxDQUFDWixPQUFPRSxLQUFLLENBQUM7WUFDdkQsSUFBSUYsT0FBT2MsS0FBSyxDQUFDQyxPQUFPLElBQUksUUFDeEJGLGVBQWVHLE9BQU8sRUFBRUMsU0FBUyxlQUNqQ0osZUFBZUcsT0FBTyxFQUFFRCxTQUFTO2dCQUNqQyxJQUFJLENBQUNKLEtBQUssQ0FBQyxXQUFXWCxPQUFPYyxLQUFLLENBQUNDLE9BQU8sRUFBRUYsZUFBZUcsT0FBTyxDQUFDRCxPQUFPO2dCQUMxRSxJQUFJLENBQUNKLEtBQUssQ0FBQyxpQkFBaUI7b0JBQ3hCRyxPQUFPZCxPQUFPYyxLQUFLLENBQUNDLE9BQU87b0JBQzNCRyxVQUFVTCxlQUFlRyxPQUFPLENBQUNELE9BQU87b0JBQ3hDSSxRQUFRTixlQUFlRyxPQUFPLENBQUNHLE1BQU07Z0JBQ3pDO1lBQ0o7WUFDQSxJQUFJbkIsT0FBT2MsS0FBSyxDQUFDTSxPQUFPLElBQUksUUFDeEJQLGVBQWVHLE9BQU8sRUFBRUMsU0FBUyxlQUNqQ0osZUFBZUcsT0FBTyxFQUFFSSxTQUFTO2dCQUNqQyxJQUFJLENBQUNULEtBQUssQ0FBQyxpQkFBaUI7b0JBQ3hCRyxPQUFPZCxPQUFPYyxLQUFLLENBQUNNLE9BQU87b0JBQzNCRixVQUFVTCxlQUFlRyxPQUFPLENBQUNJLE9BQU87Z0JBQzVDO1lBQ0o7WUFDQSxJQUFJcEIsT0FBT3FCLFFBQVEsRUFBRU4sV0FBVyxRQUFRRixlQUFlRyxPQUFPLEVBQUVDLFNBQVMsYUFBYTtnQkFDbEYsSUFBSSxDQUFDTixLQUFLLENBQUMsMEJBQTBCO29CQUNqQ0ksU0FBU2YsT0FBT3FCLFFBQVEsRUFBRU47b0JBQzFCRyxVQUFVTCxlQUFlUSxRQUFRLEVBQUVOLFdBQVcsRUFBRTtnQkFDcEQ7WUFDSjtZQUNBLElBQUlmLE9BQU9xQixRQUFRLEVBQUVELFdBQVcsUUFBUVAsZUFBZUcsT0FBTyxFQUFFQyxTQUFTLGFBQWE7Z0JBQ2xGLElBQUksQ0FBQ04sS0FBSyxDQUFDLDBCQUEwQjtvQkFDakNTLFNBQVNwQixPQUFPcUIsUUFBUSxFQUFFRDtvQkFDMUJGLFVBQVVMLGVBQWVRLFFBQVEsRUFBRUQsV0FBVyxFQUFFO2dCQUNwRDtZQUNKO1lBQ0EsTUFBTW5CLFFBQVFwRCwyRUFBc0JBLENBQUMsSUFBSSxFQUFFWixpQ0FBaUMsS0FBS0ssMkNBQTJDNEMsSUFBSSxDQUFDLElBQUksRUFBRTJCO1lBQ3ZJLElBQUlBLGVBQWVTLGFBQWEsRUFBRTtnQkFDOUJ6RSwyRUFBc0JBLENBQUMsSUFBSSxFQUFFWixpQ0FBaUMsS0FBS1EsNkNBQTZDeUMsSUFBSSxDQUFDLElBQUksRUFBRTJCO2dCQUMzSCxJQUFJWixNQUFNUSx1QkFBdUIsSUFBSSxNQUFNO29CQUN2QzVELDJFQUFzQkEsQ0FBQyxJQUFJLEVBQUVaLGlDQUFpQyxLQUFLTyw2Q0FBNkMwQyxJQUFJLENBQUMsSUFBSSxFQUFFMkIsZ0JBQWdCWixNQUFNUSx1QkFBdUI7Z0JBQzVLO1lBQ0o7WUFDQSxLQUFLLE1BQU1jLFlBQVl2QixPQUFPYyxLQUFLLENBQUNVLFVBQVUsSUFBSSxFQUFFLENBQUU7Z0JBQ2xELElBQUl2QixNQUFNUSx1QkFBdUIsS0FBS2MsU0FBU3JCLEtBQUssRUFBRTtvQkFDbERyRCwyRUFBc0JBLENBQUMsSUFBSSxFQUFFWixpQ0FBaUMsS0FBS1EsNkNBQTZDeUMsSUFBSSxDQUFDLElBQUksRUFBRTJCO29CQUMzSCxrREFBa0Q7b0JBQ2xELElBQUlaLE1BQU1RLHVCQUF1QixJQUFJLE1BQU07d0JBQ3ZDNUQsMkVBQXNCQSxDQUFDLElBQUksRUFBRVosaUNBQWlDLEtBQUtPLDZDQUE2QzBDLElBQUksQ0FBQyxJQUFJLEVBQUUyQixnQkFBZ0JaLE1BQU1RLHVCQUF1QjtvQkFDNUs7Z0JBQ0o7Z0JBQ0FSLE1BQU1RLHVCQUF1QixHQUFHYyxTQUFTckIsS0FBSztZQUNsRDtZQUNBLEtBQUssTUFBTXVCLGlCQUFpQnpCLE9BQU9jLEtBQUssQ0FBQ1UsVUFBVSxJQUFJLEVBQUUsQ0FBRTtnQkFDdkQsTUFBTUUsbUJBQW1CYixlQUFlRyxPQUFPLENBQUNRLFVBQVUsRUFBRSxDQUFDQyxjQUFjdkIsS0FBSyxDQUFDO2dCQUNqRixJQUFJLENBQUN3QixrQkFBa0JDLE1BQU07b0JBQ3pCO2dCQUNKO2dCQUNBLElBQUlELGtCQUFrQkMsU0FBUyxZQUFZO29CQUN2QyxJQUFJLENBQUNoQixLQUFLLENBQUMsdUNBQXVDO3dCQUM5Q2lCLE1BQU1GLGlCQUFpQkcsUUFBUSxFQUFFRDt3QkFDakMxQixPQUFPdUIsY0FBY3ZCLEtBQUs7d0JBQzFCNEIsV0FBV0osaUJBQWlCRyxRQUFRLENBQUNDLFNBQVM7d0JBQzlDQyxrQkFBa0JMLGlCQUFpQkcsUUFBUSxDQUFDRSxnQkFBZ0I7d0JBQzVEQyxpQkFBaUJQLGNBQWNJLFFBQVEsRUFBRUMsYUFBYTtvQkFDMUQ7Z0JBQ0osT0FDSztvQkFDREcsWUFBWVAsa0JBQWtCQztnQkFDbEM7WUFDSjtRQUNKO0lBQ0osR0FBR25GLDhDQUE4QyxTQUFTQSw0Q0FBNENxRSxjQUFjLEVBQUVxQixhQUFhO1FBQy9ILE1BQU1qQyxRQUFRcEQsMkVBQXNCQSxDQUFDLElBQUksRUFBRVosaUNBQWlDLEtBQUtLLDJDQUEyQzRDLElBQUksQ0FBQyxJQUFJLEVBQUUyQjtRQUN2SSxJQUFJWixNQUFNTSxlQUFlLENBQUM0QixHQUFHLENBQUNELGdCQUFnQjtZQUMxQyxxQ0FBcUM7WUFDckM7UUFDSjtRQUNBLE1BQU1SLG1CQUFtQmIsZUFBZUcsT0FBTyxDQUFDUSxVQUFVLEVBQUUsQ0FBQ1UsY0FBYztRQUMzRSxJQUFJLENBQUNSLGtCQUFrQjtZQUNuQixNQUFNLElBQUlVLE1BQU07UUFDcEI7UUFDQSxJQUFJLENBQUNWLGlCQUFpQkMsSUFBSSxFQUFFO1lBQ3hCLE1BQU0sSUFBSVMsTUFBTTtRQUNwQjtRQUNBLElBQUlWLGlCQUFpQkMsSUFBSSxLQUFLLFlBQVk7WUFDdEMsTUFBTVUsWUFBWXhGLDJFQUFzQkEsQ0FBQyxJQUFJLEVBQUVYLDhCQUE4QixNQUFNb0csT0FBT0MsS0FBSyxDQUFDQyxPQUFTakYsNkVBQTRCQSxDQUFDaUYsU0FBU0EsS0FBS1gsUUFBUSxDQUFDRCxJQUFJLEtBQUtGLGlCQUFpQkcsUUFBUSxDQUFDRCxJQUFJLEdBQUcsa0RBQWtEO1lBQ3pQLElBQUksQ0FBQ2pCLEtBQUssQ0FBQyxzQ0FBc0M7Z0JBQzdDaUIsTUFBTUYsaUJBQWlCRyxRQUFRLENBQUNELElBQUk7Z0JBQ3BDMUIsT0FBT2dDO2dCQUNQSixXQUFXSixpQkFBaUJHLFFBQVEsQ0FBQ0MsU0FBUztnQkFDOUNDLGtCQUFrQnpFLG1FQUFrQkEsQ0FBQytFLGFBQWFBLFVBQVVJLFNBQVMsQ0FBQ2YsaUJBQWlCRyxRQUFRLENBQUNDLFNBQVMsSUFDbkdPLFdBQVdSLFNBQVNhLFNBQVNDLEtBQUtDLEtBQUssQ0FBQ2xCLGlCQUFpQkcsUUFBUSxDQUFDQyxTQUFTLElBQ3ZFO1lBQ2Q7UUFDSixPQUNLO1lBQ0RHLFlBQVlQLGlCQUFpQkMsSUFBSTtRQUNyQztJQUNKLEdBQUdsRiw4Q0FBOEMsU0FBU0EsNENBQTRDb0UsY0FBYztRQUNoSCxNQUFNWixRQUFRcEQsMkVBQXNCQSxDQUFDLElBQUksRUFBRVosaUNBQWlDLEtBQUtLLDJDQUEyQzRDLElBQUksQ0FBQyxJQUFJLEVBQUUyQjtRQUN2SSxJQUFJQSxlQUFlRyxPQUFPLENBQUNELE9BQU8sSUFBSSxDQUFDZCxNQUFNRSxZQUFZLEVBQUU7WUFDdkRGLE1BQU1FLFlBQVksR0FBRztZQUNyQixNQUFNMEMsaUJBQWlCaEcsMkVBQXNCQSxDQUFDLElBQUksRUFBRVosaUNBQWlDLEtBQUtVLHNEQUFzRHVDLElBQUksQ0FBQyxJQUFJO1lBQ3pKLElBQUksQ0FBQ3lCLEtBQUssQ0FBQyxnQkFBZ0I7Z0JBQ3ZCSSxTQUFTRixlQUFlRyxPQUFPLENBQUNELE9BQU87Z0JBQ3ZDSSxRQUFRMEIsaUJBQWlCQSxlQUFlSixTQUFTLENBQUM1QixlQUFlRyxPQUFPLENBQUNELE9BQU8sSUFBSTtZQUN4RjtRQUNKO1FBQ0EsSUFBSUYsZUFBZUcsT0FBTyxDQUFDSSxPQUFPLElBQUksQ0FBQ25CLE1BQU1HLFlBQVksRUFBRTtZQUN2REgsTUFBTUcsWUFBWSxHQUFHO1lBQ3JCLElBQUksQ0FBQ08sS0FBSyxDQUFDLGdCQUFnQjtnQkFBRVMsU0FBU1AsZUFBZUcsT0FBTyxDQUFDSSxPQUFPO1lBQUM7UUFDekU7UUFDQSxJQUFJUCxlQUFlUSxRQUFRLEVBQUVOLFdBQVcsQ0FBQ2QsTUFBTUkscUJBQXFCLEVBQUU7WUFDbEVKLE1BQU1JLHFCQUFxQixHQUFHO1lBQzlCLElBQUksQ0FBQ00sS0FBSyxDQUFDLHlCQUF5QjtnQkFBRUksU0FBU0YsZUFBZVEsUUFBUSxDQUFDTixPQUFPO1lBQUM7UUFDbkY7UUFDQSxJQUFJRixlQUFlUSxRQUFRLEVBQUVELFdBQVcsQ0FBQ25CLE1BQU1LLHFCQUFxQixFQUFFO1lBQ2xFTCxNQUFNSyxxQkFBcUIsR0FBRztZQUM5QixJQUFJLENBQUNLLEtBQUssQ0FBQyx5QkFBeUI7Z0JBQUVTLFNBQVNQLGVBQWVRLFFBQVEsQ0FBQ0QsT0FBTztZQUFDO1FBQ25GO0lBQ0osR0FBRzFFLG1DQUFtQyxTQUFTQTtRQUMzQyxJQUFJLElBQUksQ0FBQ29ELEtBQUssRUFBRTtZQUNaLE1BQU0sSUFBSTNDLG1EQUFXQSxDQUFDLENBQUMsdUNBQXVDLENBQUM7UUFDbkU7UUFDQSxNQUFNK0QsV0FBV3JFLDJFQUFzQkEsQ0FBQyxJQUFJLEVBQUVULHFEQUFxRDtRQUNuRyxJQUFJLENBQUM4RSxVQUFVO1lBQ1gsTUFBTSxJQUFJL0QsbURBQVdBLENBQUMsQ0FBQyx3Q0FBd0MsQ0FBQztRQUNwRTtRQUNBTCwyRUFBc0JBLENBQUMsSUFBSSxFQUFFVixxREFBcUQyRCxXQUFXO1FBQzdGakQsMkVBQXNCQSxDQUFDLElBQUksRUFBRVgseUNBQXlDLEVBQUUsRUFBRTtRQUMxRSxPQUFPMkcsdUJBQXVCNUIsVUFBVXJFLDJFQUFzQkEsQ0FBQyxJQUFJLEVBQUVYLDhCQUE4QjtJQUN2RyxHQUFHUyx1REFBdUQsU0FBU0E7UUFDL0QsTUFBTWtHLGlCQUFpQmhHLDJFQUFzQkEsQ0FBQyxJQUFJLEVBQUVYLDhCQUE4QixNQUFNNkc7UUFDeEYsSUFBSTFGLDZFQUE0QkEsQ0FBQ3dGLGlCQUFpQjtZQUM5QyxPQUFPQTtRQUNYO1FBQ0EsT0FBTztJQUNYLEdBQUdqRyxpREFBaUQsU0FBU0EsK0NBQStDMkMsS0FBSztRQUM3RyxJQUFJeUQsSUFBSUMsSUFBSUMsSUFBSUM7UUFDaEIsSUFBSWpDLFdBQVdyRSwyRUFBc0JBLENBQUMsSUFBSSxFQUFFVCxxREFBcUQ7UUFDakcsTUFBTSxFQUFFd0UsT0FBTyxFQUFFLEdBQUd3QyxNQUFNLEdBQUc3RDtRQUM3QixJQUFJLENBQUMyQixVQUFVO1lBQ1hBLFdBQVdwRSwyRUFBc0JBLENBQUMsSUFBSSxFQUFFVixxREFBcUQ7Z0JBQ3pGLEdBQUdnSCxJQUFJO2dCQUNQeEMsU0FBUyxFQUFFO1lBQ2YsR0FBRztRQUNQLE9BQ0s7WUFDRHlDLE9BQU9DLE1BQU0sQ0FBQ3BDLFVBQVVrQztRQUM1QjtRQUNBLEtBQUssTUFBTSxFQUFFdEMsS0FBSyxFQUFFUSxhQUFhLEVBQUVwQixLQUFLLEVBQUVtQixXQUFXLElBQUksRUFBRSxHQUFHa0MsT0FBTyxJQUFJaEUsTUFBTXFCLE9BQU8sQ0FBRTtZQUNwRixJQUFJWixTQUFTa0IsU0FBU04sT0FBTyxDQUFDVixNQUFNO1lBQ3BDLElBQUksQ0FBQ0YsUUFBUTtnQkFDVEEsU0FBU2tCLFNBQVNOLE9BQU8sQ0FBQ1YsTUFBTSxHQUFHO29CQUFFb0I7b0JBQWVwQjtvQkFBT2MsU0FBUyxDQUFDO29CQUFHSztvQkFBVSxHQUFHa0MsS0FBSztnQkFBQztZQUMvRjtZQUNBLElBQUlsQyxVQUFVO2dCQUNWLElBQUksQ0FBQ3JCLE9BQU9xQixRQUFRLEVBQUU7b0JBQ2xCckIsT0FBT3FCLFFBQVEsR0FBR2dDLE9BQU9DLE1BQU0sQ0FBQyxDQUFDLEdBQUdqQztnQkFDeEMsT0FDSztvQkFDRCxNQUFNLEVBQUVOLE9BQU8sRUFBRUssT0FBTyxFQUFFLEdBQUdnQyxNQUFNLEdBQUcvQjtvQkFDdENtQyxjQUFjSjtvQkFDZEMsT0FBT0MsTUFBTSxDQUFDdEQsT0FBT3FCLFFBQVEsRUFBRStCO29CQUMvQixJQUFJckMsU0FBUzt3QkFDUmlDLENBQUFBLEtBQUtoRCxPQUFPcUIsUUFBUSxFQUFFTixPQUFPLElBQUtpQyxDQUFBQSxHQUFHakMsT0FBTyxHQUFHLEVBQUU7d0JBQ2xEZixPQUFPcUIsUUFBUSxDQUFDTixPQUFPLENBQUMwQyxJQUFJLElBQUkxQztvQkFDcEM7b0JBQ0EsSUFBSUssU0FBUzt3QkFDUjZCLENBQUFBLEtBQUtqRCxPQUFPcUIsUUFBUSxFQUFFRCxPQUFPLElBQUs2QixDQUFBQSxHQUFHN0IsT0FBTyxHQUFHLEVBQUU7d0JBQ2xEcEIsT0FBT3FCLFFBQVEsQ0FBQ0QsT0FBTyxDQUFDcUMsSUFBSSxJQUFJckM7b0JBQ3BDO2dCQUNKO1lBQ0o7WUFDQSxJQUFJRSxlQUFlO2dCQUNmdEIsT0FBT3NCLGFBQWEsR0FBR0E7Z0JBQ3ZCLElBQUl6RSwyRUFBc0JBLENBQUMsSUFBSSxFQUFFWCw4QkFBOEIsUUFBUWtCLHNFQUFxQkEsQ0FBQ1AsMkVBQXNCQSxDQUFDLElBQUksRUFBRVgsOEJBQThCLE9BQU87b0JBQzNKLElBQUlvRixrQkFBa0IsVUFBVTt3QkFDNUIsTUFBTSxJQUFJcEUsK0RBQXVCQTtvQkFDckM7b0JBQ0EsSUFBSW9FLGtCQUFrQixrQkFBa0I7d0JBQ3BDLE1BQU0sSUFBSXJFLHNFQUE4QkE7b0JBQzVDO2dCQUNKO1lBQ0o7WUFDQW9HLE9BQU9DLE1BQU0sQ0FBQ3RELFFBQVF1RDtZQUN0QixJQUFJLENBQUN6QyxPQUNELFVBQVUsa0NBQWtDO1lBQ2hELE1BQU0sRUFBRUMsT0FBTyxFQUFFSyxPQUFPLEVBQUVzQyxhQUFhLEVBQUV6QyxJQUFJLEVBQUVPLFVBQVUsRUFBRSxHQUFHNEIsTUFBTSxHQUFHdEM7WUFDdkUwQyxjQUFjSjtZQUNkQyxPQUFPQyxNQUFNLENBQUN0RCxPQUFPZ0IsT0FBTyxFQUFFb0M7WUFDOUIsSUFBSWhDLFNBQVM7Z0JBQ1RwQixPQUFPZ0IsT0FBTyxDQUFDSSxPQUFPLEdBQUcsQ0FBQ3BCLE9BQU9nQixPQUFPLENBQUNJLE9BQU8sSUFBSSxFQUFDLElBQUtBO1lBQzlEO1lBQ0EsSUFBSUgsTUFDQWpCLE9BQU9nQixPQUFPLENBQUNDLElBQUksR0FBR0E7WUFDMUIsSUFBSXlDLGVBQWU7Z0JBQ2YsSUFBSSxDQUFDMUQsT0FBT2dCLE9BQU8sQ0FBQzBDLGFBQWEsRUFBRTtvQkFDL0IxRCxPQUFPZ0IsT0FBTyxDQUFDMEMsYUFBYSxHQUFHQTtnQkFDbkMsT0FDSztvQkFDRCxJQUFJQSxjQUFjOUIsSUFBSSxFQUNsQjVCLE9BQU9nQixPQUFPLENBQUMwQyxhQUFhLENBQUM5QixJQUFJLEdBQUc4QixjQUFjOUIsSUFBSTtvQkFDMUQsSUFBSThCLGNBQWM1QixTQUFTLEVBQUU7d0JBQ3hCb0IsQ0FBQUEsS0FBS2xELE9BQU9nQixPQUFPLENBQUMwQyxhQUFhLEVBQUU1QixTQUFTLElBQUtvQixDQUFBQSxHQUFHcEIsU0FBUyxHQUFHLEVBQUM7d0JBQ2xFOUIsT0FBT2dCLE9BQU8sQ0FBQzBDLGFBQWEsQ0FBQzVCLFNBQVMsSUFBSTRCLGNBQWM1QixTQUFTO29CQUNyRTtnQkFDSjtZQUNKO1lBQ0EsSUFBSWYsU0FBUztnQkFDVGYsT0FBT2dCLE9BQU8sQ0FBQ0QsT0FBTyxHQUFHLENBQUNmLE9BQU9nQixPQUFPLENBQUNELE9BQU8sSUFBSSxFQUFDLElBQUtBO2dCQUMxRCxJQUFJLENBQUNmLE9BQU9nQixPQUFPLENBQUNJLE9BQU8sSUFBSXZFLDJFQUFzQkEsQ0FBQyxJQUFJLEVBQUVaLGlDQUFpQyxLQUFLVSxzREFBc0R1QyxJQUFJLENBQUMsSUFBSSxHQUFHO29CQUNoS2MsT0FBT2dCLE9BQU8sQ0FBQ0csTUFBTSxHQUFHcEUsb0ZBQVlBLENBQUNpRCxPQUFPZ0IsT0FBTyxDQUFDRCxPQUFPO2dCQUMvRDtZQUNKO1lBQ0EsSUFBSVMsWUFBWTtnQkFDWixJQUFJLENBQUN4QixPQUFPZ0IsT0FBTyxDQUFDUSxVQUFVLEVBQzFCeEIsT0FBT2dCLE9BQU8sQ0FBQ1EsVUFBVSxHQUFHLEVBQUU7Z0JBQ2xDLEtBQUssTUFBTSxFQUFFdEIsS0FBSyxFQUFFUCxFQUFFLEVBQUVnQyxJQUFJLEVBQUVFLFVBQVU4QixFQUFFLEVBQUUsR0FBR1AsTUFBTSxJQUFJNUIsV0FBWTtvQkFDakUsTUFBTW9DLFlBQWEsQ0FBQ1QsS0FBS25ELE9BQU9nQixPQUFPLENBQUNRLFVBQVUsQ0FBQyxDQUFDdEIsTUFBTSxJQUFLaUQsQ0FBQUEsRUFBRSxDQUFDakQsTUFBTSxHQUFHLENBQUM7b0JBQzVFbUQsT0FBT0MsTUFBTSxDQUFDTSxXQUFXUjtvQkFDekIsSUFBSXpELElBQ0FpRSxVQUFVakUsRUFBRSxHQUFHQTtvQkFDbkIsSUFBSWdDLE1BQ0FpQyxVQUFVakMsSUFBSSxHQUFHQTtvQkFDckIsSUFBSWdDLElBQ0FDLFVBQVUvQixRQUFRLElBQUsrQixDQUFBQSxVQUFVL0IsUUFBUSxHQUFHO3dCQUFFRCxNQUFNK0IsR0FBRy9CLElBQUksSUFBSTt3QkFBSUUsV0FBVztvQkFBRztvQkFDckYsSUFBSTZCLElBQUkvQixNQUNKZ0MsVUFBVS9CLFFBQVEsQ0FBQ0QsSUFBSSxHQUFHK0IsR0FBRy9CLElBQUk7b0JBQ3JDLElBQUkrQixJQUFJN0IsV0FBVzt3QkFDZjhCLFVBQVUvQixRQUFRLENBQUNDLFNBQVMsSUFBSTZCLEdBQUc3QixTQUFTO3dCQUM1QyxJQUFJckUsb0VBQW1CQSxDQUFDWiwyRUFBc0JBLENBQUMsSUFBSSxFQUFFWCw4QkFBOEIsTUFBTTBILFlBQVk7NEJBQ2pHQSxVQUFVL0IsUUFBUSxDQUFDRSxnQkFBZ0IsR0FBR2hGLG9GQUFZQSxDQUFDNkcsVUFBVS9CLFFBQVEsQ0FBQ0MsU0FBUzt3QkFDbkY7b0JBQ0o7Z0JBQ0o7WUFDSjtRQUNKO1FBQ0EsT0FBT1o7SUFDWCxHQUFHMkMsT0FBT0MsYUFBYSxFQUFFLEdBQUc7UUFDeEIsTUFBTUMsWUFBWSxFQUFFO1FBQ3BCLE1BQU1DLFlBQVksRUFBRTtRQUNwQixJQUFJQyxPQUFPO1FBQ1gsSUFBSSxDQUFDQyxFQUFFLENBQUMsU0FBUyxDQUFDM0U7WUFDZCxNQUFNNEUsU0FBU0gsVUFBVUksS0FBSztZQUM5QixJQUFJRCxRQUFRO2dCQUNSQSxPQUFPRSxPQUFPLENBQUM5RTtZQUNuQixPQUNLO2dCQUNEd0UsVUFBVU4sSUFBSSxDQUFDbEU7WUFDbkI7UUFDSjtRQUNBLElBQUksQ0FBQzJFLEVBQUUsQ0FBQyxPQUFPO1lBQ1hELE9BQU87WUFDUCxLQUFLLE1BQU1FLFVBQVVILFVBQVc7Z0JBQzVCRyxPQUFPRSxPQUFPLENBQUN0RTtZQUNuQjtZQUNBaUUsVUFBVU0sTUFBTSxHQUFHO1FBQ3ZCO1FBQ0EsSUFBSSxDQUFDSixFQUFFLENBQUMsU0FBUyxDQUFDSztZQUNkTixPQUFPO1lBQ1AsS0FBSyxNQUFNRSxVQUFVSCxVQUFXO2dCQUM1QkcsT0FBT0ssTUFBTSxDQUFDRDtZQUNsQjtZQUNBUCxVQUFVTSxNQUFNLEdBQUc7UUFDdkI7UUFDQSxJQUFJLENBQUNKLEVBQUUsQ0FBQyxTQUFTLENBQUNLO1lBQ2ROLE9BQU87WUFDUCxLQUFLLE1BQU1FLFVBQVVILFVBQVc7Z0JBQzVCRyxPQUFPSyxNQUFNLENBQUNEO1lBQ2xCO1lBQ0FQLFVBQVVNLE1BQU0sR0FBRztRQUN2QjtRQUNBLE9BQU87WUFDSEcsTUFBTTtnQkFDRixJQUFJLENBQUNWLFVBQVVPLE1BQU0sRUFBRTtvQkFDbkIsSUFBSUwsTUFBTTt3QkFDTixPQUFPOzRCQUFFUyxPQUFPM0U7NEJBQVdrRSxNQUFNO3dCQUFLO29CQUMxQztvQkFDQSxPQUFPLElBQUlVLFFBQVEsQ0FBQ04sU0FBU0csU0FBV1IsVUFBVVAsSUFBSSxDQUFDOzRCQUFFWTs0QkFBU0c7d0JBQU8sSUFBSUksSUFBSSxDQUFDLENBQUNyRixRQUFXQSxRQUFROzRCQUFFbUYsT0FBT25GOzRCQUFPMEUsTUFBTTt3QkFBTSxJQUFJOzRCQUFFUyxPQUFPM0U7NEJBQVdrRSxNQUFNO3dCQUFLO2dCQUN6SztnQkFDQSxNQUFNMUUsUUFBUXdFLFVBQVVLLEtBQUs7Z0JBQzdCLE9BQU87b0JBQUVNLE9BQU9uRjtvQkFBTzBFLE1BQU07Z0JBQU07WUFDdkM7WUFDQVksUUFBUTtnQkFDSixJQUFJLENBQUM3RixLQUFLO2dCQUNWLE9BQU87b0JBQUUwRixPQUFPM0U7b0JBQVdrRSxNQUFNO2dCQUFLO1lBQzFDO1FBQ0o7SUFDSjtJQUNBYSxtQkFBbUI7UUFDZixNQUFNM0csU0FBUyxJQUFJVCxrREFBTUEsQ0FBQyxJQUFJLENBQUNtRyxPQUFPQyxhQUFhLENBQUMsQ0FBQ2lCLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDaEcsVUFBVTtRQUNoRixPQUFPWixPQUFPMkcsZ0JBQWdCO0lBQ2xDO0FBQ0o7QUFDQSxTQUFTaEMsdUJBQXVCNUIsUUFBUSxFQUFFcEQsTUFBTTtJQUM1QyxNQUFNLEVBQUU2QixFQUFFLEVBQUVpQixPQUFPLEVBQUVvRSxPQUFPLEVBQUVDLEtBQUssRUFBRUMsa0JBQWtCLEVBQUUsR0FBRzlCLE1BQU0sR0FBR2xDO0lBQ3JFLE1BQU1SLGFBQWE7UUFDZixHQUFHMEMsSUFBSTtRQUNQekQ7UUFDQWlCLFNBQVNBLFFBQVF1RSxHQUFHLENBQUMsQ0FBQyxFQUFFbkUsT0FBTyxFQUFFTSxhQUFhLEVBQUVwQixLQUFLLEVBQUVtQixRQUFRLEVBQUUsR0FBRytELFlBQVk7WUFDNUUsSUFBSSxDQUFDOUQsZUFBZTtnQkFDaEIsTUFBTSxJQUFJbkUsbURBQVdBLENBQUMsQ0FBQyxpQ0FBaUMsRUFBRStDLE1BQU0sQ0FBQztZQUNyRTtZQUNBLE1BQU0sRUFBRWEsVUFBVSxJQUFJLEVBQUUyQyxhQUFhLEVBQUVsQyxVQUFVLEVBQUUsR0FBRzZELGFBQWEsR0FBR3JFO1lBQ3RFLE1BQU1DLE9BQU9ELFFBQVFDLElBQUksRUFBRSxxSEFBcUg7WUFDaEosSUFBSSxDQUFDQSxNQUFNO2dCQUNQLE1BQU0sSUFBSTlELG1EQUFXQSxDQUFDLENBQUMsd0JBQXdCLEVBQUUrQyxNQUFNLENBQUM7WUFDNUQ7WUFDQSxJQUFJd0QsZUFBZTtnQkFDZixNQUFNLEVBQUU1QixXQUFXd0QsSUFBSSxFQUFFMUQsSUFBSSxFQUFFLEdBQUc4QjtnQkFDbEMsSUFBSTRCLFFBQVEsTUFBTTtvQkFDZCxNQUFNLElBQUluSSxtREFBV0EsQ0FBQyxDQUFDLDJDQUEyQyxFQUFFK0MsTUFBTSxDQUFDO2dCQUMvRTtnQkFDQSxJQUFJLENBQUMwQixNQUFNO29CQUNQLE1BQU0sSUFBSXpFLG1EQUFXQSxDQUFDLENBQUMsc0NBQXNDLEVBQUUrQyxNQUFNLENBQUM7Z0JBQzFFO2dCQUNBLE9BQU87b0JBQ0gsR0FBR2tGLFVBQVU7b0JBQ2JwRSxTQUFTO3dCQUNMRDt3QkFDQTJDLGVBQWU7NEJBQUU1QixXQUFXd0Q7NEJBQU0xRDt3QkFBSzt3QkFDdkNYO3dCQUNBRyxTQUFTSixRQUFRSSxPQUFPLElBQUk7b0JBQ2hDO29CQUNBRTtvQkFDQXBCO29CQUNBbUI7Z0JBQ0o7WUFDSjtZQUNBLElBQUlHLFlBQVk7Z0JBQ1osT0FBTztvQkFDSCxHQUFHNEQsVUFBVTtvQkFDYmxGO29CQUNBb0I7b0JBQ0FEO29CQUNBTCxTQUFTO3dCQUNMLEdBQUdxRSxXQUFXO3dCQUNkcEU7d0JBQ0FGO3dCQUNBSyxTQUFTSixRQUFRSSxPQUFPLElBQUk7d0JBQzVCSSxZQUFZQSxXQUFXMkQsR0FBRyxDQUFDLENBQUN2QixXQUFXMkI7NEJBQ25DLE1BQU0sRUFBRTFELFVBQVU4QixFQUFFLEVBQUVoQyxJQUFJLEVBQUVoQyxFQUFFLEVBQUUsR0FBRzZGLFVBQVUsR0FBRzVCOzRCQUNoRCxNQUFNLEVBQUU5QixXQUFXd0QsSUFBSSxFQUFFMUQsSUFBSSxFQUFFLEdBQUc2RCxRQUFRLEdBQUc5QixNQUFNLENBQUM7NEJBQ3BELElBQUloRSxNQUFNLE1BQU07Z0NBQ1osTUFBTSxJQUFJeEMsbURBQVdBLENBQUMsQ0FBQyxnQkFBZ0IsRUFBRStDLE1BQU0sYUFBYSxFQUFFcUYsRUFBRSxNQUFNLEVBQUVHLElBQUl4RSxVQUFVLENBQUM7NEJBQzNGOzRCQUNBLElBQUlTLFFBQVEsTUFBTTtnQ0FDZCxNQUFNLElBQUl4RSxtREFBV0EsQ0FBQyxDQUFDLGdCQUFnQixFQUFFK0MsTUFBTSxhQUFhLEVBQUVxRixFQUFFLFFBQVEsRUFBRUcsSUFBSXhFLFVBQVUsQ0FBQzs0QkFDN0Y7NEJBQ0EsSUFBSVUsUUFBUSxNQUFNO2dDQUNkLE1BQU0sSUFBSXpFLG1EQUFXQSxDQUFDLENBQUMsZ0JBQWdCLEVBQUUrQyxNQUFNLGFBQWEsRUFBRXFGLEVBQUUsaUJBQWlCLEVBQUVHLElBQUl4RSxVQUFVLENBQUM7NEJBQ3RHOzRCQUNBLElBQUlvRSxRQUFRLE1BQU07Z0NBQ2QsTUFBTSxJQUFJbkksbURBQVdBLENBQUMsQ0FBQyxnQkFBZ0IsRUFBRStDLE1BQU0sYUFBYSxFQUFFcUYsRUFBRSxzQkFBc0IsRUFBRUcsSUFBSXhFLFVBQVUsQ0FBQzs0QkFDM0c7NEJBQ0EsT0FBTztnQ0FBRSxHQUFHc0UsUUFBUTtnQ0FBRTdGO2dDQUFJZ0M7Z0NBQU1FLFVBQVU7b0NBQUUsR0FBRzRELE1BQU07b0NBQUU3RDtvQ0FBTUUsV0FBV3dEO2dDQUFLOzRCQUFFO3dCQUNuRjtvQkFDSjtnQkFDSjtZQUNKO1lBQ0EsT0FBTztnQkFDSCxHQUFHRixVQUFVO2dCQUNicEUsU0FBUztvQkFBRSxHQUFHcUUsV0FBVztvQkFBRXRFO29CQUFTRTtvQkFBTUcsU0FBU0osUUFBUUksT0FBTyxJQUFJO2dCQUFLO2dCQUMzRUU7Z0JBQ0FwQjtnQkFDQW1CO1lBQ0o7UUFDSjtRQUNBMkQ7UUFDQUM7UUFDQVUsUUFBUTtRQUNSLEdBQUlULHFCQUFxQjtZQUFFQTtRQUFtQixJQUFJLENBQUMsQ0FBQztJQUN4RDtJQUNBLE9BQU8xSCx5RUFBd0JBLENBQUNrRCxZQUFZNUM7QUFDaEQ7QUFDQSxTQUFTNEgsSUFBSUUsQ0FBQztJQUNWLE9BQU9qRCxLQUFLa0QsU0FBUyxDQUFDRDtBQUMxQjtBQUNBOzs7O0NBSUMsR0FDRCxTQUFTcEMsY0FBY3NDLEdBQUc7SUFDdEI7QUFDSjtBQUNBLFNBQVM3RCxZQUFZOEQsRUFBRSxHQUFJLEVBQzNCLGlEQUFpRCIsInNvdXJjZXMiOlsid2VicGFjazovL3N5c3RlbS1wcm9tcHQtdG9vbC13ZWIvLi9ub2RlX21vZHVsZXMvb3BlbmFpL2xpYi9DaGF0Q29tcGxldGlvblN0cmVhbS5tanM/NjI0NyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgX0NoYXRDb21wbGV0aW9uU3RyZWFtX2luc3RhbmNlcywgX0NoYXRDb21wbGV0aW9uU3RyZWFtX3BhcmFtcywgX0NoYXRDb21wbGV0aW9uU3RyZWFtX2Nob2ljZUV2ZW50U3RhdGVzLCBfQ2hhdENvbXBsZXRpb25TdHJlYW1fY3VycmVudENoYXRDb21wbGV0aW9uU25hcHNob3QsIF9DaGF0Q29tcGxldGlvblN0cmVhbV9iZWdpblJlcXVlc3QsIF9DaGF0Q29tcGxldGlvblN0cmVhbV9nZXRDaG9pY2VFdmVudFN0YXRlLCBfQ2hhdENvbXBsZXRpb25TdHJlYW1fYWRkQ2h1bmssIF9DaGF0Q29tcGxldGlvblN0cmVhbV9lbWl0VG9vbENhbGxEb25lRXZlbnQsIF9DaGF0Q29tcGxldGlvblN0cmVhbV9lbWl0Q29udGVudERvbmVFdmVudHMsIF9DaGF0Q29tcGxldGlvblN0cmVhbV9lbmRSZXF1ZXN0LCBfQ2hhdENvbXBsZXRpb25TdHJlYW1fZ2V0QXV0b1BhcnNlYWJsZVJlc3BvbnNlRm9ybWF0LCBfQ2hhdENvbXBsZXRpb25TdHJlYW1fYWNjdW11bGF0ZUNoYXRDb21wbGV0aW9uO1xuaW1wb3J0IHsgX19jbGFzc1ByaXZhdGVGaWVsZEdldCwgX19jbGFzc1ByaXZhdGVGaWVsZFNldCB9IGZyb20gXCIuLi9pbnRlcm5hbC90c2xpYi5tanNcIjtcbmltcG9ydCB7IHBhcnRpYWxQYXJzZSB9IGZyb20gXCIuLi9fdmVuZG9yL3BhcnRpYWwtanNvbi1wYXJzZXIvcGFyc2VyLm1qc1wiO1xuaW1wb3J0IHsgQVBJVXNlckFib3J0RXJyb3IsIENvbnRlbnRGaWx0ZXJGaW5pc2hSZWFzb25FcnJvciwgTGVuZ3RoRmluaXNoUmVhc29uRXJyb3IsIE9wZW5BSUVycm9yLCB9IGZyb20gXCIuLi9lcnJvci5tanNcIjtcbmltcG9ydCB7IGhhc0F1dG9QYXJzZWFibGVJbnB1dCwgaXNBdXRvUGFyc2FibGVSZXNwb25zZUZvcm1hdCwgaXNBdXRvUGFyc2FibGVUb29sLCBpc0NoYXRDb21wbGV0aW9uRnVuY3Rpb25Ub29sLCBtYXliZVBhcnNlQ2hhdENvbXBsZXRpb24sIHNob3VsZFBhcnNlVG9vbENhbGwsIH0gZnJvbSBcIi4uL2xpYi9wYXJzZXIubWpzXCI7XG5pbXBvcnQgeyBTdHJlYW0gfSBmcm9tIFwiLi4vc3RyZWFtaW5nLm1qc1wiO1xuaW1wb3J0IHsgQWJzdHJhY3RDaGF0Q29tcGxldGlvblJ1bm5lciwgfSBmcm9tIFwiLi9BYnN0cmFjdENoYXRDb21wbGV0aW9uUnVubmVyLm1qc1wiO1xuZXhwb3J0IGNsYXNzIENoYXRDb21wbGV0aW9uU3RyZWFtIGV4dGVuZHMgQWJzdHJhY3RDaGF0Q29tcGxldGlvblJ1bm5lciB7XG4gICAgY29uc3RydWN0b3IocGFyYW1zKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIF9DaGF0Q29tcGxldGlvblN0cmVhbV9pbnN0YW5jZXMuYWRkKHRoaXMpO1xuICAgICAgICBfQ2hhdENvbXBsZXRpb25TdHJlYW1fcGFyYW1zLnNldCh0aGlzLCB2b2lkIDApO1xuICAgICAgICBfQ2hhdENvbXBsZXRpb25TdHJlYW1fY2hvaWNlRXZlbnRTdGF0ZXMuc2V0KHRoaXMsIHZvaWQgMCk7XG4gICAgICAgIF9DaGF0Q29tcGxldGlvblN0cmVhbV9jdXJyZW50Q2hhdENvbXBsZXRpb25TbmFwc2hvdC5zZXQodGhpcywgdm9pZCAwKTtcbiAgICAgICAgX19jbGFzc1ByaXZhdGVGaWVsZFNldCh0aGlzLCBfQ2hhdENvbXBsZXRpb25TdHJlYW1fcGFyYW1zLCBwYXJhbXMsIFwiZlwiKTtcbiAgICAgICAgX19jbGFzc1ByaXZhdGVGaWVsZFNldCh0aGlzLCBfQ2hhdENvbXBsZXRpb25TdHJlYW1fY2hvaWNlRXZlbnRTdGF0ZXMsIFtdLCBcImZcIik7XG4gICAgfVxuICAgIGdldCBjdXJyZW50Q2hhdENvbXBsZXRpb25TbmFwc2hvdCgpIHtcbiAgICAgICAgcmV0dXJuIF9fY2xhc3NQcml2YXRlRmllbGRHZXQodGhpcywgX0NoYXRDb21wbGV0aW9uU3RyZWFtX2N1cnJlbnRDaGF0Q29tcGxldGlvblNuYXBzaG90LCBcImZcIik7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEludGVuZGVkIGZvciB1c2Ugb24gdGhlIGZyb250ZW5kLCBjb25zdW1pbmcgYSBzdHJlYW0gcHJvZHVjZWQgd2l0aFxuICAgICAqIGAudG9SZWFkYWJsZVN0cmVhbSgpYCBvbiB0aGUgYmFja2VuZC5cbiAgICAgKlxuICAgICAqIE5vdGUgdGhhdCBtZXNzYWdlcyBzZW50IHRvIHRoZSBtb2RlbCBkbyBub3QgYXBwZWFyIGluIGAub24oJ21lc3NhZ2UnKWBcbiAgICAgKiBpbiB0aGlzIGNvbnRleHQuXG4gICAgICovXG4gICAgc3RhdGljIGZyb21SZWFkYWJsZVN0cmVhbShzdHJlYW0pIHtcbiAgICAgICAgY29uc3QgcnVubmVyID0gbmV3IENoYXRDb21wbGV0aW9uU3RyZWFtKG51bGwpO1xuICAgICAgICBydW5uZXIuX3J1bigoKSA9PiBydW5uZXIuX2Zyb21SZWFkYWJsZVN0cmVhbShzdHJlYW0pKTtcbiAgICAgICAgcmV0dXJuIHJ1bm5lcjtcbiAgICB9XG4gICAgc3RhdGljIGNyZWF0ZUNoYXRDb21wbGV0aW9uKGNsaWVudCwgcGFyYW1zLCBvcHRpb25zKSB7XG4gICAgICAgIGNvbnN0IHJ1bm5lciA9IG5ldyBDaGF0Q29tcGxldGlvblN0cmVhbShwYXJhbXMpO1xuICAgICAgICBydW5uZXIuX3J1bigoKSA9PiBydW5uZXIuX3J1bkNoYXRDb21wbGV0aW9uKGNsaWVudCwgeyAuLi5wYXJhbXMsIHN0cmVhbTogdHJ1ZSB9LCB7IC4uLm9wdGlvbnMsIGhlYWRlcnM6IHsgLi4ub3B0aW9ucz8uaGVhZGVycywgJ1gtU3RhaW5sZXNzLUhlbHBlci1NZXRob2QnOiAnc3RyZWFtJyB9IH0pKTtcbiAgICAgICAgcmV0dXJuIHJ1bm5lcjtcbiAgICB9XG4gICAgYXN5bmMgX2NyZWF0ZUNoYXRDb21wbGV0aW9uKGNsaWVudCwgcGFyYW1zLCBvcHRpb25zKSB7XG4gICAgICAgIHN1cGVyLl9jcmVhdGVDaGF0Q29tcGxldGlvbjtcbiAgICAgICAgY29uc3Qgc2lnbmFsID0gb3B0aW9ucz8uc2lnbmFsO1xuICAgICAgICBpZiAoc2lnbmFsKSB7XG4gICAgICAgICAgICBpZiAoc2lnbmFsLmFib3J0ZWQpXG4gICAgICAgICAgICAgICAgdGhpcy5jb250cm9sbGVyLmFib3J0KCk7XG4gICAgICAgICAgICBzaWduYWwuYWRkRXZlbnRMaXN0ZW5lcignYWJvcnQnLCAoKSA9PiB0aGlzLmNvbnRyb2xsZXIuYWJvcnQoKSk7XG4gICAgICAgIH1cbiAgICAgICAgX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfQ2hhdENvbXBsZXRpb25TdHJlYW1faW5zdGFuY2VzLCBcIm1cIiwgX0NoYXRDb21wbGV0aW9uU3RyZWFtX2JlZ2luUmVxdWVzdCkuY2FsbCh0aGlzKTtcbiAgICAgICAgY29uc3Qgc3RyZWFtID0gYXdhaXQgY2xpZW50LmNoYXQuY29tcGxldGlvbnMuY3JlYXRlKHsgLi4ucGFyYW1zLCBzdHJlYW06IHRydWUgfSwgeyAuLi5vcHRpb25zLCBzaWduYWw6IHRoaXMuY29udHJvbGxlci5zaWduYWwgfSk7XG4gICAgICAgIHRoaXMuX2Nvbm5lY3RlZCgpO1xuICAgICAgICBmb3IgYXdhaXQgKGNvbnN0IGNodW5rIG9mIHN0cmVhbSkge1xuICAgICAgICAgICAgX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfQ2hhdENvbXBsZXRpb25TdHJlYW1faW5zdGFuY2VzLCBcIm1cIiwgX0NoYXRDb21wbGV0aW9uU3RyZWFtX2FkZENodW5rKS5jYWxsKHRoaXMsIGNodW5rKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoc3RyZWFtLmNvbnRyb2xsZXIuc2lnbmFsPy5hYm9ydGVkKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgQVBJVXNlckFib3J0RXJyb3IoKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5fYWRkQ2hhdENvbXBsZXRpb24oX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfQ2hhdENvbXBsZXRpb25TdHJlYW1faW5zdGFuY2VzLCBcIm1cIiwgX0NoYXRDb21wbGV0aW9uU3RyZWFtX2VuZFJlcXVlc3QpLmNhbGwodGhpcykpO1xuICAgIH1cbiAgICBhc3luYyBfZnJvbVJlYWRhYmxlU3RyZWFtKHJlYWRhYmxlU3RyZWFtLCBvcHRpb25zKSB7XG4gICAgICAgIGNvbnN0IHNpZ25hbCA9IG9wdGlvbnM/LnNpZ25hbDtcbiAgICAgICAgaWYgKHNpZ25hbCkge1xuICAgICAgICAgICAgaWYgKHNpZ25hbC5hYm9ydGVkKVxuICAgICAgICAgICAgICAgIHRoaXMuY29udHJvbGxlci5hYm9ydCgpO1xuICAgICAgICAgICAgc2lnbmFsLmFkZEV2ZW50TGlzdGVuZXIoJ2Fib3J0JywgKCkgPT4gdGhpcy5jb250cm9sbGVyLmFib3J0KCkpO1xuICAgICAgICB9XG4gICAgICAgIF9fY2xhc3NQcml2YXRlRmllbGRHZXQodGhpcywgX0NoYXRDb21wbGV0aW9uU3RyZWFtX2luc3RhbmNlcywgXCJtXCIsIF9DaGF0Q29tcGxldGlvblN0cmVhbV9iZWdpblJlcXVlc3QpLmNhbGwodGhpcyk7XG4gICAgICAgIHRoaXMuX2Nvbm5lY3RlZCgpO1xuICAgICAgICBjb25zdCBzdHJlYW0gPSBTdHJlYW0uZnJvbVJlYWRhYmxlU3RyZWFtKHJlYWRhYmxlU3RyZWFtLCB0aGlzLmNvbnRyb2xsZXIpO1xuICAgICAgICBsZXQgY2hhdElkO1xuICAgICAgICBmb3IgYXdhaXQgKGNvbnN0IGNodW5rIG9mIHN0cmVhbSkge1xuICAgICAgICAgICAgaWYgKGNoYXRJZCAmJiBjaGF0SWQgIT09IGNodW5rLmlkKSB7XG4gICAgICAgICAgICAgICAgLy8gQSBuZXcgcmVxdWVzdCBoYXMgYmVlbiBtYWRlLlxuICAgICAgICAgICAgICAgIHRoaXMuX2FkZENoYXRDb21wbGV0aW9uKF9fY2xhc3NQcml2YXRlRmllbGRHZXQodGhpcywgX0NoYXRDb21wbGV0aW9uU3RyZWFtX2luc3RhbmNlcywgXCJtXCIsIF9DaGF0Q29tcGxldGlvblN0cmVhbV9lbmRSZXF1ZXN0KS5jYWxsKHRoaXMpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF9fY2xhc3NQcml2YXRlRmllbGRHZXQodGhpcywgX0NoYXRDb21wbGV0aW9uU3RyZWFtX2luc3RhbmNlcywgXCJtXCIsIF9DaGF0Q29tcGxldGlvblN0cmVhbV9hZGRDaHVuaykuY2FsbCh0aGlzLCBjaHVuayk7XG4gICAgICAgICAgICBjaGF0SWQgPSBjaHVuay5pZDtcbiAgICAgICAgfVxuICAgICAgICBpZiAoc3RyZWFtLmNvbnRyb2xsZXIuc2lnbmFsPy5hYm9ydGVkKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgQVBJVXNlckFib3J0RXJyb3IoKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5fYWRkQ2hhdENvbXBsZXRpb24oX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfQ2hhdENvbXBsZXRpb25TdHJlYW1faW5zdGFuY2VzLCBcIm1cIiwgX0NoYXRDb21wbGV0aW9uU3RyZWFtX2VuZFJlcXVlc3QpLmNhbGwodGhpcykpO1xuICAgIH1cbiAgICBbKF9DaGF0Q29tcGxldGlvblN0cmVhbV9wYXJhbXMgPSBuZXcgV2Vha01hcCgpLCBfQ2hhdENvbXBsZXRpb25TdHJlYW1fY2hvaWNlRXZlbnRTdGF0ZXMgPSBuZXcgV2Vha01hcCgpLCBfQ2hhdENvbXBsZXRpb25TdHJlYW1fY3VycmVudENoYXRDb21wbGV0aW9uU25hcHNob3QgPSBuZXcgV2Vha01hcCgpLCBfQ2hhdENvbXBsZXRpb25TdHJlYW1faW5zdGFuY2VzID0gbmV3IFdlYWtTZXQoKSwgX0NoYXRDb21wbGV0aW9uU3RyZWFtX2JlZ2luUmVxdWVzdCA9IGZ1bmN0aW9uIF9DaGF0Q29tcGxldGlvblN0cmVhbV9iZWdpblJlcXVlc3QoKSB7XG4gICAgICAgIGlmICh0aGlzLmVuZGVkKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICBfX2NsYXNzUHJpdmF0ZUZpZWxkU2V0KHRoaXMsIF9DaGF0Q29tcGxldGlvblN0cmVhbV9jdXJyZW50Q2hhdENvbXBsZXRpb25TbmFwc2hvdCwgdW5kZWZpbmVkLCBcImZcIik7XG4gICAgfSwgX0NoYXRDb21wbGV0aW9uU3RyZWFtX2dldENob2ljZUV2ZW50U3RhdGUgPSBmdW5jdGlvbiBfQ2hhdENvbXBsZXRpb25TdHJlYW1fZ2V0Q2hvaWNlRXZlbnRTdGF0ZShjaG9pY2UpIHtcbiAgICAgICAgbGV0IHN0YXRlID0gX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfQ2hhdENvbXBsZXRpb25TdHJlYW1fY2hvaWNlRXZlbnRTdGF0ZXMsIFwiZlwiKVtjaG9pY2UuaW5kZXhdO1xuICAgICAgICBpZiAoc3RhdGUpIHtcbiAgICAgICAgICAgIHJldHVybiBzdGF0ZTtcbiAgICAgICAgfVxuICAgICAgICBzdGF0ZSA9IHtcbiAgICAgICAgICAgIGNvbnRlbnRfZG9uZTogZmFsc2UsXG4gICAgICAgICAgICByZWZ1c2FsX2RvbmU6IGZhbHNlLFxuICAgICAgICAgICAgbG9ncHJvYnNfY29udGVudF9kb25lOiBmYWxzZSxcbiAgICAgICAgICAgIGxvZ3Byb2JzX3JlZnVzYWxfZG9uZTogZmFsc2UsXG4gICAgICAgICAgICBkb25lX3Rvb2xfY2FsbHM6IG5ldyBTZXQoKSxcbiAgICAgICAgICAgIGN1cnJlbnRfdG9vbF9jYWxsX2luZGV4OiBudWxsLFxuICAgICAgICB9O1xuICAgICAgICBfX2NsYXNzUHJpdmF0ZUZpZWxkR2V0KHRoaXMsIF9DaGF0Q29tcGxldGlvblN0cmVhbV9jaG9pY2VFdmVudFN0YXRlcywgXCJmXCIpW2Nob2ljZS5pbmRleF0gPSBzdGF0ZTtcbiAgICAgICAgcmV0dXJuIHN0YXRlO1xuICAgIH0sIF9DaGF0Q29tcGxldGlvblN0cmVhbV9hZGRDaHVuayA9IGZ1bmN0aW9uIF9DaGF0Q29tcGxldGlvblN0cmVhbV9hZGRDaHVuayhjaHVuaykge1xuICAgICAgICBpZiAodGhpcy5lbmRlZClcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgY29uc3QgY29tcGxldGlvbiA9IF9fY2xhc3NQcml2YXRlRmllbGRHZXQodGhpcywgX0NoYXRDb21wbGV0aW9uU3RyZWFtX2luc3RhbmNlcywgXCJtXCIsIF9DaGF0Q29tcGxldGlvblN0cmVhbV9hY2N1bXVsYXRlQ2hhdENvbXBsZXRpb24pLmNhbGwodGhpcywgY2h1bmspO1xuICAgICAgICB0aGlzLl9lbWl0KCdjaHVuaycsIGNodW5rLCBjb21wbGV0aW9uKTtcbiAgICAgICAgZm9yIChjb25zdCBjaG9pY2Ugb2YgY2h1bmsuY2hvaWNlcykge1xuICAgICAgICAgICAgY29uc3QgY2hvaWNlU25hcHNob3QgPSBjb21wbGV0aW9uLmNob2ljZXNbY2hvaWNlLmluZGV4XTtcbiAgICAgICAgICAgIGlmIChjaG9pY2UuZGVsdGEuY29udGVudCAhPSBudWxsICYmXG4gICAgICAgICAgICAgICAgY2hvaWNlU25hcHNob3QubWVzc2FnZT8ucm9sZSA9PT0gJ2Fzc2lzdGFudCcgJiZcbiAgICAgICAgICAgICAgICBjaG9pY2VTbmFwc2hvdC5tZXNzYWdlPy5jb250ZW50KSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fZW1pdCgnY29udGVudCcsIGNob2ljZS5kZWx0YS5jb250ZW50LCBjaG9pY2VTbmFwc2hvdC5tZXNzYWdlLmNvbnRlbnQpO1xuICAgICAgICAgICAgICAgIHRoaXMuX2VtaXQoJ2NvbnRlbnQuZGVsdGEnLCB7XG4gICAgICAgICAgICAgICAgICAgIGRlbHRhOiBjaG9pY2UuZGVsdGEuY29udGVudCxcbiAgICAgICAgICAgICAgICAgICAgc25hcHNob3Q6IGNob2ljZVNuYXBzaG90Lm1lc3NhZ2UuY29udGVudCxcbiAgICAgICAgICAgICAgICAgICAgcGFyc2VkOiBjaG9pY2VTbmFwc2hvdC5tZXNzYWdlLnBhcnNlZCxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChjaG9pY2UuZGVsdGEucmVmdXNhbCAhPSBudWxsICYmXG4gICAgICAgICAgICAgICAgY2hvaWNlU25hcHNob3QubWVzc2FnZT8ucm9sZSA9PT0gJ2Fzc2lzdGFudCcgJiZcbiAgICAgICAgICAgICAgICBjaG9pY2VTbmFwc2hvdC5tZXNzYWdlPy5yZWZ1c2FsKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fZW1pdCgncmVmdXNhbC5kZWx0YScsIHtcbiAgICAgICAgICAgICAgICAgICAgZGVsdGE6IGNob2ljZS5kZWx0YS5yZWZ1c2FsLFxuICAgICAgICAgICAgICAgICAgICBzbmFwc2hvdDogY2hvaWNlU25hcHNob3QubWVzc2FnZS5yZWZ1c2FsLFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGNob2ljZS5sb2dwcm9icz8uY29udGVudCAhPSBudWxsICYmIGNob2ljZVNuYXBzaG90Lm1lc3NhZ2U/LnJvbGUgPT09ICdhc3Npc3RhbnQnKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fZW1pdCgnbG9ncHJvYnMuY29udGVudC5kZWx0YScsIHtcbiAgICAgICAgICAgICAgICAgICAgY29udGVudDogY2hvaWNlLmxvZ3Byb2JzPy5jb250ZW50LFxuICAgICAgICAgICAgICAgICAgICBzbmFwc2hvdDogY2hvaWNlU25hcHNob3QubG9ncHJvYnM/LmNvbnRlbnQgPz8gW10sXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoY2hvaWNlLmxvZ3Byb2JzPy5yZWZ1c2FsICE9IG51bGwgJiYgY2hvaWNlU25hcHNob3QubWVzc2FnZT8ucm9sZSA9PT0gJ2Fzc2lzdGFudCcpIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9lbWl0KCdsb2dwcm9icy5yZWZ1c2FsLmRlbHRhJywge1xuICAgICAgICAgICAgICAgICAgICByZWZ1c2FsOiBjaG9pY2UubG9ncHJvYnM/LnJlZnVzYWwsXG4gICAgICAgICAgICAgICAgICAgIHNuYXBzaG90OiBjaG9pY2VTbmFwc2hvdC5sb2dwcm9icz8ucmVmdXNhbCA/PyBbXSxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IHN0YXRlID0gX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfQ2hhdENvbXBsZXRpb25TdHJlYW1faW5zdGFuY2VzLCBcIm1cIiwgX0NoYXRDb21wbGV0aW9uU3RyZWFtX2dldENob2ljZUV2ZW50U3RhdGUpLmNhbGwodGhpcywgY2hvaWNlU25hcHNob3QpO1xuICAgICAgICAgICAgaWYgKGNob2ljZVNuYXBzaG90LmZpbmlzaF9yZWFzb24pIHtcbiAgICAgICAgICAgICAgICBfX2NsYXNzUHJpdmF0ZUZpZWxkR2V0KHRoaXMsIF9DaGF0Q29tcGxldGlvblN0cmVhbV9pbnN0YW5jZXMsIFwibVwiLCBfQ2hhdENvbXBsZXRpb25TdHJlYW1fZW1pdENvbnRlbnREb25lRXZlbnRzKS5jYWxsKHRoaXMsIGNob2ljZVNuYXBzaG90KTtcbiAgICAgICAgICAgICAgICBpZiAoc3RhdGUuY3VycmVudF90b29sX2NhbGxfaW5kZXggIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICBfX2NsYXNzUHJpdmF0ZUZpZWxkR2V0KHRoaXMsIF9DaGF0Q29tcGxldGlvblN0cmVhbV9pbnN0YW5jZXMsIFwibVwiLCBfQ2hhdENvbXBsZXRpb25TdHJlYW1fZW1pdFRvb2xDYWxsRG9uZUV2ZW50KS5jYWxsKHRoaXMsIGNob2ljZVNuYXBzaG90LCBzdGF0ZS5jdXJyZW50X3Rvb2xfY2FsbF9pbmRleCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZm9yIChjb25zdCB0b29sQ2FsbCBvZiBjaG9pY2UuZGVsdGEudG9vbF9jYWxscyA/PyBbXSkge1xuICAgICAgICAgICAgICAgIGlmIChzdGF0ZS5jdXJyZW50X3Rvb2xfY2FsbF9pbmRleCAhPT0gdG9vbENhbGwuaW5kZXgpIHtcbiAgICAgICAgICAgICAgICAgICAgX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfQ2hhdENvbXBsZXRpb25TdHJlYW1faW5zdGFuY2VzLCBcIm1cIiwgX0NoYXRDb21wbGV0aW9uU3RyZWFtX2VtaXRDb250ZW50RG9uZUV2ZW50cykuY2FsbCh0aGlzLCBjaG9pY2VTbmFwc2hvdCk7XG4gICAgICAgICAgICAgICAgICAgIC8vIG5ldyB0b29sIGNhbGwgc3RhcnRlZCwgdGhlIHByZXZpb3VzIG9uZSBpcyBkb25lXG4gICAgICAgICAgICAgICAgICAgIGlmIChzdGF0ZS5jdXJyZW50X3Rvb2xfY2FsbF9pbmRleCAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBfX2NsYXNzUHJpdmF0ZUZpZWxkR2V0KHRoaXMsIF9DaGF0Q29tcGxldGlvblN0cmVhbV9pbnN0YW5jZXMsIFwibVwiLCBfQ2hhdENvbXBsZXRpb25TdHJlYW1fZW1pdFRvb2xDYWxsRG9uZUV2ZW50KS5jYWxsKHRoaXMsIGNob2ljZVNuYXBzaG90LCBzdGF0ZS5jdXJyZW50X3Rvb2xfY2FsbF9pbmRleCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgc3RhdGUuY3VycmVudF90b29sX2NhbGxfaW5kZXggPSB0b29sQ2FsbC5pbmRleDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGZvciAoY29uc3QgdG9vbENhbGxEZWx0YSBvZiBjaG9pY2UuZGVsdGEudG9vbF9jYWxscyA/PyBbXSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHRvb2xDYWxsU25hcHNob3QgPSBjaG9pY2VTbmFwc2hvdC5tZXNzYWdlLnRvb2xfY2FsbHM/Llt0b29sQ2FsbERlbHRhLmluZGV4XTtcbiAgICAgICAgICAgICAgICBpZiAoIXRvb2xDYWxsU25hcHNob3Q/LnR5cGUpIHtcbiAgICAgICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmICh0b29sQ2FsbFNuYXBzaG90Py50eXBlID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX2VtaXQoJ3Rvb2xfY2FsbHMuZnVuY3Rpb24uYXJndW1lbnRzLmRlbHRhJywge1xuICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogdG9vbENhbGxTbmFwc2hvdC5mdW5jdGlvbj8ubmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGluZGV4OiB0b29sQ2FsbERlbHRhLmluZGV4LFxuICAgICAgICAgICAgICAgICAgICAgICAgYXJndW1lbnRzOiB0b29sQ2FsbFNuYXBzaG90LmZ1bmN0aW9uLmFyZ3VtZW50cyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhcnNlZF9hcmd1bWVudHM6IHRvb2xDYWxsU25hcHNob3QuZnVuY3Rpb24ucGFyc2VkX2FyZ3VtZW50cyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGFyZ3VtZW50c19kZWx0YTogdG9vbENhbGxEZWx0YS5mdW5jdGlvbj8uYXJndW1lbnRzID8/ICcnLFxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGFzc2VydE5ldmVyKHRvb2xDYWxsU25hcHNob3Q/LnR5cGUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH0sIF9DaGF0Q29tcGxldGlvblN0cmVhbV9lbWl0VG9vbENhbGxEb25lRXZlbnQgPSBmdW5jdGlvbiBfQ2hhdENvbXBsZXRpb25TdHJlYW1fZW1pdFRvb2xDYWxsRG9uZUV2ZW50KGNob2ljZVNuYXBzaG90LCB0b29sQ2FsbEluZGV4KSB7XG4gICAgICAgIGNvbnN0IHN0YXRlID0gX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfQ2hhdENvbXBsZXRpb25TdHJlYW1faW5zdGFuY2VzLCBcIm1cIiwgX0NoYXRDb21wbGV0aW9uU3RyZWFtX2dldENob2ljZUV2ZW50U3RhdGUpLmNhbGwodGhpcywgY2hvaWNlU25hcHNob3QpO1xuICAgICAgICBpZiAoc3RhdGUuZG9uZV90b29sX2NhbGxzLmhhcyh0b29sQ2FsbEluZGV4KSkge1xuICAgICAgICAgICAgLy8gd2UndmUgYWxyZWFkeSBmaXJlZCB0aGUgZG9uZSBldmVudFxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHRvb2xDYWxsU25hcHNob3QgPSBjaG9pY2VTbmFwc2hvdC5tZXNzYWdlLnRvb2xfY2FsbHM/Llt0b29sQ2FsbEluZGV4XTtcbiAgICAgICAgaWYgKCF0b29sQ2FsbFNuYXBzaG90KSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ25vIHRvb2wgY2FsbCBzbmFwc2hvdCcpO1xuICAgICAgICB9XG4gICAgICAgIGlmICghdG9vbENhbGxTbmFwc2hvdC50eXBlKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ3Rvb2wgY2FsbCBzbmFwc2hvdCBtaXNzaW5nIGB0eXBlYCcpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0b29sQ2FsbFNuYXBzaG90LnR5cGUgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgIGNvbnN0IGlucHV0VG9vbCA9IF9fY2xhc3NQcml2YXRlRmllbGRHZXQodGhpcywgX0NoYXRDb21wbGV0aW9uU3RyZWFtX3BhcmFtcywgXCJmXCIpPy50b29scz8uZmluZCgodG9vbCkgPT4gaXNDaGF0Q29tcGxldGlvbkZ1bmN0aW9uVG9vbCh0b29sKSAmJiB0b29sLmZ1bmN0aW9uLm5hbWUgPT09IHRvb2xDYWxsU25hcHNob3QuZnVuY3Rpb24ubmFtZSk7IC8vIFRTIGRvZXNuJ3QgbmFycm93IGJhc2VkIG9uIGlzQ2hhdENvbXBsZXRpb25Ub29sXG4gICAgICAgICAgICB0aGlzLl9lbWl0KCd0b29sX2NhbGxzLmZ1bmN0aW9uLmFyZ3VtZW50cy5kb25lJywge1xuICAgICAgICAgICAgICAgIG5hbWU6IHRvb2xDYWxsU25hcHNob3QuZnVuY3Rpb24ubmFtZSxcbiAgICAgICAgICAgICAgICBpbmRleDogdG9vbENhbGxJbmRleCxcbiAgICAgICAgICAgICAgICBhcmd1bWVudHM6IHRvb2xDYWxsU25hcHNob3QuZnVuY3Rpb24uYXJndW1lbnRzLFxuICAgICAgICAgICAgICAgIHBhcnNlZF9hcmd1bWVudHM6IGlzQXV0b1BhcnNhYmxlVG9vbChpbnB1dFRvb2wpID8gaW5wdXRUb29sLiRwYXJzZVJhdyh0b29sQ2FsbFNuYXBzaG90LmZ1bmN0aW9uLmFyZ3VtZW50cylcbiAgICAgICAgICAgICAgICAgICAgOiBpbnB1dFRvb2w/LmZ1bmN0aW9uLnN0cmljdCA/IEpTT04ucGFyc2UodG9vbENhbGxTbmFwc2hvdC5mdW5jdGlvbi5hcmd1bWVudHMpXG4gICAgICAgICAgICAgICAgICAgICAgICA6IG51bGwsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGFzc2VydE5ldmVyKHRvb2xDYWxsU25hcHNob3QudHlwZSk7XG4gICAgICAgIH1cbiAgICB9LCBfQ2hhdENvbXBsZXRpb25TdHJlYW1fZW1pdENvbnRlbnREb25lRXZlbnRzID0gZnVuY3Rpb24gX0NoYXRDb21wbGV0aW9uU3RyZWFtX2VtaXRDb250ZW50RG9uZUV2ZW50cyhjaG9pY2VTbmFwc2hvdCkge1xuICAgICAgICBjb25zdCBzdGF0ZSA9IF9fY2xhc3NQcml2YXRlRmllbGRHZXQodGhpcywgX0NoYXRDb21wbGV0aW9uU3RyZWFtX2luc3RhbmNlcywgXCJtXCIsIF9DaGF0Q29tcGxldGlvblN0cmVhbV9nZXRDaG9pY2VFdmVudFN0YXRlKS5jYWxsKHRoaXMsIGNob2ljZVNuYXBzaG90KTtcbiAgICAgICAgaWYgKGNob2ljZVNuYXBzaG90Lm1lc3NhZ2UuY29udGVudCAmJiAhc3RhdGUuY29udGVudF9kb25lKSB7XG4gICAgICAgICAgICBzdGF0ZS5jb250ZW50X2RvbmUgPSB0cnVlO1xuICAgICAgICAgICAgY29uc3QgcmVzcG9uc2VGb3JtYXQgPSBfX2NsYXNzUHJpdmF0ZUZpZWxkR2V0KHRoaXMsIF9DaGF0Q29tcGxldGlvblN0cmVhbV9pbnN0YW5jZXMsIFwibVwiLCBfQ2hhdENvbXBsZXRpb25TdHJlYW1fZ2V0QXV0b1BhcnNlYWJsZVJlc3BvbnNlRm9ybWF0KS5jYWxsKHRoaXMpO1xuICAgICAgICAgICAgdGhpcy5fZW1pdCgnY29udGVudC5kb25lJywge1xuICAgICAgICAgICAgICAgIGNvbnRlbnQ6IGNob2ljZVNuYXBzaG90Lm1lc3NhZ2UuY29udGVudCxcbiAgICAgICAgICAgICAgICBwYXJzZWQ6IHJlc3BvbnNlRm9ybWF0ID8gcmVzcG9uc2VGb3JtYXQuJHBhcnNlUmF3KGNob2ljZVNuYXBzaG90Lm1lc3NhZ2UuY29udGVudCkgOiBudWxsLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGNob2ljZVNuYXBzaG90Lm1lc3NhZ2UucmVmdXNhbCAmJiAhc3RhdGUucmVmdXNhbF9kb25lKSB7XG4gICAgICAgICAgICBzdGF0ZS5yZWZ1c2FsX2RvbmUgPSB0cnVlO1xuICAgICAgICAgICAgdGhpcy5fZW1pdCgncmVmdXNhbC5kb25lJywgeyByZWZ1c2FsOiBjaG9pY2VTbmFwc2hvdC5tZXNzYWdlLnJlZnVzYWwgfSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGNob2ljZVNuYXBzaG90LmxvZ3Byb2JzPy5jb250ZW50ICYmICFzdGF0ZS5sb2dwcm9ic19jb250ZW50X2RvbmUpIHtcbiAgICAgICAgICAgIHN0YXRlLmxvZ3Byb2JzX2NvbnRlbnRfZG9uZSA9IHRydWU7XG4gICAgICAgICAgICB0aGlzLl9lbWl0KCdsb2dwcm9icy5jb250ZW50LmRvbmUnLCB7IGNvbnRlbnQ6IGNob2ljZVNuYXBzaG90LmxvZ3Byb2JzLmNvbnRlbnQgfSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGNob2ljZVNuYXBzaG90LmxvZ3Byb2JzPy5yZWZ1c2FsICYmICFzdGF0ZS5sb2dwcm9ic19yZWZ1c2FsX2RvbmUpIHtcbiAgICAgICAgICAgIHN0YXRlLmxvZ3Byb2JzX3JlZnVzYWxfZG9uZSA9IHRydWU7XG4gICAgICAgICAgICB0aGlzLl9lbWl0KCdsb2dwcm9icy5yZWZ1c2FsLmRvbmUnLCB7IHJlZnVzYWw6IGNob2ljZVNuYXBzaG90LmxvZ3Byb2JzLnJlZnVzYWwgfSk7XG4gICAgICAgIH1cbiAgICB9LCBfQ2hhdENvbXBsZXRpb25TdHJlYW1fZW5kUmVxdWVzdCA9IGZ1bmN0aW9uIF9DaGF0Q29tcGxldGlvblN0cmVhbV9lbmRSZXF1ZXN0KCkge1xuICAgICAgICBpZiAodGhpcy5lbmRlZCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IE9wZW5BSUVycm9yKGBzdHJlYW0gaGFzIGVuZGVkLCB0aGlzIHNob3VsZG4ndCBoYXBwZW5gKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBzbmFwc2hvdCA9IF9fY2xhc3NQcml2YXRlRmllbGRHZXQodGhpcywgX0NoYXRDb21wbGV0aW9uU3RyZWFtX2N1cnJlbnRDaGF0Q29tcGxldGlvblNuYXBzaG90LCBcImZcIik7XG4gICAgICAgIGlmICghc25hcHNob3QpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBPcGVuQUlFcnJvcihgcmVxdWVzdCBlbmRlZCB3aXRob3V0IHNlbmRpbmcgYW55IGNodW5rc2ApO1xuICAgICAgICB9XG4gICAgICAgIF9fY2xhc3NQcml2YXRlRmllbGRTZXQodGhpcywgX0NoYXRDb21wbGV0aW9uU3RyZWFtX2N1cnJlbnRDaGF0Q29tcGxldGlvblNuYXBzaG90LCB1bmRlZmluZWQsIFwiZlwiKTtcbiAgICAgICAgX19jbGFzc1ByaXZhdGVGaWVsZFNldCh0aGlzLCBfQ2hhdENvbXBsZXRpb25TdHJlYW1fY2hvaWNlRXZlbnRTdGF0ZXMsIFtdLCBcImZcIik7XG4gICAgICAgIHJldHVybiBmaW5hbGl6ZUNoYXRDb21wbGV0aW9uKHNuYXBzaG90LCBfX2NsYXNzUHJpdmF0ZUZpZWxkR2V0KHRoaXMsIF9DaGF0Q29tcGxldGlvblN0cmVhbV9wYXJhbXMsIFwiZlwiKSk7XG4gICAgfSwgX0NoYXRDb21wbGV0aW9uU3RyZWFtX2dldEF1dG9QYXJzZWFibGVSZXNwb25zZUZvcm1hdCA9IGZ1bmN0aW9uIF9DaGF0Q29tcGxldGlvblN0cmVhbV9nZXRBdXRvUGFyc2VhYmxlUmVzcG9uc2VGb3JtYXQoKSB7XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlRm9ybWF0ID0gX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfQ2hhdENvbXBsZXRpb25TdHJlYW1fcGFyYW1zLCBcImZcIik/LnJlc3BvbnNlX2Zvcm1hdDtcbiAgICAgICAgaWYgKGlzQXV0b1BhcnNhYmxlUmVzcG9uc2VGb3JtYXQocmVzcG9uc2VGb3JtYXQpKSB7XG4gICAgICAgICAgICByZXR1cm4gcmVzcG9uc2VGb3JtYXQ7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfSwgX0NoYXRDb21wbGV0aW9uU3RyZWFtX2FjY3VtdWxhdGVDaGF0Q29tcGxldGlvbiA9IGZ1bmN0aW9uIF9DaGF0Q29tcGxldGlvblN0cmVhbV9hY2N1bXVsYXRlQ2hhdENvbXBsZXRpb24oY2h1bmspIHtcbiAgICAgICAgdmFyIF9hLCBfYiwgX2MsIF9kO1xuICAgICAgICBsZXQgc25hcHNob3QgPSBfX2NsYXNzUHJpdmF0ZUZpZWxkR2V0KHRoaXMsIF9DaGF0Q29tcGxldGlvblN0cmVhbV9jdXJyZW50Q2hhdENvbXBsZXRpb25TbmFwc2hvdCwgXCJmXCIpO1xuICAgICAgICBjb25zdCB7IGNob2ljZXMsIC4uLnJlc3QgfSA9IGNodW5rO1xuICAgICAgICBpZiAoIXNuYXBzaG90KSB7XG4gICAgICAgICAgICBzbmFwc2hvdCA9IF9fY2xhc3NQcml2YXRlRmllbGRTZXQodGhpcywgX0NoYXRDb21wbGV0aW9uU3RyZWFtX2N1cnJlbnRDaGF0Q29tcGxldGlvblNuYXBzaG90LCB7XG4gICAgICAgICAgICAgICAgLi4ucmVzdCxcbiAgICAgICAgICAgICAgICBjaG9pY2VzOiBbXSxcbiAgICAgICAgICAgIH0sIFwiZlwiKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIE9iamVjdC5hc3NpZ24oc25hcHNob3QsIHJlc3QpO1xuICAgICAgICB9XG4gICAgICAgIGZvciAoY29uc3QgeyBkZWx0YSwgZmluaXNoX3JlYXNvbiwgaW5kZXgsIGxvZ3Byb2JzID0gbnVsbCwgLi4ub3RoZXIgfSBvZiBjaHVuay5jaG9pY2VzKSB7XG4gICAgICAgICAgICBsZXQgY2hvaWNlID0gc25hcHNob3QuY2hvaWNlc1tpbmRleF07XG4gICAgICAgICAgICBpZiAoIWNob2ljZSkge1xuICAgICAgICAgICAgICAgIGNob2ljZSA9IHNuYXBzaG90LmNob2ljZXNbaW5kZXhdID0geyBmaW5pc2hfcmVhc29uLCBpbmRleCwgbWVzc2FnZToge30sIGxvZ3Byb2JzLCAuLi5vdGhlciB9O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGxvZ3Byb2JzKSB7XG4gICAgICAgICAgICAgICAgaWYgKCFjaG9pY2UubG9ncHJvYnMpIHtcbiAgICAgICAgICAgICAgICAgICAgY2hvaWNlLmxvZ3Byb2JzID0gT2JqZWN0LmFzc2lnbih7fSwgbG9ncHJvYnMpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgeyBjb250ZW50LCByZWZ1c2FsLCAuLi5yZXN0IH0gPSBsb2dwcm9icztcbiAgICAgICAgICAgICAgICAgICAgYXNzZXJ0SXNFbXB0eShyZXN0KTtcbiAgICAgICAgICAgICAgICAgICAgT2JqZWN0LmFzc2lnbihjaG9pY2UubG9ncHJvYnMsIHJlc3QpO1xuICAgICAgICAgICAgICAgICAgICBpZiAoY29udGVudCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgKF9hID0gY2hvaWNlLmxvZ3Byb2JzKS5jb250ZW50ID8/IChfYS5jb250ZW50ID0gW10pO1xuICAgICAgICAgICAgICAgICAgICAgICAgY2hvaWNlLmxvZ3Byb2JzLmNvbnRlbnQucHVzaCguLi5jb250ZW50KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBpZiAocmVmdXNhbCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgKF9iID0gY2hvaWNlLmxvZ3Byb2JzKS5yZWZ1c2FsID8/IChfYi5yZWZ1c2FsID0gW10pO1xuICAgICAgICAgICAgICAgICAgICAgICAgY2hvaWNlLmxvZ3Byb2JzLnJlZnVzYWwucHVzaCguLi5yZWZ1c2FsKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChmaW5pc2hfcmVhc29uKSB7XG4gICAgICAgICAgICAgICAgY2hvaWNlLmZpbmlzaF9yZWFzb24gPSBmaW5pc2hfcmVhc29uO1xuICAgICAgICAgICAgICAgIGlmIChfX2NsYXNzUHJpdmF0ZUZpZWxkR2V0KHRoaXMsIF9DaGF0Q29tcGxldGlvblN0cmVhbV9wYXJhbXMsIFwiZlwiKSAmJiBoYXNBdXRvUGFyc2VhYmxlSW5wdXQoX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfQ2hhdENvbXBsZXRpb25TdHJlYW1fcGFyYW1zLCBcImZcIikpKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChmaW5pc2hfcmVhc29uID09PSAnbGVuZ3RoJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IExlbmd0aEZpbmlzaFJlYXNvbkVycm9yKCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKGZpbmlzaF9yZWFzb24gPT09ICdjb250ZW50X2ZpbHRlcicpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBDb250ZW50RmlsdGVyRmluaXNoUmVhc29uRXJyb3IoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIE9iamVjdC5hc3NpZ24oY2hvaWNlLCBvdGhlcik7XG4gICAgICAgICAgICBpZiAoIWRlbHRhKVxuICAgICAgICAgICAgICAgIGNvbnRpbnVlOyAvLyBTaG91bGRuJ3QgaGFwcGVuOyBqdXN0IGluIGNhc2UuXG4gICAgICAgICAgICBjb25zdCB7IGNvbnRlbnQsIHJlZnVzYWwsIGZ1bmN0aW9uX2NhbGwsIHJvbGUsIHRvb2xfY2FsbHMsIC4uLnJlc3QgfSA9IGRlbHRhO1xuICAgICAgICAgICAgYXNzZXJ0SXNFbXB0eShyZXN0KTtcbiAgICAgICAgICAgIE9iamVjdC5hc3NpZ24oY2hvaWNlLm1lc3NhZ2UsIHJlc3QpO1xuICAgICAgICAgICAgaWYgKHJlZnVzYWwpIHtcbiAgICAgICAgICAgICAgICBjaG9pY2UubWVzc2FnZS5yZWZ1c2FsID0gKGNob2ljZS5tZXNzYWdlLnJlZnVzYWwgfHwgJycpICsgcmVmdXNhbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChyb2xlKVxuICAgICAgICAgICAgICAgIGNob2ljZS5tZXNzYWdlLnJvbGUgPSByb2xlO1xuICAgICAgICAgICAgaWYgKGZ1bmN0aW9uX2NhbGwpIHtcbiAgICAgICAgICAgICAgICBpZiAoIWNob2ljZS5tZXNzYWdlLmZ1bmN0aW9uX2NhbGwpIHtcbiAgICAgICAgICAgICAgICAgICAgY2hvaWNlLm1lc3NhZ2UuZnVuY3Rpb25fY2FsbCA9IGZ1bmN0aW9uX2NhbGw7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBpZiAoZnVuY3Rpb25fY2FsbC5uYW1lKVxuICAgICAgICAgICAgICAgICAgICAgICAgY2hvaWNlLm1lc3NhZ2UuZnVuY3Rpb25fY2FsbC5uYW1lID0gZnVuY3Rpb25fY2FsbC5uYW1lO1xuICAgICAgICAgICAgICAgICAgICBpZiAoZnVuY3Rpb25fY2FsbC5hcmd1bWVudHMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIChfYyA9IGNob2ljZS5tZXNzYWdlLmZ1bmN0aW9uX2NhbGwpLmFyZ3VtZW50cyA/PyAoX2MuYXJndW1lbnRzID0gJycpO1xuICAgICAgICAgICAgICAgICAgICAgICAgY2hvaWNlLm1lc3NhZ2UuZnVuY3Rpb25fY2FsbC5hcmd1bWVudHMgKz0gZnVuY3Rpb25fY2FsbC5hcmd1bWVudHM7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoY29udGVudCkge1xuICAgICAgICAgICAgICAgIGNob2ljZS5tZXNzYWdlLmNvbnRlbnQgPSAoY2hvaWNlLm1lc3NhZ2UuY29udGVudCB8fCAnJykgKyBjb250ZW50O1xuICAgICAgICAgICAgICAgIGlmICghY2hvaWNlLm1lc3NhZ2UucmVmdXNhbCAmJiBfX2NsYXNzUHJpdmF0ZUZpZWxkR2V0KHRoaXMsIF9DaGF0Q29tcGxldGlvblN0cmVhbV9pbnN0YW5jZXMsIFwibVwiLCBfQ2hhdENvbXBsZXRpb25TdHJlYW1fZ2V0QXV0b1BhcnNlYWJsZVJlc3BvbnNlRm9ybWF0KS5jYWxsKHRoaXMpKSB7XG4gICAgICAgICAgICAgICAgICAgIGNob2ljZS5tZXNzYWdlLnBhcnNlZCA9IHBhcnRpYWxQYXJzZShjaG9pY2UubWVzc2FnZS5jb250ZW50KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAodG9vbF9jYWxscykge1xuICAgICAgICAgICAgICAgIGlmICghY2hvaWNlLm1lc3NhZ2UudG9vbF9jYWxscylcbiAgICAgICAgICAgICAgICAgICAgY2hvaWNlLm1lc3NhZ2UudG9vbF9jYWxscyA9IFtdO1xuICAgICAgICAgICAgICAgIGZvciAoY29uc3QgeyBpbmRleCwgaWQsIHR5cGUsIGZ1bmN0aW9uOiBmbiwgLi4ucmVzdCB9IG9mIHRvb2xfY2FsbHMpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgdG9vbF9jYWxsID0gKChfZCA9IGNob2ljZS5tZXNzYWdlLnRvb2xfY2FsbHMpW2luZGV4XSA/PyAoX2RbaW5kZXhdID0ge30pKTtcbiAgICAgICAgICAgICAgICAgICAgT2JqZWN0LmFzc2lnbih0b29sX2NhbGwsIHJlc3QpO1xuICAgICAgICAgICAgICAgICAgICBpZiAoaWQpXG4gICAgICAgICAgICAgICAgICAgICAgICB0b29sX2NhbGwuaWQgPSBpZDtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGUpXG4gICAgICAgICAgICAgICAgICAgICAgICB0b29sX2NhbGwudHlwZSA9IHR5cGU7XG4gICAgICAgICAgICAgICAgICAgIGlmIChmbilcbiAgICAgICAgICAgICAgICAgICAgICAgIHRvb2xfY2FsbC5mdW5jdGlvbiA/PyAodG9vbF9jYWxsLmZ1bmN0aW9uID0geyBuYW1lOiBmbi5uYW1lID8/ICcnLCBhcmd1bWVudHM6ICcnIH0pO1xuICAgICAgICAgICAgICAgICAgICBpZiAoZm4/Lm5hbWUpXG4gICAgICAgICAgICAgICAgICAgICAgICB0b29sX2NhbGwuZnVuY3Rpb24ubmFtZSA9IGZuLm5hbWU7XG4gICAgICAgICAgICAgICAgICAgIGlmIChmbj8uYXJndW1lbnRzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0b29sX2NhbGwuZnVuY3Rpb24uYXJndW1lbnRzICs9IGZuLmFyZ3VtZW50cztcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzaG91bGRQYXJzZVRvb2xDYWxsKF9fY2xhc3NQcml2YXRlRmllbGRHZXQodGhpcywgX0NoYXRDb21wbGV0aW9uU3RyZWFtX3BhcmFtcywgXCJmXCIpLCB0b29sX2NhbGwpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdG9vbF9jYWxsLmZ1bmN0aW9uLnBhcnNlZF9hcmd1bWVudHMgPSBwYXJ0aWFsUGFyc2UodG9vbF9jYWxsLmZ1bmN0aW9uLmFyZ3VtZW50cyk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHNuYXBzaG90O1xuICAgIH0sIFN5bWJvbC5hc3luY0l0ZXJhdG9yKV0oKSB7XG4gICAgICAgIGNvbnN0IHB1c2hRdWV1ZSA9IFtdO1xuICAgICAgICBjb25zdCByZWFkUXVldWUgPSBbXTtcbiAgICAgICAgbGV0IGRvbmUgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5vbignY2h1bmsnLCAoY2h1bmspID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHJlYWRlciA9IHJlYWRRdWV1ZS5zaGlmdCgpO1xuICAgICAgICAgICAgaWYgKHJlYWRlcikge1xuICAgICAgICAgICAgICAgIHJlYWRlci5yZXNvbHZlKGNodW5rKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHB1c2hRdWV1ZS5wdXNoKGNodW5rKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMub24oJ2VuZCcsICgpID0+IHtcbiAgICAgICAgICAgIGRvbmUgPSB0cnVlO1xuICAgICAgICAgICAgZm9yIChjb25zdCByZWFkZXIgb2YgcmVhZFF1ZXVlKSB7XG4gICAgICAgICAgICAgICAgcmVhZGVyLnJlc29sdmUodW5kZWZpbmVkKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJlYWRRdWV1ZS5sZW5ndGggPSAwO1xuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5vbignYWJvcnQnLCAoZXJyKSA9PiB7XG4gICAgICAgICAgICBkb25lID0gdHJ1ZTtcbiAgICAgICAgICAgIGZvciAoY29uc3QgcmVhZGVyIG9mIHJlYWRRdWV1ZSkge1xuICAgICAgICAgICAgICAgIHJlYWRlci5yZWplY3QoZXJyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJlYWRRdWV1ZS5sZW5ndGggPSAwO1xuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5vbignZXJyb3InLCAoZXJyKSA9PiB7XG4gICAgICAgICAgICBkb25lID0gdHJ1ZTtcbiAgICAgICAgICAgIGZvciAoY29uc3QgcmVhZGVyIG9mIHJlYWRRdWV1ZSkge1xuICAgICAgICAgICAgICAgIHJlYWRlci5yZWplY3QoZXJyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJlYWRRdWV1ZS5sZW5ndGggPSAwO1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIG5leHQ6IGFzeW5jICgpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoIXB1c2hRdWV1ZS5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGRvbmUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB7IHZhbHVlOiB1bmRlZmluZWQsIGRvbmU6IHRydWUgfTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4gcmVhZFF1ZXVlLnB1c2goeyByZXNvbHZlLCByZWplY3QgfSkpLnRoZW4oKGNodW5rKSA9PiAoY2h1bmsgPyB7IHZhbHVlOiBjaHVuaywgZG9uZTogZmFsc2UgfSA6IHsgdmFsdWU6IHVuZGVmaW5lZCwgZG9uZTogdHJ1ZSB9KSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNvbnN0IGNodW5rID0gcHVzaFF1ZXVlLnNoaWZ0KCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHsgdmFsdWU6IGNodW5rLCBkb25lOiBmYWxzZSB9O1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHJldHVybjogYXN5bmMgKCkgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMuYWJvcnQoKTtcbiAgICAgICAgICAgICAgICByZXR1cm4geyB2YWx1ZTogdW5kZWZpbmVkLCBkb25lOiB0cnVlIH07XG4gICAgICAgICAgICB9LFxuICAgICAgICB9O1xuICAgIH1cbiAgICB0b1JlYWRhYmxlU3RyZWFtKCkge1xuICAgICAgICBjb25zdCBzdHJlYW0gPSBuZXcgU3RyZWFtKHRoaXNbU3ltYm9sLmFzeW5jSXRlcmF0b3JdLmJpbmQodGhpcyksIHRoaXMuY29udHJvbGxlcik7XG4gICAgICAgIHJldHVybiBzdHJlYW0udG9SZWFkYWJsZVN0cmVhbSgpO1xuICAgIH1cbn1cbmZ1bmN0aW9uIGZpbmFsaXplQ2hhdENvbXBsZXRpb24oc25hcHNob3QsIHBhcmFtcykge1xuICAgIGNvbnN0IHsgaWQsIGNob2ljZXMsIGNyZWF0ZWQsIG1vZGVsLCBzeXN0ZW1fZmluZ2VycHJpbnQsIC4uLnJlc3QgfSA9IHNuYXBzaG90O1xuICAgIGNvbnN0IGNvbXBsZXRpb24gPSB7XG4gICAgICAgIC4uLnJlc3QsXG4gICAgICAgIGlkLFxuICAgICAgICBjaG9pY2VzOiBjaG9pY2VzLm1hcCgoeyBtZXNzYWdlLCBmaW5pc2hfcmVhc29uLCBpbmRleCwgbG9ncHJvYnMsIC4uLmNob2ljZVJlc3QgfSkgPT4ge1xuICAgICAgICAgICAgaWYgKCFmaW5pc2hfcmVhc29uKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IE9wZW5BSUVycm9yKGBtaXNzaW5nIGZpbmlzaF9yZWFzb24gZm9yIGNob2ljZSAke2luZGV4fWApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgeyBjb250ZW50ID0gbnVsbCwgZnVuY3Rpb25fY2FsbCwgdG9vbF9jYWxscywgLi4ubWVzc2FnZVJlc3QgfSA9IG1lc3NhZ2U7XG4gICAgICAgICAgICBjb25zdCByb2xlID0gbWVzc2FnZS5yb2xlOyAvLyB0aGlzIGlzIHdoYXQgd2UgZXhwZWN0OyBpbiB0aGVvcnkgaXQgY291bGQgYmUgZGlmZmVyZW50IHdoaWNoIHdvdWxkIG1ha2Ugb3VyIHR5cGVzIGEgc2xpZ2h0IGxpZSBidXQgd291bGQgYmUgZmluZS5cbiAgICAgICAgICAgIGlmICghcm9sZSkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBPcGVuQUlFcnJvcihgbWlzc2luZyByb2xlIGZvciBjaG9pY2UgJHtpbmRleH1gKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChmdW5jdGlvbl9jYWxsKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgeyBhcmd1bWVudHM6IGFyZ3MsIG5hbWUgfSA9IGZ1bmN0aW9uX2NhbGw7XG4gICAgICAgICAgICAgICAgaWYgKGFyZ3MgPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgT3BlbkFJRXJyb3IoYG1pc3NpbmcgZnVuY3Rpb25fY2FsbC5hcmd1bWVudHMgZm9yIGNob2ljZSAke2luZGV4fWApO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoIW5hbWUpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IE9wZW5BSUVycm9yKGBtaXNzaW5nIGZ1bmN0aW9uX2NhbGwubmFtZSBmb3IgY2hvaWNlICR7aW5kZXh9YCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgIC4uLmNob2ljZVJlc3QsXG4gICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRlbnQsXG4gICAgICAgICAgICAgICAgICAgICAgICBmdW5jdGlvbl9jYWxsOiB7IGFyZ3VtZW50czogYXJncywgbmFtZSB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgcm9sZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlZnVzYWw6IG1lc3NhZ2UucmVmdXNhbCA/PyBudWxsLFxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBmaW5pc2hfcmVhc29uLFxuICAgICAgICAgICAgICAgICAgICBpbmRleCxcbiAgICAgICAgICAgICAgICAgICAgbG9ncHJvYnMsXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh0b29sX2NhbGxzKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgLi4uY2hvaWNlUmVzdCxcbiAgICAgICAgICAgICAgICAgICAgaW5kZXgsXG4gICAgICAgICAgICAgICAgICAgIGZpbmlzaF9yZWFzb24sXG4gICAgICAgICAgICAgICAgICAgIGxvZ3Byb2JzLFxuICAgICAgICAgICAgICAgICAgICBtZXNzYWdlOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAuLi5tZXNzYWdlUmVzdCxcbiAgICAgICAgICAgICAgICAgICAgICAgIHJvbGUsXG4gICAgICAgICAgICAgICAgICAgICAgICBjb250ZW50LFxuICAgICAgICAgICAgICAgICAgICAgICAgcmVmdXNhbDogbWVzc2FnZS5yZWZ1c2FsID8/IG51bGwsXG4gICAgICAgICAgICAgICAgICAgICAgICB0b29sX2NhbGxzOiB0b29sX2NhbGxzLm1hcCgodG9vbF9jYWxsLCBpKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgeyBmdW5jdGlvbjogZm4sIHR5cGUsIGlkLCAuLi50b29sUmVzdCB9ID0gdG9vbF9jYWxsO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHsgYXJndW1lbnRzOiBhcmdzLCBuYW1lLCAuLi5mblJlc3QgfSA9IGZuIHx8IHt9O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpZCA9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBPcGVuQUlFcnJvcihgbWlzc2luZyBjaG9pY2VzWyR7aW5kZXh9XS50b29sX2NhbGxzWyR7aX1dLmlkXFxuJHtzdHIoc25hcHNob3QpfWApO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZSA9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBPcGVuQUlFcnJvcihgbWlzc2luZyBjaG9pY2VzWyR7aW5kZXh9XS50b29sX2NhbGxzWyR7aX1dLnR5cGVcXG4ke3N0cihzbmFwc2hvdCl9YCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChuYW1lID09IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IE9wZW5BSUVycm9yKGBtaXNzaW5nIGNob2ljZXNbJHtpbmRleH1dLnRvb2xfY2FsbHNbJHtpfV0uZnVuY3Rpb24ubmFtZVxcbiR7c3RyKHNuYXBzaG90KX1gKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGFyZ3MgPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgT3BlbkFJRXJyb3IoYG1pc3NpbmcgY2hvaWNlc1ske2luZGV4fV0udG9vbF9jYWxsc1ske2l9XS5mdW5jdGlvbi5hcmd1bWVudHNcXG4ke3N0cihzbmFwc2hvdCl9YCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB7IC4uLnRvb2xSZXN0LCBpZCwgdHlwZSwgZnVuY3Rpb246IHsgLi4uZm5SZXN0LCBuYW1lLCBhcmd1bWVudHM6IGFyZ3MgfSB9O1xuICAgICAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgLi4uY2hvaWNlUmVzdCxcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiB7IC4uLm1lc3NhZ2VSZXN0LCBjb250ZW50LCByb2xlLCByZWZ1c2FsOiBtZXNzYWdlLnJlZnVzYWwgPz8gbnVsbCB9LFxuICAgICAgICAgICAgICAgIGZpbmlzaF9yZWFzb24sXG4gICAgICAgICAgICAgICAgaW5kZXgsXG4gICAgICAgICAgICAgICAgbG9ncHJvYnMsXG4gICAgICAgICAgICB9O1xuICAgICAgICB9KSxcbiAgICAgICAgY3JlYXRlZCxcbiAgICAgICAgbW9kZWwsXG4gICAgICAgIG9iamVjdDogJ2NoYXQuY29tcGxldGlvbicsXG4gICAgICAgIC4uLihzeXN0ZW1fZmluZ2VycHJpbnQgPyB7IHN5c3RlbV9maW5nZXJwcmludCB9IDoge30pLFxuICAgIH07XG4gICAgcmV0dXJuIG1heWJlUGFyc2VDaGF0Q29tcGxldGlvbihjb21wbGV0aW9uLCBwYXJhbXMpO1xufVxuZnVuY3Rpb24gc3RyKHgpIHtcbiAgICByZXR1cm4gSlNPTi5zdHJpbmdpZnkoeCk7XG59XG4vKipcbiAqIEVuc3VyZXMgdGhlIGdpdmVuIGFyZ3VtZW50IGlzIGFuIGVtcHR5IG9iamVjdCwgdXNlZnVsIGZvclxuICogYXNzZXJ0aW5nIHRoYXQgYWxsIGtub3duIHByb3BlcnRpZXMgb24gYW4gb2JqZWN0IGhhdmUgYmVlblxuICogZGVzdHJ1Y3R1cmVkLlxuICovXG5mdW5jdGlvbiBhc3NlcnRJc0VtcHR5KG9iaikge1xuICAgIHJldHVybjtcbn1cbmZ1bmN0aW9uIGFzc2VydE5ldmVyKF94KSB7IH1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUNoYXRDb21wbGV0aW9uU3RyZWFtLm1qcy5tYXAiXSwibmFtZXMiOlsiX0NoYXRDb21wbGV0aW9uU3RyZWFtX2luc3RhbmNlcyIsIl9DaGF0Q29tcGxldGlvblN0cmVhbV9wYXJhbXMiLCJfQ2hhdENvbXBsZXRpb25TdHJlYW1fY2hvaWNlRXZlbnRTdGF0ZXMiLCJfQ2hhdENvbXBsZXRpb25TdHJlYW1fY3VycmVudENoYXRDb21wbGV0aW9uU25hcHNob3QiLCJfQ2hhdENvbXBsZXRpb25TdHJlYW1fYmVnaW5SZXF1ZXN0IiwiX0NoYXRDb21wbGV0aW9uU3RyZWFtX2dldENob2ljZUV2ZW50U3RhdGUiLCJfQ2hhdENvbXBsZXRpb25TdHJlYW1fYWRkQ2h1bmsiLCJfQ2hhdENvbXBsZXRpb25TdHJlYW1fZW1pdFRvb2xDYWxsRG9uZUV2ZW50IiwiX0NoYXRDb21wbGV0aW9uU3RyZWFtX2VtaXRDb250ZW50RG9uZUV2ZW50cyIsIl9DaGF0Q29tcGxldGlvblN0cmVhbV9lbmRSZXF1ZXN0IiwiX0NoYXRDb21wbGV0aW9uU3RyZWFtX2dldEF1dG9QYXJzZWFibGVSZXNwb25zZUZvcm1hdCIsIl9DaGF0Q29tcGxldGlvblN0cmVhbV9hY2N1bXVsYXRlQ2hhdENvbXBsZXRpb24iLCJfX2NsYXNzUHJpdmF0ZUZpZWxkR2V0IiwiX19jbGFzc1ByaXZhdGVGaWVsZFNldCIsInBhcnRpYWxQYXJzZSIsIkFQSVVzZXJBYm9ydEVycm9yIiwiQ29udGVudEZpbHRlckZpbmlzaFJlYXNvbkVycm9yIiwiTGVuZ3RoRmluaXNoUmVhc29uRXJyb3IiLCJPcGVuQUlFcnJvciIsImhhc0F1dG9QYXJzZWFibGVJbnB1dCIsImlzQXV0b1BhcnNhYmxlUmVzcG9uc2VGb3JtYXQiLCJpc0F1dG9QYXJzYWJsZVRvb2wiLCJpc0NoYXRDb21wbGV0aW9uRnVuY3Rpb25Ub29sIiwibWF5YmVQYXJzZUNoYXRDb21wbGV0aW9uIiwic2hvdWxkUGFyc2VUb29sQ2FsbCIsIlN0cmVhbSIsIkFic3RyYWN0Q2hhdENvbXBsZXRpb25SdW5uZXIiLCJDaGF0Q29tcGxldGlvblN0cmVhbSIsImNvbnN0cnVjdG9yIiwicGFyYW1zIiwiYWRkIiwic2V0IiwiY3VycmVudENoYXRDb21wbGV0aW9uU25hcHNob3QiLCJmcm9tUmVhZGFibGVTdHJlYW0iLCJzdHJlYW0iLCJydW5uZXIiLCJfcnVuIiwiX2Zyb21SZWFkYWJsZVN0cmVhbSIsImNyZWF0ZUNoYXRDb21wbGV0aW9uIiwiY2xpZW50Iiwib3B0aW9ucyIsIl9ydW5DaGF0Q29tcGxldGlvbiIsImhlYWRlcnMiLCJfY3JlYXRlQ2hhdENvbXBsZXRpb24iLCJzaWduYWwiLCJhYm9ydGVkIiwiY29udHJvbGxlciIsImFib3J0IiwiYWRkRXZlbnRMaXN0ZW5lciIsImNhbGwiLCJjaGF0IiwiY29tcGxldGlvbnMiLCJjcmVhdGUiLCJfY29ubmVjdGVkIiwiY2h1bmsiLCJfYWRkQ2hhdENvbXBsZXRpb24iLCJyZWFkYWJsZVN0cmVhbSIsImNoYXRJZCIsImlkIiwiV2Vha01hcCIsIldlYWtTZXQiLCJlbmRlZCIsInVuZGVmaW5lZCIsImNob2ljZSIsInN0YXRlIiwiaW5kZXgiLCJjb250ZW50X2RvbmUiLCJyZWZ1c2FsX2RvbmUiLCJsb2dwcm9ic19jb250ZW50X2RvbmUiLCJsb2dwcm9ic19yZWZ1c2FsX2RvbmUiLCJkb25lX3Rvb2xfY2FsbHMiLCJTZXQiLCJjdXJyZW50X3Rvb2xfY2FsbF9pbmRleCIsImNvbXBsZXRpb24iLCJfZW1pdCIsImNob2ljZXMiLCJjaG9pY2VTbmFwc2hvdCIsImRlbHRhIiwiY29udGVudCIsIm1lc3NhZ2UiLCJyb2xlIiwic25hcHNob3QiLCJwYXJzZWQiLCJyZWZ1c2FsIiwibG9ncHJvYnMiLCJmaW5pc2hfcmVhc29uIiwidG9vbENhbGwiLCJ0b29sX2NhbGxzIiwidG9vbENhbGxEZWx0YSIsInRvb2xDYWxsU25hcHNob3QiLCJ0eXBlIiwibmFtZSIsImZ1bmN0aW9uIiwiYXJndW1lbnRzIiwicGFyc2VkX2FyZ3VtZW50cyIsImFyZ3VtZW50c19kZWx0YSIsImFzc2VydE5ldmVyIiwidG9vbENhbGxJbmRleCIsImhhcyIsIkVycm9yIiwiaW5wdXRUb29sIiwidG9vbHMiLCJmaW5kIiwidG9vbCIsIiRwYXJzZVJhdyIsInN0cmljdCIsIkpTT04iLCJwYXJzZSIsInJlc3BvbnNlRm9ybWF0IiwiZmluYWxpemVDaGF0Q29tcGxldGlvbiIsInJlc3BvbnNlX2Zvcm1hdCIsIl9hIiwiX2IiLCJfYyIsIl9kIiwicmVzdCIsIk9iamVjdCIsImFzc2lnbiIsIm90aGVyIiwiYXNzZXJ0SXNFbXB0eSIsInB1c2giLCJmdW5jdGlvbl9jYWxsIiwiZm4iLCJ0b29sX2NhbGwiLCJTeW1ib2wiLCJhc3luY0l0ZXJhdG9yIiwicHVzaFF1ZXVlIiwicmVhZFF1ZXVlIiwiZG9uZSIsIm9uIiwicmVhZGVyIiwic2hpZnQiLCJyZXNvbHZlIiwibGVuZ3RoIiwiZXJyIiwicmVqZWN0IiwibmV4dCIsInZhbHVlIiwiUHJvbWlzZSIsInRoZW4iLCJyZXR1cm4iLCJ0b1JlYWRhYmxlU3RyZWFtIiwiYmluZCIsImNyZWF0ZWQiLCJtb2RlbCIsInN5c3RlbV9maW5nZXJwcmludCIsIm1hcCIsImNob2ljZVJlc3QiLCJtZXNzYWdlUmVzdCIsImFyZ3MiLCJpIiwidG9vbFJlc3QiLCJmblJlc3QiLCJzdHIiLCJvYmplY3QiLCJ4Iiwic3RyaW5naWZ5Iiwib2JqIiwiX3giXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/lib/ChatCompletionStream.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/lib/ChatCompletionStreamingRunner.mjs":
/*!*******************************************************************!*\
  !*** ./node_modules/openai/lib/ChatCompletionStreamingRunner.mjs ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChatCompletionStreamingRunner: () => (/* binding */ ChatCompletionStreamingRunner)\n/* harmony export */ });\n/* harmony import */ var _ChatCompletionStream_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ChatCompletionStream.mjs */ \"(rsc)/./node_modules/openai/lib/ChatCompletionStream.mjs\");\n\nclass ChatCompletionStreamingRunner extends _ChatCompletionStream_mjs__WEBPACK_IMPORTED_MODULE_0__.ChatCompletionStream {\n    static fromReadableStream(stream) {\n        const runner = new ChatCompletionStreamingRunner(null);\n        runner._run(()=>runner._fromReadableStream(stream));\n        return runner;\n    }\n    static runTools(client, params, options) {\n        const runner = new ChatCompletionStreamingRunner(// @ts-expect-error TODO these types are incompatible\n        params);\n        const opts = {\n            ...options,\n            headers: {\n                ...options?.headers,\n                \"X-Stainless-Helper-Method\": \"runTools\"\n            }\n        };\n        runner._run(()=>runner._runTools(client, params, opts));\n        return runner;\n    }\n} //# sourceMappingURL=ChatCompletionStreamingRunner.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvb3BlbmFpL2xpYi9DaGF0Q29tcGxldGlvblN0cmVhbWluZ1J1bm5lci5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBa0U7QUFDM0QsTUFBTUMsc0NBQXNDRCwyRUFBb0JBO0lBQ25FLE9BQU9FLG1CQUFtQkMsTUFBTSxFQUFFO1FBQzlCLE1BQU1DLFNBQVMsSUFBSUgsOEJBQThCO1FBQ2pERyxPQUFPQyxJQUFJLENBQUMsSUFBTUQsT0FBT0UsbUJBQW1CLENBQUNIO1FBQzdDLE9BQU9DO0lBQ1g7SUFDQSxPQUFPRyxTQUFTQyxNQUFNLEVBQUVDLE1BQU0sRUFBRUMsT0FBTyxFQUFFO1FBQ3JDLE1BQU1OLFNBQVMsSUFBSUgsOEJBQ25CLHFEQUFxRDtRQUNyRFE7UUFDQSxNQUFNRSxPQUFPO1lBQ1QsR0FBR0QsT0FBTztZQUNWRSxTQUFTO2dCQUFFLEdBQUdGLFNBQVNFLE9BQU87Z0JBQUUsNkJBQTZCO1lBQVc7UUFDNUU7UUFDQVIsT0FBT0MsSUFBSSxDQUFDLElBQU1ELE9BQU9TLFNBQVMsQ0FBQ0wsUUFBUUMsUUFBUUU7UUFDbkQsT0FBT1A7SUFDWDtBQUNKLEVBQ0EsMERBQTBEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3lzdGVtLXByb21wdC10b29sLXdlYi8uL25vZGVfbW9kdWxlcy9vcGVuYWkvbGliL0NoYXRDb21wbGV0aW9uU3RyZWFtaW5nUnVubmVyLm1qcz9iNGUyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYXRDb21wbGV0aW9uU3RyZWFtIH0gZnJvbSBcIi4vQ2hhdENvbXBsZXRpb25TdHJlYW0ubWpzXCI7XG5leHBvcnQgY2xhc3MgQ2hhdENvbXBsZXRpb25TdHJlYW1pbmdSdW5uZXIgZXh0ZW5kcyBDaGF0Q29tcGxldGlvblN0cmVhbSB7XG4gICAgc3RhdGljIGZyb21SZWFkYWJsZVN0cmVhbShzdHJlYW0pIHtcbiAgICAgICAgY29uc3QgcnVubmVyID0gbmV3IENoYXRDb21wbGV0aW9uU3RyZWFtaW5nUnVubmVyKG51bGwpO1xuICAgICAgICBydW5uZXIuX3J1bigoKSA9PiBydW5uZXIuX2Zyb21SZWFkYWJsZVN0cmVhbShzdHJlYW0pKTtcbiAgICAgICAgcmV0dXJuIHJ1bm5lcjtcbiAgICB9XG4gICAgc3RhdGljIHJ1blRvb2xzKGNsaWVudCwgcGFyYW1zLCBvcHRpb25zKSB7XG4gICAgICAgIGNvbnN0IHJ1bm5lciA9IG5ldyBDaGF0Q29tcGxldGlvblN0cmVhbWluZ1J1bm5lcihcbiAgICAgICAgLy8gQHRzLWV4cGVjdC1lcnJvciBUT0RPIHRoZXNlIHR5cGVzIGFyZSBpbmNvbXBhdGlibGVcbiAgICAgICAgcGFyYW1zKTtcbiAgICAgICAgY29uc3Qgb3B0cyA9IHtcbiAgICAgICAgICAgIC4uLm9wdGlvbnMsXG4gICAgICAgICAgICBoZWFkZXJzOiB7IC4uLm9wdGlvbnM/LmhlYWRlcnMsICdYLVN0YWlubGVzcy1IZWxwZXItTWV0aG9kJzogJ3J1blRvb2xzJyB9LFxuICAgICAgICB9O1xuICAgICAgICBydW5uZXIuX3J1bigoKSA9PiBydW5uZXIuX3J1blRvb2xzKGNsaWVudCwgcGFyYW1zLCBvcHRzKSk7XG4gICAgICAgIHJldHVybiBydW5uZXI7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Q2hhdENvbXBsZXRpb25TdHJlYW1pbmdSdW5uZXIubWpzLm1hcCJdLCJuYW1lcyI6WyJDaGF0Q29tcGxldGlvblN0cmVhbSIsIkNoYXRDb21wbGV0aW9uU3RyZWFtaW5nUnVubmVyIiwiZnJvbVJlYWRhYmxlU3RyZWFtIiwic3RyZWFtIiwicnVubmVyIiwiX3J1biIsIl9mcm9tUmVhZGFibGVTdHJlYW0iLCJydW5Ub29scyIsImNsaWVudCIsInBhcmFtcyIsIm9wdGlvbnMiLCJvcHRzIiwiaGVhZGVycyIsIl9ydW5Ub29scyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/lib/ChatCompletionStreamingRunner.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/lib/EventStream.mjs":
/*!*************************************************!*\
  !*** ./node_modules/openai/lib/EventStream.mjs ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EventStream: () => (/* binding */ EventStream)\n/* harmony export */ });\n/* harmony import */ var _internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../internal/tslib.mjs */ \"(rsc)/./node_modules/openai/internal/tslib.mjs\");\n/* harmony import */ var _error_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error.mjs */ \"(rsc)/./node_modules/openai/error.mjs\");\nvar _EventStream_instances, _EventStream_connectedPromise, _EventStream_resolveConnectedPromise, _EventStream_rejectConnectedPromise, _EventStream_endPromise, _EventStream_resolveEndPromise, _EventStream_rejectEndPromise, _EventStream_listeners, _EventStream_ended, _EventStream_errored, _EventStream_aborted, _EventStream_catchingPromiseCreated, _EventStream_handleError;\n\n\nclass EventStream {\n    constructor(){\n        _EventStream_instances.add(this);\n        this.controller = new AbortController();\n        _EventStream_connectedPromise.set(this, void 0);\n        _EventStream_resolveConnectedPromise.set(this, ()=>{});\n        _EventStream_rejectConnectedPromise.set(this, ()=>{});\n        _EventStream_endPromise.set(this, void 0);\n        _EventStream_resolveEndPromise.set(this, ()=>{});\n        _EventStream_rejectEndPromise.set(this, ()=>{});\n        _EventStream_listeners.set(this, {});\n        _EventStream_ended.set(this, false);\n        _EventStream_errored.set(this, false);\n        _EventStream_aborted.set(this, false);\n        _EventStream_catchingPromiseCreated.set(this, false);\n        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _EventStream_connectedPromise, new Promise((resolve, reject)=>{\n            (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _EventStream_resolveConnectedPromise, resolve, \"f\");\n            (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _EventStream_rejectConnectedPromise, reject, \"f\");\n        }), \"f\");\n        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _EventStream_endPromise, new Promise((resolve, reject)=>{\n            (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _EventStream_resolveEndPromise, resolve, \"f\");\n            (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _EventStream_rejectEndPromise, reject, \"f\");\n        }), \"f\");\n        // Don't let these promises cause unhandled rejection errors.\n        // we will manually cause an unhandled rejection error later\n        // if the user hasn't registered any error listener or called\n        // any promise-returning method.\n        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _EventStream_connectedPromise, \"f\").catch(()=>{});\n        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _EventStream_endPromise, \"f\").catch(()=>{});\n    }\n    _run(executor) {\n        // Unfortunately if we call `executor()` immediately we get runtime errors about\n        // references to `this` before the `super()` constructor call returns.\n        setTimeout(()=>{\n            executor().then(()=>{\n                this._emitFinal();\n                this._emit(\"end\");\n            }, (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _EventStream_instances, \"m\", _EventStream_handleError).bind(this));\n        }, 0);\n    }\n    _connected() {\n        if (this.ended) return;\n        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _EventStream_resolveConnectedPromise, \"f\").call(this);\n        this._emit(\"connect\");\n    }\n    get ended() {\n        return (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _EventStream_ended, \"f\");\n    }\n    get errored() {\n        return (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _EventStream_errored, \"f\");\n    }\n    get aborted() {\n        return (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _EventStream_aborted, \"f\");\n    }\n    abort() {\n        this.controller.abort();\n    }\n    /**\n     * Adds the listener function to the end of the listeners array for the event.\n     * No checks are made to see if the listener has already been added. Multiple calls passing\n     * the same combination of event and listener will result in the listener being added, and\n     * called, multiple times.\n     * @returns this ChatCompletionStream, so that calls can be chained\n     */ on(event, listener) {\n        const listeners = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _EventStream_listeners, \"f\")[event] || ((0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _EventStream_listeners, \"f\")[event] = []);\n        listeners.push({\n            listener\n        });\n        return this;\n    }\n    /**\n     * Removes the specified listener from the listener array for the event.\n     * off() will remove, at most, one instance of a listener from the listener array. If any single\n     * listener has been added multiple times to the listener array for the specified event, then\n     * off() must be called multiple times to remove each instance.\n     * @returns this ChatCompletionStream, so that calls can be chained\n     */ off(event, listener) {\n        const listeners = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _EventStream_listeners, \"f\")[event];\n        if (!listeners) return this;\n        const index = listeners.findIndex((l)=>l.listener === listener);\n        if (index >= 0) listeners.splice(index, 1);\n        return this;\n    }\n    /**\n     * Adds a one-time listener function for the event. The next time the event is triggered,\n     * this listener is removed and then invoked.\n     * @returns this ChatCompletionStream, so that calls can be chained\n     */ once(event, listener) {\n        const listeners = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _EventStream_listeners, \"f\")[event] || ((0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _EventStream_listeners, \"f\")[event] = []);\n        listeners.push({\n            listener,\n            once: true\n        });\n        return this;\n    }\n    /**\n     * This is similar to `.once()`, but returns a Promise that resolves the next time\n     * the event is triggered, instead of calling a listener callback.\n     * @returns a Promise that resolves the next time given event is triggered,\n     * or rejects if an error is emitted.  (If you request the 'error' event,\n     * returns a promise that resolves with the error).\n     *\n     * Example:\n     *\n     *   const message = await stream.emitted('message') // rejects if the stream errors\n     */ emitted(event) {\n        return new Promise((resolve, reject)=>{\n            (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _EventStream_catchingPromiseCreated, true, \"f\");\n            if (event !== \"error\") this.once(\"error\", reject);\n            this.once(event, resolve);\n        });\n    }\n    async done() {\n        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _EventStream_catchingPromiseCreated, true, \"f\");\n        await (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _EventStream_endPromise, \"f\");\n    }\n    _emit(event, ...args) {\n        // make sure we don't emit any events after end\n        if ((0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _EventStream_ended, \"f\")) {\n            return;\n        }\n        if (event === \"end\") {\n            (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _EventStream_ended, true, \"f\");\n            (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _EventStream_resolveEndPromise, \"f\").call(this);\n        }\n        const listeners = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _EventStream_listeners, \"f\")[event];\n        if (listeners) {\n            (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _EventStream_listeners, \"f\")[event] = listeners.filter((l)=>!l.once);\n            listeners.forEach(({ listener })=>listener(...args));\n        }\n        if (event === \"abort\") {\n            const error = args[0];\n            if (!(0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _EventStream_catchingPromiseCreated, \"f\") && !listeners?.length) {\n                Promise.reject(error);\n            }\n            (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _EventStream_rejectConnectedPromise, \"f\").call(this, error);\n            (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _EventStream_rejectEndPromise, \"f\").call(this, error);\n            this._emit(\"end\");\n            return;\n        }\n        if (event === \"error\") {\n            // NOTE: _emit('error', error) should only be called from #handleError().\n            const error = args[0];\n            if (!(0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _EventStream_catchingPromiseCreated, \"f\") && !listeners?.length) {\n                // Trigger an unhandled rejection if the user hasn't registered any error handlers.\n                // If you are seeing stack traces here, make sure to handle errors via either:\n                // - runner.on('error', () => ...)\n                // - await runner.done()\n                // - await runner.finalChatCompletion()\n                // - etc.\n                Promise.reject(error);\n            }\n            (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _EventStream_rejectConnectedPromise, \"f\").call(this, error);\n            (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _EventStream_rejectEndPromise, \"f\").call(this, error);\n            this._emit(\"end\");\n        }\n    }\n    _emitFinal() {}\n}\n_EventStream_connectedPromise = new WeakMap(), _EventStream_resolveConnectedPromise = new WeakMap(), _EventStream_rejectConnectedPromise = new WeakMap(), _EventStream_endPromise = new WeakMap(), _EventStream_resolveEndPromise = new WeakMap(), _EventStream_rejectEndPromise = new WeakMap(), _EventStream_listeners = new WeakMap(), _EventStream_ended = new WeakMap(), _EventStream_errored = new WeakMap(), _EventStream_aborted = new WeakMap(), _EventStream_catchingPromiseCreated = new WeakMap(), _EventStream_instances = new WeakSet(), _EventStream_handleError = function _EventStream_handleError(error) {\n    (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _EventStream_errored, true, \"f\");\n    if (error instanceof Error && error.name === \"AbortError\") {\n        error = new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.APIUserAbortError();\n    }\n    if (error instanceof _error_mjs__WEBPACK_IMPORTED_MODULE_1__.APIUserAbortError) {\n        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _EventStream_aborted, true, \"f\");\n        return this._emit(\"abort\", error);\n    }\n    if (error instanceof _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError) {\n        return this._emit(\"error\", error);\n    }\n    if (error instanceof Error) {\n        const openAIError = new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(error.message);\n        // @ts-ignore\n        openAIError.cause = error;\n        return this._emit(\"error\", openAIError);\n    }\n    return this._emit(\"error\", new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(String(error)));\n}; //# sourceMappingURL=EventStream.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/lib/EventStream.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/lib/ResponsesParser.mjs":
/*!*****************************************************!*\
  !*** ./node_modules/openai/lib/ResponsesParser.mjs ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addOutputText: () => (/* binding */ addOutputText),\n/* harmony export */   hasAutoParseableInput: () => (/* binding */ hasAutoParseableInput),\n/* harmony export */   isAutoParsableTool: () => (/* binding */ isAutoParsableTool),\n/* harmony export */   makeParseableResponseTool: () => (/* binding */ makeParseableResponseTool),\n/* harmony export */   maybeParseResponse: () => (/* binding */ maybeParseResponse),\n/* harmony export */   parseResponse: () => (/* binding */ parseResponse),\n/* harmony export */   shouldParseToolCall: () => (/* binding */ shouldParseToolCall),\n/* harmony export */   validateInputTools: () => (/* binding */ validateInputTools)\n/* harmony export */ });\n/* harmony import */ var _error_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../error.mjs */ \"(rsc)/./node_modules/openai/error.mjs\");\n/* harmony import */ var _lib_parser_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../lib/parser.mjs */ \"(rsc)/./node_modules/openai/lib/parser.mjs\");\n\n\nfunction maybeParseResponse(response, params) {\n    if (!params || !hasAutoParseableInput(params)) {\n        return {\n            ...response,\n            output_parsed: null,\n            output: response.output.map((item)=>{\n                if (item.type === \"function_call\") {\n                    return {\n                        ...item,\n                        parsed_arguments: null\n                    };\n                }\n                if (item.type === \"message\") {\n                    return {\n                        ...item,\n                        content: item.content.map((content)=>({\n                                ...content,\n                                parsed: null\n                            }))\n                    };\n                } else {\n                    return item;\n                }\n            })\n        };\n    }\n    return parseResponse(response, params);\n}\nfunction parseResponse(response, params) {\n    const output = response.output.map((item)=>{\n        if (item.type === \"function_call\") {\n            return {\n                ...item,\n                parsed_arguments: parseToolCall(params, item)\n            };\n        }\n        if (item.type === \"message\") {\n            const content = item.content.map((content)=>{\n                if (content.type === \"output_text\") {\n                    return {\n                        ...content,\n                        parsed: parseTextFormat(params, content.text)\n                    };\n                }\n                return content;\n            });\n            return {\n                ...item,\n                content\n            };\n        }\n        return item;\n    });\n    const parsed = Object.assign({}, response, {\n        output\n    });\n    if (!Object.getOwnPropertyDescriptor(response, \"output_text\")) {\n        addOutputText(parsed);\n    }\n    Object.defineProperty(parsed, \"output_parsed\", {\n        enumerable: true,\n        get () {\n            for (const output of parsed.output){\n                if (output.type !== \"message\") {\n                    continue;\n                }\n                for (const content of output.content){\n                    if (content.type === \"output_text\" && content.parsed !== null) {\n                        return content.parsed;\n                    }\n                }\n            }\n            return null;\n        }\n    });\n    return parsed;\n}\nfunction parseTextFormat(params, content) {\n    if (params.text?.format?.type !== \"json_schema\") {\n        return null;\n    }\n    if (\"$parseRaw\" in params.text?.format) {\n        const text_format = params.text?.format;\n        return text_format.$parseRaw(content);\n    }\n    return JSON.parse(content);\n}\nfunction hasAutoParseableInput(params) {\n    if ((0,_lib_parser_mjs__WEBPACK_IMPORTED_MODULE_1__.isAutoParsableResponseFormat)(params.text?.format)) {\n        return true;\n    }\n    return false;\n}\nfunction makeParseableResponseTool(tool, { parser, callback }) {\n    const obj = {\n        ...tool\n    };\n    Object.defineProperties(obj, {\n        $brand: {\n            value: \"auto-parseable-tool\",\n            enumerable: false\n        },\n        $parseRaw: {\n            value: parser,\n            enumerable: false\n        },\n        $callback: {\n            value: callback,\n            enumerable: false\n        }\n    });\n    return obj;\n}\nfunction isAutoParsableTool(tool) {\n    return tool?.[\"$brand\"] === \"auto-parseable-tool\";\n}\nfunction getInputToolByName(input_tools, name) {\n    return input_tools.find((tool)=>tool.type === \"function\" && tool.name === name);\n}\nfunction parseToolCall(params, toolCall) {\n    const inputTool = getInputToolByName(params.tools ?? [], toolCall.name);\n    return {\n        ...toolCall,\n        ...toolCall,\n        parsed_arguments: isAutoParsableTool(inputTool) ? inputTool.$parseRaw(toolCall.arguments) : inputTool?.strict ? JSON.parse(toolCall.arguments) : null\n    };\n}\nfunction shouldParseToolCall(params, toolCall) {\n    if (!params) {\n        return false;\n    }\n    const inputTool = getInputToolByName(params.tools ?? [], toolCall.name);\n    return isAutoParsableTool(inputTool) || inputTool?.strict || false;\n}\nfunction validateInputTools(tools) {\n    for (const tool of tools ?? []){\n        if (tool.type !== \"function\") {\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_0__.OpenAIError(`Currently only \\`function\\` tool types support auto-parsing; Received \\`${tool.type}\\``);\n        }\n        if (tool.function.strict !== true) {\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_0__.OpenAIError(`The \\`${tool.function.name}\\` tool is not marked with \\`strict: true\\`. Only strict function tools can be auto-parsed`);\n        }\n    }\n}\nfunction addOutputText(rsp) {\n    const texts = [];\n    for (const output of rsp.output){\n        if (output.type !== \"message\") {\n            continue;\n        }\n        for (const content of output.content){\n            if (content.type === \"output_text\") {\n                texts.push(content.text);\n            }\n        }\n    }\n    rsp.output_text = texts.join(\"\");\n} //# sourceMappingURL=ResponsesParser.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/lib/ResponsesParser.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/lib/RunnableFunction.mjs":
/*!******************************************************!*\
  !*** ./node_modules/openai/lib/RunnableFunction.mjs ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ParsingToolFunction: () => (/* binding */ ParsingToolFunction),\n/* harmony export */   isRunnableFunctionWithParse: () => (/* binding */ isRunnableFunctionWithParse)\n/* harmony export */ });\nfunction isRunnableFunctionWithParse(fn) {\n    return typeof fn.parse === \"function\";\n}\n/**\n * This is helper class for passing a `function` and `parse` where the `function`\n * argument type matches the `parse` return type.\n */ class ParsingToolFunction {\n    constructor(input){\n        this.type = \"function\";\n        this.function = input;\n    }\n} //# sourceMappingURL=RunnableFunction.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvb3BlbmFpL2xpYi9SdW5uYWJsZUZ1bmN0aW9uLm1qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFPLFNBQVNBLDRCQUE0QkMsRUFBRTtJQUMxQyxPQUFPLE9BQU9BLEdBQUdDLEtBQUssS0FBSztBQUMvQjtBQUNBOzs7Q0FHQyxHQUNNLE1BQU1DO0lBQ1RDLFlBQVlDLEtBQUssQ0FBRTtRQUNmLElBQUksQ0FBQ0MsSUFBSSxHQUFHO1FBQ1osSUFBSSxDQUFDQyxRQUFRLEdBQUdGO0lBQ3BCO0FBQ0osRUFDQSw2Q0FBNkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zeXN0ZW0tcHJvbXB0LXRvb2wtd2ViLy4vbm9kZV9tb2R1bGVzL29wZW5haS9saWIvUnVubmFibGVGdW5jdGlvbi5tanM/YTZiNCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gaXNSdW5uYWJsZUZ1bmN0aW9uV2l0aFBhcnNlKGZuKSB7XG4gICAgcmV0dXJuIHR5cGVvZiBmbi5wYXJzZSA9PT0gJ2Z1bmN0aW9uJztcbn1cbi8qKlxuICogVGhpcyBpcyBoZWxwZXIgY2xhc3MgZm9yIHBhc3NpbmcgYSBgZnVuY3Rpb25gIGFuZCBgcGFyc2VgIHdoZXJlIHRoZSBgZnVuY3Rpb25gXG4gKiBhcmd1bWVudCB0eXBlIG1hdGNoZXMgdGhlIGBwYXJzZWAgcmV0dXJuIHR5cGUuXG4gKi9cbmV4cG9ydCBjbGFzcyBQYXJzaW5nVG9vbEZ1bmN0aW9uIHtcbiAgICBjb25zdHJ1Y3RvcihpbnB1dCkge1xuICAgICAgICB0aGlzLnR5cGUgPSAnZnVuY3Rpb24nO1xuICAgICAgICB0aGlzLmZ1bmN0aW9uID0gaW5wdXQ7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9UnVubmFibGVGdW5jdGlvbi5tanMubWFwIl0sIm5hbWVzIjpbImlzUnVubmFibGVGdW5jdGlvbldpdGhQYXJzZSIsImZuIiwicGFyc2UiLCJQYXJzaW5nVG9vbEZ1bmN0aW9uIiwiY29uc3RydWN0b3IiLCJpbnB1dCIsInR5cGUiLCJmdW5jdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/lib/RunnableFunction.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/lib/Util.mjs":
/*!******************************************!*\
  !*** ./node_modules/openai/lib/Util.mjs ***!
  \******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   allSettledWithThrow: () => (/* binding */ allSettledWithThrow)\n/* harmony export */ });\n/**\n * Like `Promise.allSettled()` but throws an error if any promises are rejected.\n */ const allSettledWithThrow = async (promises)=>{\n    const results = await Promise.allSettled(promises);\n    const rejected = results.filter((result)=>result.status === \"rejected\");\n    if (rejected.length) {\n        for (const result of rejected){\n            console.error(result.reason);\n        }\n        throw new Error(`${rejected.length} promise(s) failed - see the above errors`);\n    }\n    // Note: TS was complaining about using `.filter().map()` here for some reason\n    const values = [];\n    for (const result of results){\n        if (result.status === \"fulfilled\") {\n            values.push(result.value);\n        }\n    }\n    return values;\n}; //# sourceMappingURL=Util.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvb3BlbmFpL2xpYi9VdGlsLm1qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7O0NBRUMsR0FDTSxNQUFNQSxzQkFBc0IsT0FBT0M7SUFDdEMsTUFBTUMsVUFBVSxNQUFNQyxRQUFRQyxVQUFVLENBQUNIO0lBQ3pDLE1BQU1JLFdBQVdILFFBQVFJLE1BQU0sQ0FBQyxDQUFDQyxTQUFXQSxPQUFPQyxNQUFNLEtBQUs7SUFDOUQsSUFBSUgsU0FBU0ksTUFBTSxFQUFFO1FBQ2pCLEtBQUssTUFBTUYsVUFBVUYsU0FBVTtZQUMzQkssUUFBUUMsS0FBSyxDQUFDSixPQUFPSyxNQUFNO1FBQy9CO1FBQ0EsTUFBTSxJQUFJQyxNQUFNLENBQUMsRUFBRVIsU0FBU0ksTUFBTSxDQUFDLHlDQUF5QyxDQUFDO0lBQ2pGO0lBQ0EsOEVBQThFO0lBQzlFLE1BQU1LLFNBQVMsRUFBRTtJQUNqQixLQUFLLE1BQU1QLFVBQVVMLFFBQVM7UUFDMUIsSUFBSUssT0FBT0MsTUFBTSxLQUFLLGFBQWE7WUFDL0JNLE9BQU9DLElBQUksQ0FBQ1IsT0FBT1MsS0FBSztRQUM1QjtJQUNKO0lBQ0EsT0FBT0Y7QUFDWCxFQUFFLENBQ0YsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3lzdGVtLXByb21wdC10b29sLXdlYi8uL25vZGVfbW9kdWxlcy9vcGVuYWkvbGliL1V0aWwubWpzP2M4ZDgiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBMaWtlIGBQcm9taXNlLmFsbFNldHRsZWQoKWAgYnV0IHRocm93cyBhbiBlcnJvciBpZiBhbnkgcHJvbWlzZXMgYXJlIHJlamVjdGVkLlxuICovXG5leHBvcnQgY29uc3QgYWxsU2V0dGxlZFdpdGhUaHJvdyA9IGFzeW5jIChwcm9taXNlcykgPT4ge1xuICAgIGNvbnN0IHJlc3VsdHMgPSBhd2FpdCBQcm9taXNlLmFsbFNldHRsZWQocHJvbWlzZXMpO1xuICAgIGNvbnN0IHJlamVjdGVkID0gcmVzdWx0cy5maWx0ZXIoKHJlc3VsdCkgPT4gcmVzdWx0LnN0YXR1cyA9PT0gJ3JlamVjdGVkJyk7XG4gICAgaWYgKHJlamVjdGVkLmxlbmd0aCkge1xuICAgICAgICBmb3IgKGNvbnN0IHJlc3VsdCBvZiByZWplY3RlZCkge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcihyZXN1bHQucmVhc29uKTtcbiAgICAgICAgfVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYCR7cmVqZWN0ZWQubGVuZ3RofSBwcm9taXNlKHMpIGZhaWxlZCAtIHNlZSB0aGUgYWJvdmUgZXJyb3JzYCk7XG4gICAgfVxuICAgIC8vIE5vdGU6IFRTIHdhcyBjb21wbGFpbmluZyBhYm91dCB1c2luZyBgLmZpbHRlcigpLm1hcCgpYCBoZXJlIGZvciBzb21lIHJlYXNvblxuICAgIGNvbnN0IHZhbHVlcyA9IFtdO1xuICAgIGZvciAoY29uc3QgcmVzdWx0IG9mIHJlc3VsdHMpIHtcbiAgICAgICAgaWYgKHJlc3VsdC5zdGF0dXMgPT09ICdmdWxmaWxsZWQnKSB7XG4gICAgICAgICAgICB2YWx1ZXMucHVzaChyZXN1bHQudmFsdWUpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB2YWx1ZXM7XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9VXRpbC5tanMubWFwIl0sIm5hbWVzIjpbImFsbFNldHRsZWRXaXRoVGhyb3ciLCJwcm9taXNlcyIsInJlc3VsdHMiLCJQcm9taXNlIiwiYWxsU2V0dGxlZCIsInJlamVjdGVkIiwiZmlsdGVyIiwicmVzdWx0Iiwic3RhdHVzIiwibGVuZ3RoIiwiY29uc29sZSIsImVycm9yIiwicmVhc29uIiwiRXJyb3IiLCJ2YWx1ZXMiLCJwdXNoIiwidmFsdWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/lib/Util.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/lib/chatCompletionUtils.mjs":
/*!*********************************************************!*\
  !*** ./node_modules/openai/lib/chatCompletionUtils.mjs ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isAssistantMessage: () => (/* binding */ isAssistantMessage),\n/* harmony export */   isPresent: () => (/* binding */ isPresent),\n/* harmony export */   isToolMessage: () => (/* binding */ isToolMessage)\n/* harmony export */ });\nconst isAssistantMessage = (message)=>{\n    return message?.role === \"assistant\";\n};\nconst isToolMessage = (message)=>{\n    return message?.role === \"tool\";\n};\nfunction isPresent(obj) {\n    return obj != null;\n} //# sourceMappingURL=chatCompletionUtils.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvb3BlbmFpL2xpYi9jaGF0Q29tcGxldGlvblV0aWxzLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBTyxNQUFNQSxxQkFBcUIsQ0FBQ0M7SUFDL0IsT0FBT0EsU0FBU0MsU0FBUztBQUM3QixFQUFFO0FBQ0ssTUFBTUMsZ0JBQWdCLENBQUNGO0lBQzFCLE9BQU9BLFNBQVNDLFNBQVM7QUFDN0IsRUFBRTtBQUNLLFNBQVNFLFVBQVVDLEdBQUc7SUFDekIsT0FBT0EsT0FBTztBQUNsQixFQUNBLGdEQUFnRCIsInNvdXJjZXMiOlsid2VicGFjazovL3N5c3RlbS1wcm9tcHQtdG9vbC13ZWIvLi9ub2RlX21vZHVsZXMvb3BlbmFpL2xpYi9jaGF0Q29tcGxldGlvblV0aWxzLm1qcz83MmE0Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBpc0Fzc2lzdGFudE1lc3NhZ2UgPSAobWVzc2FnZSkgPT4ge1xuICAgIHJldHVybiBtZXNzYWdlPy5yb2xlID09PSAnYXNzaXN0YW50Jztcbn07XG5leHBvcnQgY29uc3QgaXNUb29sTWVzc2FnZSA9IChtZXNzYWdlKSA9PiB7XG4gICAgcmV0dXJuIG1lc3NhZ2U/LnJvbGUgPT09ICd0b29sJztcbn07XG5leHBvcnQgZnVuY3Rpb24gaXNQcmVzZW50KG9iaikge1xuICAgIHJldHVybiBvYmogIT0gbnVsbDtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNoYXRDb21wbGV0aW9uVXRpbHMubWpzLm1hcCJdLCJuYW1lcyI6WyJpc0Fzc2lzdGFudE1lc3NhZ2UiLCJtZXNzYWdlIiwicm9sZSIsImlzVG9vbE1lc3NhZ2UiLCJpc1ByZXNlbnQiLCJvYmoiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/lib/chatCompletionUtils.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/lib/parser.mjs":
/*!********************************************!*\
  !*** ./node_modules/openai/lib/parser.mjs ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assertToolCallsAreChatCompletionFunctionToolCalls: () => (/* binding */ assertToolCallsAreChatCompletionFunctionToolCalls),\n/* harmony export */   hasAutoParseableInput: () => (/* binding */ hasAutoParseableInput),\n/* harmony export */   isAutoParsableResponseFormat: () => (/* binding */ isAutoParsableResponseFormat),\n/* harmony export */   isAutoParsableTool: () => (/* binding */ isAutoParsableTool),\n/* harmony export */   isChatCompletionFunctionTool: () => (/* binding */ isChatCompletionFunctionTool),\n/* harmony export */   makeParseableResponseFormat: () => (/* binding */ makeParseableResponseFormat),\n/* harmony export */   makeParseableTextFormat: () => (/* binding */ makeParseableTextFormat),\n/* harmony export */   makeParseableTool: () => (/* binding */ makeParseableTool),\n/* harmony export */   maybeParseChatCompletion: () => (/* binding */ maybeParseChatCompletion),\n/* harmony export */   parseChatCompletion: () => (/* binding */ parseChatCompletion),\n/* harmony export */   shouldParseToolCall: () => (/* binding */ shouldParseToolCall),\n/* harmony export */   validateInputTools: () => (/* binding */ validateInputTools)\n/* harmony export */ });\n/* harmony import */ var _error_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../error.mjs */ \"(rsc)/./node_modules/openai/error.mjs\");\n\nfunction isChatCompletionFunctionTool(tool) {\n    return tool !== undefined && \"function\" in tool && tool.function !== undefined;\n}\nfunction makeParseableResponseFormat(response_format, parser) {\n    const obj = {\n        ...response_format\n    };\n    Object.defineProperties(obj, {\n        $brand: {\n            value: \"auto-parseable-response-format\",\n            enumerable: false\n        },\n        $parseRaw: {\n            value: parser,\n            enumerable: false\n        }\n    });\n    return obj;\n}\nfunction makeParseableTextFormat(response_format, parser) {\n    const obj = {\n        ...response_format\n    };\n    Object.defineProperties(obj, {\n        $brand: {\n            value: \"auto-parseable-response-format\",\n            enumerable: false\n        },\n        $parseRaw: {\n            value: parser,\n            enumerable: false\n        }\n    });\n    return obj;\n}\nfunction isAutoParsableResponseFormat(response_format) {\n    return response_format?.[\"$brand\"] === \"auto-parseable-response-format\";\n}\nfunction makeParseableTool(tool, { parser, callback }) {\n    const obj = {\n        ...tool\n    };\n    Object.defineProperties(obj, {\n        $brand: {\n            value: \"auto-parseable-tool\",\n            enumerable: false\n        },\n        $parseRaw: {\n            value: parser,\n            enumerable: false\n        },\n        $callback: {\n            value: callback,\n            enumerable: false\n        }\n    });\n    return obj;\n}\nfunction isAutoParsableTool(tool) {\n    return tool?.[\"$brand\"] === \"auto-parseable-tool\";\n}\nfunction maybeParseChatCompletion(completion, params) {\n    if (!params || !hasAutoParseableInput(params)) {\n        return {\n            ...completion,\n            choices: completion.choices.map((choice)=>{\n                assertToolCallsAreChatCompletionFunctionToolCalls(choice.message.tool_calls);\n                return {\n                    ...choice,\n                    message: {\n                        ...choice.message,\n                        parsed: null,\n                        ...choice.message.tool_calls ? {\n                            tool_calls: choice.message.tool_calls\n                        } : undefined\n                    }\n                };\n            })\n        };\n    }\n    return parseChatCompletion(completion, params);\n}\nfunction parseChatCompletion(completion, params) {\n    const choices = completion.choices.map((choice)=>{\n        if (choice.finish_reason === \"length\") {\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_0__.LengthFinishReasonError();\n        }\n        if (choice.finish_reason === \"content_filter\") {\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_0__.ContentFilterFinishReasonError();\n        }\n        assertToolCallsAreChatCompletionFunctionToolCalls(choice.message.tool_calls);\n        return {\n            ...choice,\n            message: {\n                ...choice.message,\n                ...choice.message.tool_calls ? {\n                    tool_calls: choice.message.tool_calls?.map((toolCall)=>parseToolCall(params, toolCall)) ?? undefined\n                } : undefined,\n                parsed: choice.message.content && !choice.message.refusal ? parseResponseFormat(params, choice.message.content) : null\n            }\n        };\n    });\n    return {\n        ...completion,\n        choices\n    };\n}\nfunction parseResponseFormat(params, content) {\n    if (params.response_format?.type !== \"json_schema\") {\n        return null;\n    }\n    if (params.response_format?.type === \"json_schema\") {\n        if (\"$parseRaw\" in params.response_format) {\n            const response_format = params.response_format;\n            return response_format.$parseRaw(content);\n        }\n        return JSON.parse(content);\n    }\n    return null;\n}\nfunction parseToolCall(params, toolCall) {\n    const inputTool = params.tools?.find((inputTool)=>isChatCompletionFunctionTool(inputTool) && inputTool.function?.name === toolCall.function.name); // TS doesn't narrow based on isChatCompletionTool\n    return {\n        ...toolCall,\n        function: {\n            ...toolCall.function,\n            parsed_arguments: isAutoParsableTool(inputTool) ? inputTool.$parseRaw(toolCall.function.arguments) : inputTool?.function.strict ? JSON.parse(toolCall.function.arguments) : null\n        }\n    };\n}\nfunction shouldParseToolCall(params, toolCall) {\n    if (!params || !(\"tools\" in params) || !params.tools) {\n        return false;\n    }\n    const inputTool = params.tools?.find((inputTool)=>isChatCompletionFunctionTool(inputTool) && inputTool.function?.name === toolCall.function.name);\n    return isChatCompletionFunctionTool(inputTool) && (isAutoParsableTool(inputTool) || inputTool?.function.strict || false);\n}\nfunction hasAutoParseableInput(params) {\n    if (isAutoParsableResponseFormat(params.response_format)) {\n        return true;\n    }\n    return params.tools?.some((t)=>isAutoParsableTool(t) || t.type === \"function\" && t.function.strict === true) ?? false;\n}\nfunction assertToolCallsAreChatCompletionFunctionToolCalls(toolCalls) {\n    for (const toolCall of toolCalls || []){\n        if (toolCall.type !== \"function\") {\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_0__.OpenAIError(`Currently only \\`function\\` tool calls are supported; Received \\`${toolCall.type}\\``);\n        }\n    }\n}\nfunction validateInputTools(tools) {\n    for (const tool of tools ?? []){\n        if (tool.type !== \"function\") {\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_0__.OpenAIError(`Currently only \\`function\\` tool types support auto-parsing; Received \\`${tool.type}\\``);\n        }\n        if (tool.function.strict !== true) {\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_0__.OpenAIError(`The \\`${tool.function.name}\\` tool is not marked with \\`strict: true\\`. Only strict function tools can be auto-parsed`);\n        }\n    }\n} //# sourceMappingURL=parser.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/lib/parser.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/lib/responses/ResponseStream.mjs":
/*!**************************************************************!*\
  !*** ./node_modules/openai/lib/responses/ResponseStream.mjs ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ResponseStream: () => (/* binding */ ResponseStream)\n/* harmony export */ });\n/* harmony import */ var _internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../internal/tslib.mjs */ \"(rsc)/./node_modules/openai/internal/tslib.mjs\");\n/* harmony import */ var _error_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../error.mjs */ \"(rsc)/./node_modules/openai/error.mjs\");\n/* harmony import */ var _EventStream_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../EventStream.mjs */ \"(rsc)/./node_modules/openai/lib/EventStream.mjs\");\n/* harmony import */ var _ResponsesParser_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../ResponsesParser.mjs */ \"(rsc)/./node_modules/openai/lib/ResponsesParser.mjs\");\nvar _ResponseStream_instances, _ResponseStream_params, _ResponseStream_currentResponseSnapshot, _ResponseStream_finalResponse, _ResponseStream_beginRequest, _ResponseStream_addEvent, _ResponseStream_endRequest, _ResponseStream_accumulateResponse;\n\n\n\n\nclass ResponseStream extends _EventStream_mjs__WEBPACK_IMPORTED_MODULE_2__.EventStream {\n    constructor(params){\n        super();\n        _ResponseStream_instances.add(this);\n        _ResponseStream_params.set(this, void 0);\n        _ResponseStream_currentResponseSnapshot.set(this, void 0);\n        _ResponseStream_finalResponse.set(this, void 0);\n        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _ResponseStream_params, params, \"f\");\n    }\n    static createResponse(client, params, options) {\n        const runner = new ResponseStream(params);\n        runner._run(()=>runner._createOrRetrieveResponse(client, params, {\n                ...options,\n                headers: {\n                    ...options?.headers,\n                    \"X-Stainless-Helper-Method\": \"stream\"\n                }\n            }));\n        return runner;\n    }\n    async _createOrRetrieveResponse(client, params, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted) this.controller.abort();\n            signal.addEventListener(\"abort\", ()=>this.controller.abort());\n        }\n        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ResponseStream_instances, \"m\", _ResponseStream_beginRequest).call(this);\n        let stream;\n        let starting_after = null;\n        if (\"response_id\" in params) {\n            stream = await client.responses.retrieve(params.response_id, {\n                stream: true\n            }, {\n                ...options,\n                signal: this.controller.signal,\n                stream: true\n            });\n            starting_after = params.starting_after ?? null;\n        } else {\n            stream = await client.responses.create({\n                ...params,\n                stream: true\n            }, {\n                ...options,\n                signal: this.controller.signal\n            });\n        }\n        this._connected();\n        for await (const event of stream){\n            (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ResponseStream_instances, \"m\", _ResponseStream_addEvent).call(this, event, starting_after);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.APIUserAbortError();\n        }\n        return (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ResponseStream_instances, \"m\", _ResponseStream_endRequest).call(this);\n    }\n    [(_ResponseStream_params = new WeakMap(), _ResponseStream_currentResponseSnapshot = new WeakMap(), _ResponseStream_finalResponse = new WeakMap(), _ResponseStream_instances = new WeakSet(), _ResponseStream_beginRequest = function _ResponseStream_beginRequest() {\n        if (this.ended) return;\n        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _ResponseStream_currentResponseSnapshot, undefined, \"f\");\n    }, _ResponseStream_addEvent = function _ResponseStream_addEvent(event, starting_after) {\n        if (this.ended) return;\n        const maybeEmit = (name, event)=>{\n            if (starting_after == null || event.sequence_number > starting_after) {\n                this._emit(name, event);\n            }\n        };\n        const response = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ResponseStream_instances, \"m\", _ResponseStream_accumulateResponse).call(this, event);\n        maybeEmit(\"event\", event);\n        switch(event.type){\n            case \"response.output_text.delta\":\n                {\n                    const output = response.output[event.output_index];\n                    if (!output) {\n                        throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(`missing output at index ${event.output_index}`);\n                    }\n                    if (output.type === \"message\") {\n                        const content = output.content[event.content_index];\n                        if (!content) {\n                            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(`missing content at index ${event.content_index}`);\n                        }\n                        if (content.type !== \"output_text\") {\n                            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(`expected content to be 'output_text', got ${content.type}`);\n                        }\n                        maybeEmit(\"response.output_text.delta\", {\n                            ...event,\n                            snapshot: content.text\n                        });\n                    }\n                    break;\n                }\n            case \"response.function_call_arguments.delta\":\n                {\n                    const output = response.output[event.output_index];\n                    if (!output) {\n                        throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(`missing output at index ${event.output_index}`);\n                    }\n                    if (output.type === \"function_call\") {\n                        maybeEmit(\"response.function_call_arguments.delta\", {\n                            ...event,\n                            snapshot: output.arguments\n                        });\n                    }\n                    break;\n                }\n            default:\n                maybeEmit(event.type, event);\n                break;\n        }\n    }, _ResponseStream_endRequest = function _ResponseStream_endRequest() {\n        if (this.ended) {\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(`stream has ended, this shouldn't happen`);\n        }\n        const snapshot = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ResponseStream_currentResponseSnapshot, \"f\");\n        if (!snapshot) {\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(`request ended without sending any events`);\n        }\n        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _ResponseStream_currentResponseSnapshot, undefined, \"f\");\n        const parsedResponse = finalizeResponse(snapshot, (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ResponseStream_params, \"f\"));\n        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _ResponseStream_finalResponse, parsedResponse, \"f\");\n        return parsedResponse;\n    }, _ResponseStream_accumulateResponse = function _ResponseStream_accumulateResponse(event) {\n        let snapshot = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ResponseStream_currentResponseSnapshot, \"f\");\n        if (!snapshot) {\n            if (event.type !== \"response.created\") {\n                throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(`When snapshot hasn't been set yet, expected 'response.created' event, got ${event.type}`);\n            }\n            snapshot = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _ResponseStream_currentResponseSnapshot, event.response, \"f\");\n            return snapshot;\n        }\n        switch(event.type){\n            case \"response.output_item.added\":\n                {\n                    snapshot.output.push(event.item);\n                    break;\n                }\n            case \"response.content_part.added\":\n                {\n                    const output = snapshot.output[event.output_index];\n                    if (!output) {\n                        throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(`missing output at index ${event.output_index}`);\n                    }\n                    if (output.type === \"message\") {\n                        output.content.push(event.part);\n                    }\n                    break;\n                }\n            case \"response.output_text.delta\":\n                {\n                    const output = snapshot.output[event.output_index];\n                    if (!output) {\n                        throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(`missing output at index ${event.output_index}`);\n                    }\n                    if (output.type === \"message\") {\n                        const content = output.content[event.content_index];\n                        if (!content) {\n                            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(`missing content at index ${event.content_index}`);\n                        }\n                        if (content.type !== \"output_text\") {\n                            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(`expected content to be 'output_text', got ${content.type}`);\n                        }\n                        content.text += event.delta;\n                    }\n                    break;\n                }\n            case \"response.function_call_arguments.delta\":\n                {\n                    const output = snapshot.output[event.output_index];\n                    if (!output) {\n                        throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(`missing output at index ${event.output_index}`);\n                    }\n                    if (output.type === \"function_call\") {\n                        output.arguments += event.delta;\n                    }\n                    break;\n                }\n            case \"response.completed\":\n                {\n                    (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _ResponseStream_currentResponseSnapshot, event.response, \"f\");\n                    break;\n                }\n        }\n        return snapshot;\n    }, Symbol.asyncIterator)]() {\n        const pushQueue = [];\n        const readQueue = [];\n        let done = false;\n        this.on(\"event\", (event)=>{\n            const reader = readQueue.shift();\n            if (reader) {\n                reader.resolve(event);\n            } else {\n                pushQueue.push(event);\n            }\n        });\n        this.on(\"end\", ()=>{\n            done = true;\n            for (const reader of readQueue){\n                reader.resolve(undefined);\n            }\n            readQueue.length = 0;\n        });\n        this.on(\"abort\", (err)=>{\n            done = true;\n            for (const reader of readQueue){\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        this.on(\"error\", (err)=>{\n            done = true;\n            for (const reader of readQueue){\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        return {\n            next: async ()=>{\n                if (!pushQueue.length) {\n                    if (done) {\n                        return {\n                            value: undefined,\n                            done: true\n                        };\n                    }\n                    return new Promise((resolve, reject)=>readQueue.push({\n                            resolve,\n                            reject\n                        })).then((event)=>event ? {\n                            value: event,\n                            done: false\n                        } : {\n                            value: undefined,\n                            done: true\n                        });\n                }\n                const event = pushQueue.shift();\n                return {\n                    value: event,\n                    done: false\n                };\n            },\n            return: async ()=>{\n                this.abort();\n                return {\n                    value: undefined,\n                    done: true\n                };\n            }\n        };\n    }\n    /**\n     * @returns a promise that resolves with the final Response, or rejects\n     * if an error occurred or the stream ended prematurely without producing a REsponse.\n     */ async finalResponse() {\n        await this.done();\n        const response = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ResponseStream_finalResponse, \"f\");\n        if (!response) throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(\"stream ended without producing a ChatCompletion\");\n        return response;\n    }\n}\nfunction finalizeResponse(snapshot, params) {\n    return (0,_ResponsesParser_mjs__WEBPACK_IMPORTED_MODULE_3__.maybeParseResponse)(snapshot, params);\n} //# sourceMappingURL=ResponseStream.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/lib/responses/ResponseStream.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/resources/audio/audio.mjs":
/*!*******************************************************!*\
  !*** ./node_modules/openai/resources/audio/audio.mjs ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Audio: () => (/* binding */ Audio)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/resource.mjs */ \"(rsc)/./node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _speech_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./speech.mjs */ \"(rsc)/./node_modules/openai/resources/audio/speech.mjs\");\n/* harmony import */ var _transcriptions_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./transcriptions.mjs */ \"(rsc)/./node_modules/openai/resources/audio/transcriptions.mjs\");\n/* harmony import */ var _translations_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./translations.mjs */ \"(rsc)/./node_modules/openai/resources/audio/translations.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\n\n\n\n\nclass Audio extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    constructor(){\n        super(...arguments);\n        this.transcriptions = new _transcriptions_mjs__WEBPACK_IMPORTED_MODULE_2__.Transcriptions(this._client);\n        this.translations = new _translations_mjs__WEBPACK_IMPORTED_MODULE_3__.Translations(this._client);\n        this.speech = new _speech_mjs__WEBPACK_IMPORTED_MODULE_1__.Speech(this._client);\n    }\n}\nAudio.Transcriptions = _transcriptions_mjs__WEBPACK_IMPORTED_MODULE_2__.Transcriptions;\nAudio.Translations = _translations_mjs__WEBPACK_IMPORTED_MODULE_3__.Translations;\nAudio.Speech = _speech_mjs__WEBPACK_IMPORTED_MODULE_1__.Speech; //# sourceMappingURL=audio.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9hdWRpby9hdWRpby5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQSxzRkFBc0Y7QUFDaEM7QUFDWjtBQUNKO0FBQ29CO0FBQ0g7QUFDRDtBQUNIO0FBQzVDLE1BQU1PLGNBQWNQLDJEQUFXQTtJQUNsQ1EsYUFBYztRQUNWLEtBQUssSUFBSUM7UUFDVCxJQUFJLENBQUNDLGNBQWMsR0FBRyxJQUFJUCwrREFBZ0MsQ0FBQyxJQUFJLENBQUNRLE9BQU87UUFDdkUsSUFBSSxDQUFDQyxZQUFZLEdBQUcsSUFBSVAsMkRBQTRCLENBQUMsSUFBSSxDQUFDTSxPQUFPO1FBQ2pFLElBQUksQ0FBQ0UsTUFBTSxHQUFHLElBQUlaLCtDQUFnQixDQUFDLElBQUksQ0FBQ1UsT0FBTztJQUNuRDtBQUNKO0FBQ0FKLE1BQU1ILGNBQWMsR0FBR0EsK0RBQWNBO0FBQ3JDRyxNQUFNRCxZQUFZLEdBQUdBLDJEQUFZQTtBQUNqQ0MsTUFBTUwsTUFBTSxHQUFHQSwrQ0FBTUEsRUFDckIsa0NBQWtDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3lzdGVtLXByb21wdC10b29sLXdlYi8uL25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2F1ZGlvL2F1ZGlvLm1qcz9kYTU1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG5pbXBvcnQgeyBBUElSZXNvdXJjZSB9IGZyb20gXCIuLi8uLi9jb3JlL3Jlc291cmNlLm1qc1wiO1xuaW1wb3J0ICogYXMgU3BlZWNoQVBJIGZyb20gXCIuL3NwZWVjaC5tanNcIjtcbmltcG9ydCB7IFNwZWVjaCB9IGZyb20gXCIuL3NwZWVjaC5tanNcIjtcbmltcG9ydCAqIGFzIFRyYW5zY3JpcHRpb25zQVBJIGZyb20gXCIuL3RyYW5zY3JpcHRpb25zLm1qc1wiO1xuaW1wb3J0IHsgVHJhbnNjcmlwdGlvbnMsIH0gZnJvbSBcIi4vdHJhbnNjcmlwdGlvbnMubWpzXCI7XG5pbXBvcnQgKiBhcyBUcmFuc2xhdGlvbnNBUEkgZnJvbSBcIi4vdHJhbnNsYXRpb25zLm1qc1wiO1xuaW1wb3J0IHsgVHJhbnNsYXRpb25zLCB9IGZyb20gXCIuL3RyYW5zbGF0aW9ucy5tanNcIjtcbmV4cG9ydCBjbGFzcyBBdWRpbyBleHRlbmRzIEFQSVJlc291cmNlIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgdGhpcy50cmFuc2NyaXB0aW9ucyA9IG5ldyBUcmFuc2NyaXB0aW9uc0FQSS5UcmFuc2NyaXB0aW9ucyh0aGlzLl9jbGllbnQpO1xuICAgICAgICB0aGlzLnRyYW5zbGF0aW9ucyA9IG5ldyBUcmFuc2xhdGlvbnNBUEkuVHJhbnNsYXRpb25zKHRoaXMuX2NsaWVudCk7XG4gICAgICAgIHRoaXMuc3BlZWNoID0gbmV3IFNwZWVjaEFQSS5TcGVlY2godGhpcy5fY2xpZW50KTtcbiAgICB9XG59XG5BdWRpby5UcmFuc2NyaXB0aW9ucyA9IFRyYW5zY3JpcHRpb25zO1xuQXVkaW8uVHJhbnNsYXRpb25zID0gVHJhbnNsYXRpb25zO1xuQXVkaW8uU3BlZWNoID0gU3BlZWNoO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXVkaW8ubWpzLm1hcCJdLCJuYW1lcyI6WyJBUElSZXNvdXJjZSIsIlNwZWVjaEFQSSIsIlNwZWVjaCIsIlRyYW5zY3JpcHRpb25zQVBJIiwiVHJhbnNjcmlwdGlvbnMiLCJUcmFuc2xhdGlvbnNBUEkiLCJUcmFuc2xhdGlvbnMiLCJBdWRpbyIsImNvbnN0cnVjdG9yIiwiYXJndW1lbnRzIiwidHJhbnNjcmlwdGlvbnMiLCJfY2xpZW50IiwidHJhbnNsYXRpb25zIiwic3BlZWNoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/resources/audio/audio.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/resources/audio/speech.mjs":
/*!********************************************************!*\
  !*** ./node_modules/openai/resources/audio/speech.mjs ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Speech: () => (/* binding */ Speech)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/resource.mjs */ \"(rsc)/./node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _internal_headers_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../internal/headers.mjs */ \"(rsc)/./node_modules/openai/internal/headers.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\nclass Speech extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * Generates audio from the input text.\n     *\n     * @example\n     * ```ts\n     * const speech = await client.audio.speech.create({\n     *   input: 'input',\n     *   model: 'string',\n     *   voice: 'ash',\n     * });\n     *\n     * const content = await speech.blob();\n     * console.log(content);\n     * ```\n     */ create(body, options) {\n        return this._client.post(\"/audio/speech\", {\n            body,\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_1__.buildHeaders)([\n                {\n                    Accept: \"application/octet-stream\"\n                },\n                options?.headers\n            ]),\n            __binaryResponse: true\n        });\n    }\n} //# sourceMappingURL=speech.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9hdWRpby9zcGVlY2gubWpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLHNGQUFzRjtBQUNoQztBQUNJO0FBQ25ELE1BQU1FLGVBQWVGLDJEQUFXQTtJQUNuQzs7Ozs7Ozs7Ozs7Ozs7S0FjQyxHQUNERyxPQUFPQyxJQUFJLEVBQUVDLE9BQU8sRUFBRTtRQUNsQixPQUFPLElBQUksQ0FBQ0MsT0FBTyxDQUFDQyxJQUFJLENBQUMsaUJBQWlCO1lBQ3RDSDtZQUNBLEdBQUdDLE9BQU87WUFDVkcsU0FBU1AsbUVBQVlBLENBQUM7Z0JBQUM7b0JBQUVRLFFBQVE7Z0JBQTJCO2dCQUFHSixTQUFTRzthQUFRO1lBQ2hGRSxrQkFBa0I7UUFDdEI7SUFDSjtBQUNKLEVBQ0EsbUNBQW1DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3lzdGVtLXByb21wdC10b29sLXdlYi8uL25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2F1ZGlvL3NwZWVjaC5tanM/OWNiMCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlIGdlbmVyYXRlZCBmcm9tIG91ciBPcGVuQVBJIHNwZWMgYnkgU3RhaW5sZXNzLiBTZWUgQ09OVFJJQlVUSU5HLm1kIGZvciBkZXRhaWxzLlxuaW1wb3J0IHsgQVBJUmVzb3VyY2UgfSBmcm9tIFwiLi4vLi4vY29yZS9yZXNvdXJjZS5tanNcIjtcbmltcG9ydCB7IGJ1aWxkSGVhZGVycyB9IGZyb20gXCIuLi8uLi9pbnRlcm5hbC9oZWFkZXJzLm1qc1wiO1xuZXhwb3J0IGNsYXNzIFNwZWVjaCBleHRlbmRzIEFQSVJlc291cmNlIHtcbiAgICAvKipcbiAgICAgKiBHZW5lcmF0ZXMgYXVkaW8gZnJvbSB0aGUgaW5wdXQgdGV4dC5cbiAgICAgKlxuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgdHNcbiAgICAgKiBjb25zdCBzcGVlY2ggPSBhd2FpdCBjbGllbnQuYXVkaW8uc3BlZWNoLmNyZWF0ZSh7XG4gICAgICogICBpbnB1dDogJ2lucHV0JyxcbiAgICAgKiAgIG1vZGVsOiAnc3RyaW5nJyxcbiAgICAgKiAgIHZvaWNlOiAnYXNoJyxcbiAgICAgKiB9KTtcbiAgICAgKlxuICAgICAqIGNvbnN0IGNvbnRlbnQgPSBhd2FpdCBzcGVlY2guYmxvYigpO1xuICAgICAqIGNvbnNvbGUubG9nKGNvbnRlbnQpO1xuICAgICAqIGBgYFxuICAgICAqL1xuICAgIGNyZWF0ZShib2R5LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQucG9zdCgnL2F1ZGlvL3NwZWVjaCcsIHtcbiAgICAgICAgICAgIGJvZHksXG4gICAgICAgICAgICAuLi5vcHRpb25zLFxuICAgICAgICAgICAgaGVhZGVyczogYnVpbGRIZWFkZXJzKFt7IEFjY2VwdDogJ2FwcGxpY2F0aW9uL29jdGV0LXN0cmVhbScgfSwgb3B0aW9ucz8uaGVhZGVyc10pLFxuICAgICAgICAgICAgX19iaW5hcnlSZXNwb25zZTogdHJ1ZSxcbiAgICAgICAgfSk7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3BlZWNoLm1qcy5tYXAiXSwibmFtZXMiOlsiQVBJUmVzb3VyY2UiLCJidWlsZEhlYWRlcnMiLCJTcGVlY2giLCJjcmVhdGUiLCJib2R5Iiwib3B0aW9ucyIsIl9jbGllbnQiLCJwb3N0IiwiaGVhZGVycyIsIkFjY2VwdCIsIl9fYmluYXJ5UmVzcG9uc2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/resources/audio/speech.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/resources/audio/transcriptions.mjs":
/*!****************************************************************!*\
  !*** ./node_modules/openai/resources/audio/transcriptions.mjs ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Transcriptions: () => (/* binding */ Transcriptions)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/resource.mjs */ \"(rsc)/./node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _internal_uploads_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../internal/uploads.mjs */ \"(rsc)/./node_modules/openai/internal/uploads.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\nclass Transcriptions extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    create(body, options) {\n        return this._client.post(\"/audio/transcriptions\", (0,_internal_uploads_mjs__WEBPACK_IMPORTED_MODULE_1__.multipartFormRequestOptions)({\n            body,\n            ...options,\n            stream: body.stream ?? false,\n            __metadata: {\n                model: body.model\n            }\n        }, this._client));\n    }\n} //# sourceMappingURL=transcriptions.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9hdWRpby90cmFuc2NyaXB0aW9ucy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsc0ZBQXNGO0FBQ2hDO0FBQ21CO0FBQ2xFLE1BQU1FLHVCQUF1QkYsMkRBQVdBO0lBQzNDRyxPQUFPQyxJQUFJLEVBQUVDLE9BQU8sRUFBRTtRQUNsQixPQUFPLElBQUksQ0FBQ0MsT0FBTyxDQUFDQyxJQUFJLENBQUMseUJBQXlCTixrRkFBMkJBLENBQUM7WUFDMUVHO1lBQ0EsR0FBR0MsT0FBTztZQUNWRyxRQUFRSixLQUFLSSxNQUFNLElBQUk7WUFDdkJDLFlBQVk7Z0JBQUVDLE9BQU9OLEtBQUtNLEtBQUs7WUFBQztRQUNwQyxHQUFHLElBQUksQ0FBQ0osT0FBTztJQUNuQjtBQUNKLEVBQ0EsMkNBQTJDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3lzdGVtLXByb21wdC10b29sLXdlYi8uL25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2F1ZGlvL3RyYW5zY3JpcHRpb25zLm1qcz81ZmM5Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG5pbXBvcnQgeyBBUElSZXNvdXJjZSB9IGZyb20gXCIuLi8uLi9jb3JlL3Jlc291cmNlLm1qc1wiO1xuaW1wb3J0IHsgbXVsdGlwYXJ0Rm9ybVJlcXVlc3RPcHRpb25zIH0gZnJvbSBcIi4uLy4uL2ludGVybmFsL3VwbG9hZHMubWpzXCI7XG5leHBvcnQgY2xhc3MgVHJhbnNjcmlwdGlvbnMgZXh0ZW5kcyBBUElSZXNvdXJjZSB7XG4gICAgY3JlYXRlKGJvZHksIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5wb3N0KCcvYXVkaW8vdHJhbnNjcmlwdGlvbnMnLCBtdWx0aXBhcnRGb3JtUmVxdWVzdE9wdGlvbnMoe1xuICAgICAgICAgICAgYm9keSxcbiAgICAgICAgICAgIC4uLm9wdGlvbnMsXG4gICAgICAgICAgICBzdHJlYW06IGJvZHkuc3RyZWFtID8/IGZhbHNlLFxuICAgICAgICAgICAgX19tZXRhZGF0YTogeyBtb2RlbDogYm9keS5tb2RlbCB9LFxuICAgICAgICB9LCB0aGlzLl9jbGllbnQpKTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD10cmFuc2NyaXB0aW9ucy5tanMubWFwIl0sIm5hbWVzIjpbIkFQSVJlc291cmNlIiwibXVsdGlwYXJ0Rm9ybVJlcXVlc3RPcHRpb25zIiwiVHJhbnNjcmlwdGlvbnMiLCJjcmVhdGUiLCJib2R5Iiwib3B0aW9ucyIsIl9jbGllbnQiLCJwb3N0Iiwic3RyZWFtIiwiX19tZXRhZGF0YSIsIm1vZGVsIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/resources/audio/transcriptions.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/resources/audio/translations.mjs":
/*!**************************************************************!*\
  !*** ./node_modules/openai/resources/audio/translations.mjs ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Translations: () => (/* binding */ Translations)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/resource.mjs */ \"(rsc)/./node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _internal_uploads_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../internal/uploads.mjs */ \"(rsc)/./node_modules/openai/internal/uploads.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\nclass Translations extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    create(body, options) {\n        return this._client.post(\"/audio/translations\", (0,_internal_uploads_mjs__WEBPACK_IMPORTED_MODULE_1__.multipartFormRequestOptions)({\n            body,\n            ...options,\n            __metadata: {\n                model: body.model\n            }\n        }, this._client));\n    }\n} //# sourceMappingURL=translations.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9hdWRpby90cmFuc2xhdGlvbnMubWpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLHNGQUFzRjtBQUNoQztBQUNtQjtBQUNsRSxNQUFNRSxxQkFBcUJGLDJEQUFXQTtJQUN6Q0csT0FBT0MsSUFBSSxFQUFFQyxPQUFPLEVBQUU7UUFDbEIsT0FBTyxJQUFJLENBQUNDLE9BQU8sQ0FBQ0MsSUFBSSxDQUFDLHVCQUF1Qk4sa0ZBQTJCQSxDQUFDO1lBQUVHO1lBQU0sR0FBR0MsT0FBTztZQUFFRyxZQUFZO2dCQUFFQyxPQUFPTCxLQUFLSyxLQUFLO1lBQUM7UUFBRSxHQUFHLElBQUksQ0FBQ0gsT0FBTztJQUNySjtBQUNKLEVBQ0EseUNBQXlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3lzdGVtLXByb21wdC10b29sLXdlYi8uL25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2F1ZGlvL3RyYW5zbGF0aW9ucy5tanM/NGMxZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlIGdlbmVyYXRlZCBmcm9tIG91ciBPcGVuQVBJIHNwZWMgYnkgU3RhaW5sZXNzLiBTZWUgQ09OVFJJQlVUSU5HLm1kIGZvciBkZXRhaWxzLlxuaW1wb3J0IHsgQVBJUmVzb3VyY2UgfSBmcm9tIFwiLi4vLi4vY29yZS9yZXNvdXJjZS5tanNcIjtcbmltcG9ydCB7IG11bHRpcGFydEZvcm1SZXF1ZXN0T3B0aW9ucyB9IGZyb20gXCIuLi8uLi9pbnRlcm5hbC91cGxvYWRzLm1qc1wiO1xuZXhwb3J0IGNsYXNzIFRyYW5zbGF0aW9ucyBleHRlbmRzIEFQSVJlc291cmNlIHtcbiAgICBjcmVhdGUoYm9keSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LnBvc3QoJy9hdWRpby90cmFuc2xhdGlvbnMnLCBtdWx0aXBhcnRGb3JtUmVxdWVzdE9wdGlvbnMoeyBib2R5LCAuLi5vcHRpb25zLCBfX21ldGFkYXRhOiB7IG1vZGVsOiBib2R5Lm1vZGVsIH0gfSwgdGhpcy5fY2xpZW50KSk7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHJhbnNsYXRpb25zLm1qcy5tYXAiXSwibmFtZXMiOlsiQVBJUmVzb3VyY2UiLCJtdWx0aXBhcnRGb3JtUmVxdWVzdE9wdGlvbnMiLCJUcmFuc2xhdGlvbnMiLCJjcmVhdGUiLCJib2R5Iiwib3B0aW9ucyIsIl9jbGllbnQiLCJwb3N0IiwiX19tZXRhZGF0YSIsIm1vZGVsIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/resources/audio/translations.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/resources/batches.mjs":
/*!***************************************************!*\
  !*** ./node_modules/openai/resources/batches.mjs ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Batches: () => (/* binding */ Batches)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/resource.mjs */ \"(rsc)/./node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/pagination.mjs */ \"(rsc)/./node_modules/openai/core/pagination.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../internal/utils/path.mjs */ \"(rsc)/./node_modules/openai/internal/utils/path.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\nclass Batches extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * Creates and executes a batch from an uploaded file of requests\n     */ create(body, options) {\n        return this._client.post(\"/batches\", {\n            body,\n            ...options\n        });\n    }\n    /**\n     * Retrieves a batch.\n     */ retrieve(batchID, options) {\n        return this._client.get(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__.path`/batches/${batchID}`, options);\n    }\n    /**\n     * List your organization's batches.\n     */ list(query = {}, options) {\n        return this._client.getAPIList(\"/batches\", _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__.CursorPage, {\n            query,\n            ...options\n        });\n    }\n    /**\n     * Cancels an in-progress batch. The batch will be in status `cancelling` for up to\n     * 10 minutes, before changing to `cancelled`, where it will have partial results\n     * (if any) available in the output file.\n     */ cancel(batchID, options) {\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__.path`/batches/${batchID}/cancel`, options);\n    }\n} //# sourceMappingURL=batches.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9iYXRjaGVzLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUEsc0ZBQXNGO0FBQ25DO0FBQ0M7QUFDRjtBQUMzQyxNQUFNRyxnQkFBZ0JILDJEQUFXQTtJQUNwQzs7S0FFQyxHQUNESSxPQUFPQyxJQUFJLEVBQUVDLE9BQU8sRUFBRTtRQUNsQixPQUFPLElBQUksQ0FBQ0MsT0FBTyxDQUFDQyxJQUFJLENBQUMsWUFBWTtZQUFFSDtZQUFNLEdBQUdDLE9BQU87UUFBQztJQUM1RDtJQUNBOztLQUVDLEdBQ0RHLFNBQVNDLE9BQU8sRUFBRUosT0FBTyxFQUFFO1FBQ3ZCLE9BQU8sSUFBSSxDQUFDQyxPQUFPLENBQUNJLEdBQUcsQ0FBQ1QsMERBQUssQ0FBQyxTQUFTLEVBQUVRLFFBQVEsQ0FBQyxFQUFFSjtJQUN4RDtJQUNBOztLQUVDLEdBQ0RNLEtBQUtDLFFBQVEsQ0FBQyxDQUFDLEVBQUVQLE9BQU8sRUFBRTtRQUN0QixPQUFPLElBQUksQ0FBQ0MsT0FBTyxDQUFDTyxVQUFVLENBQUMsWUFBYWIsNERBQVVBLEVBQUc7WUFBRVk7WUFBTyxHQUFHUCxPQUFPO1FBQUM7SUFDakY7SUFDQTs7OztLQUlDLEdBQ0RTLE9BQU9MLE9BQU8sRUFBRUosT0FBTyxFQUFFO1FBQ3JCLE9BQU8sSUFBSSxDQUFDQyxPQUFPLENBQUNDLElBQUksQ0FBQ04sMERBQUssQ0FBQyxTQUFTLEVBQUVRLFFBQVEsT0FBTyxDQUFDLEVBQUVKO0lBQ2hFO0FBQ0osRUFDQSxvQ0FBb0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zeXN0ZW0tcHJvbXB0LXRvb2wtd2ViLy4vbm9kZV9tb2R1bGVzL29wZW5haS9yZXNvdXJjZXMvYmF0Y2hlcy5tanM/YzQ5NiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlIGdlbmVyYXRlZCBmcm9tIG91ciBPcGVuQVBJIHNwZWMgYnkgU3RhaW5sZXNzLiBTZWUgQ09OVFJJQlVUSU5HLm1kIGZvciBkZXRhaWxzLlxuaW1wb3J0IHsgQVBJUmVzb3VyY2UgfSBmcm9tIFwiLi4vY29yZS9yZXNvdXJjZS5tanNcIjtcbmltcG9ydCB7IEN1cnNvclBhZ2UgfSBmcm9tIFwiLi4vY29yZS9wYWdpbmF0aW9uLm1qc1wiO1xuaW1wb3J0IHsgcGF0aCB9IGZyb20gXCIuLi9pbnRlcm5hbC91dGlscy9wYXRoLm1qc1wiO1xuZXhwb3J0IGNsYXNzIEJhdGNoZXMgZXh0ZW5kcyBBUElSZXNvdXJjZSB7XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhbmQgZXhlY3V0ZXMgYSBiYXRjaCBmcm9tIGFuIHVwbG9hZGVkIGZpbGUgb2YgcmVxdWVzdHNcbiAgICAgKi9cbiAgICBjcmVhdGUoYm9keSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LnBvc3QoJy9iYXRjaGVzJywgeyBib2R5LCAuLi5vcHRpb25zIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXRyaWV2ZXMgYSBiYXRjaC5cbiAgICAgKi9cbiAgICByZXRyaWV2ZShiYXRjaElELCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZ2V0KHBhdGggYC9iYXRjaGVzLyR7YmF0Y2hJRH1gLCBvcHRpb25zKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogTGlzdCB5b3VyIG9yZ2FuaXphdGlvbidzIGJhdGNoZXMuXG4gICAgICovXG4gICAgbGlzdChxdWVyeSA9IHt9LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZ2V0QVBJTGlzdCgnL2JhdGNoZXMnLCAoQ3Vyc29yUGFnZSksIHsgcXVlcnksIC4uLm9wdGlvbnMgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENhbmNlbHMgYW4gaW4tcHJvZ3Jlc3MgYmF0Y2guIFRoZSBiYXRjaCB3aWxsIGJlIGluIHN0YXR1cyBgY2FuY2VsbGluZ2AgZm9yIHVwIHRvXG4gICAgICogMTAgbWludXRlcywgYmVmb3JlIGNoYW5naW5nIHRvIGBjYW5jZWxsZWRgLCB3aGVyZSBpdCB3aWxsIGhhdmUgcGFydGlhbCByZXN1bHRzXG4gICAgICogKGlmIGFueSkgYXZhaWxhYmxlIGluIHRoZSBvdXRwdXQgZmlsZS5cbiAgICAgKi9cbiAgICBjYW5jZWwoYmF0Y2hJRCwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LnBvc3QocGF0aCBgL2JhdGNoZXMvJHtiYXRjaElEfS9jYW5jZWxgLCBvcHRpb25zKTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1iYXRjaGVzLm1qcy5tYXAiXSwibmFtZXMiOlsiQVBJUmVzb3VyY2UiLCJDdXJzb3JQYWdlIiwicGF0aCIsIkJhdGNoZXMiLCJjcmVhdGUiLCJib2R5Iiwib3B0aW9ucyIsIl9jbGllbnQiLCJwb3N0IiwicmV0cmlldmUiLCJiYXRjaElEIiwiZ2V0IiwibGlzdCIsInF1ZXJ5IiwiZ2V0QVBJTGlzdCIsImNhbmNlbCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/resources/batches.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/resources/beta/assistants.mjs":
/*!***********************************************************!*\
  !*** ./node_modules/openai/resources/beta/assistants.mjs ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Assistants: () => (/* binding */ Assistants)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/resource.mjs */ \"(rsc)/./node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/pagination.mjs */ \"(rsc)/./node_modules/openai/core/pagination.mjs\");\n/* harmony import */ var _internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../internal/headers.mjs */ \"(rsc)/./node_modules/openai/internal/headers.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../internal/utils/path.mjs */ \"(rsc)/./node_modules/openai/internal/utils/path.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\n\nclass Assistants extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * Create an assistant with a model and instructions.\n     *\n     * @example\n     * ```ts\n     * const assistant = await client.beta.assistants.create({\n     *   model: 'gpt-4o',\n     * });\n     * ```\n     */ create(body, options) {\n        return this._client.post(\"/assistants\", {\n            body,\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Retrieves an assistant.\n     *\n     * @example\n     * ```ts\n     * const assistant = await client.beta.assistants.retrieve(\n     *   'assistant_id',\n     * );\n     * ```\n     */ retrieve(assistantID, options) {\n        return this._client.get(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__.path`/assistants/${assistantID}`, {\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Modifies an assistant.\n     *\n     * @example\n     * ```ts\n     * const assistant = await client.beta.assistants.update(\n     *   'assistant_id',\n     * );\n     * ```\n     */ update(assistantID, body, options) {\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__.path`/assistants/${assistantID}`, {\n            body,\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Returns a list of assistants.\n     *\n     * @example\n     * ```ts\n     * // Automatically fetches more pages as needed.\n     * for await (const assistant of client.beta.assistants.list()) {\n     *   // ...\n     * }\n     * ```\n     */ list(query = {}, options) {\n        return this._client.getAPIList(\"/assistants\", _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__.CursorPage, {\n            query,\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Delete an assistant.\n     *\n     * @example\n     * ```ts\n     * const assistantDeleted =\n     *   await client.beta.assistants.delete('assistant_id');\n     * ```\n     */ delete(assistantID, options) {\n        return this._client.delete(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__.path`/assistants/${assistantID}`, {\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n} //# sourceMappingURL=assistants.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9iZXRhL2Fzc2lzdGFudHMubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUEsc0ZBQXNGO0FBQ2hDO0FBQ0M7QUFDRztBQUNMO0FBQzlDLE1BQU1JLG1CQUFtQkosMkRBQVdBO0lBQ3ZDOzs7Ozs7Ozs7S0FTQyxHQUNESyxPQUFPQyxJQUFJLEVBQUVDLE9BQU8sRUFBRTtRQUNsQixPQUFPLElBQUksQ0FBQ0MsT0FBTyxDQUFDQyxJQUFJLENBQUMsZUFBZTtZQUNwQ0g7WUFDQSxHQUFHQyxPQUFPO1lBQ1ZHLFNBQVNSLG1FQUFZQSxDQUFDO2dCQUFDO29CQUFFLGVBQWU7Z0JBQWdCO2dCQUFHSyxTQUFTRzthQUFRO1FBQ2hGO0lBQ0o7SUFDQTs7Ozs7Ozs7O0tBU0MsR0FDREMsU0FBU0MsV0FBVyxFQUFFTCxPQUFPLEVBQUU7UUFDM0IsT0FBTyxJQUFJLENBQUNDLE9BQU8sQ0FBQ0ssR0FBRyxDQUFDViwwREFBSyxDQUFDLFlBQVksRUFBRVMsWUFBWSxDQUFDLEVBQUU7WUFDdkQsR0FBR0wsT0FBTztZQUNWRyxTQUFTUixtRUFBWUEsQ0FBQztnQkFBQztvQkFBRSxlQUFlO2dCQUFnQjtnQkFBR0ssU0FBU0c7YUFBUTtRQUNoRjtJQUNKO0lBQ0E7Ozs7Ozs7OztLQVNDLEdBQ0RJLE9BQU9GLFdBQVcsRUFBRU4sSUFBSSxFQUFFQyxPQUFPLEVBQUU7UUFDL0IsT0FBTyxJQUFJLENBQUNDLE9BQU8sQ0FBQ0MsSUFBSSxDQUFDTiwwREFBSyxDQUFDLFlBQVksRUFBRVMsWUFBWSxDQUFDLEVBQUU7WUFDeEROO1lBQ0EsR0FBR0MsT0FBTztZQUNWRyxTQUFTUixtRUFBWUEsQ0FBQztnQkFBQztvQkFBRSxlQUFlO2dCQUFnQjtnQkFBR0ssU0FBU0c7YUFBUTtRQUNoRjtJQUNKO0lBQ0E7Ozs7Ozs7Ozs7S0FVQyxHQUNESyxLQUFLQyxRQUFRLENBQUMsQ0FBQyxFQUFFVCxPQUFPLEVBQUU7UUFDdEIsT0FBTyxJQUFJLENBQUNDLE9BQU8sQ0FBQ1MsVUFBVSxDQUFDLGVBQWdCaEIsNERBQVVBLEVBQUc7WUFDeERlO1lBQ0EsR0FBR1QsT0FBTztZQUNWRyxTQUFTUixtRUFBWUEsQ0FBQztnQkFBQztvQkFBRSxlQUFlO2dCQUFnQjtnQkFBR0ssU0FBU0c7YUFBUTtRQUNoRjtJQUNKO0lBQ0E7Ozs7Ozs7O0tBUUMsR0FDRFEsT0FBT04sV0FBVyxFQUFFTCxPQUFPLEVBQUU7UUFDekIsT0FBTyxJQUFJLENBQUNDLE9BQU8sQ0FBQ1UsTUFBTSxDQUFDZiwwREFBSyxDQUFDLFlBQVksRUFBRVMsWUFBWSxDQUFDLEVBQUU7WUFDMUQsR0FBR0wsT0FBTztZQUNWRyxTQUFTUixtRUFBWUEsQ0FBQztnQkFBQztvQkFBRSxlQUFlO2dCQUFnQjtnQkFBR0ssU0FBU0c7YUFBUTtRQUNoRjtJQUNKO0FBQ0osRUFDQSx1Q0FBdUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zeXN0ZW0tcHJvbXB0LXRvb2wtd2ViLy4vbm9kZV9tb2R1bGVzL29wZW5haS9yZXNvdXJjZXMvYmV0YS9hc3Npc3RhbnRzLm1qcz80NTNjIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG5pbXBvcnQgeyBBUElSZXNvdXJjZSB9IGZyb20gXCIuLi8uLi9jb3JlL3Jlc291cmNlLm1qc1wiO1xuaW1wb3J0IHsgQ3Vyc29yUGFnZSB9IGZyb20gXCIuLi8uLi9jb3JlL3BhZ2luYXRpb24ubWpzXCI7XG5pbXBvcnQgeyBidWlsZEhlYWRlcnMgfSBmcm9tIFwiLi4vLi4vaW50ZXJuYWwvaGVhZGVycy5tanNcIjtcbmltcG9ydCB7IHBhdGggfSBmcm9tIFwiLi4vLi4vaW50ZXJuYWwvdXRpbHMvcGF0aC5tanNcIjtcbmV4cG9ydCBjbGFzcyBBc3Npc3RhbnRzIGV4dGVuZHMgQVBJUmVzb3VyY2Uge1xuICAgIC8qKlxuICAgICAqIENyZWF0ZSBhbiBhc3Npc3RhbnQgd2l0aCBhIG1vZGVsIGFuZCBpbnN0cnVjdGlvbnMuXG4gICAgICpcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYHRzXG4gICAgICogY29uc3QgYXNzaXN0YW50ID0gYXdhaXQgY2xpZW50LmJldGEuYXNzaXN0YW50cy5jcmVhdGUoe1xuICAgICAqICAgbW9kZWw6ICdncHQtNG8nLFxuICAgICAqIH0pO1xuICAgICAqIGBgYFxuICAgICAqL1xuICAgIGNyZWF0ZShib2R5LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQucG9zdCgnL2Fzc2lzdGFudHMnLCB7XG4gICAgICAgICAgICBib2R5LFxuICAgICAgICAgICAgLi4ub3B0aW9ucyxcbiAgICAgICAgICAgIGhlYWRlcnM6IGJ1aWxkSGVhZGVycyhbeyAnT3BlbkFJLUJldGEnOiAnYXNzaXN0YW50cz12MicgfSwgb3B0aW9ucz8uaGVhZGVyc10pLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0cmlldmVzIGFuIGFzc2lzdGFudC5cbiAgICAgKlxuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgdHNcbiAgICAgKiBjb25zdCBhc3Npc3RhbnQgPSBhd2FpdCBjbGllbnQuYmV0YS5hc3Npc3RhbnRzLnJldHJpZXZlKFxuICAgICAqICAgJ2Fzc2lzdGFudF9pZCcsXG4gICAgICogKTtcbiAgICAgKiBgYGBcbiAgICAgKi9cbiAgICByZXRyaWV2ZShhc3Npc3RhbnRJRCwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmdldChwYXRoIGAvYXNzaXN0YW50cy8ke2Fzc2lzdGFudElEfWAsIHtcbiAgICAgICAgICAgIC4uLm9wdGlvbnMsXG4gICAgICAgICAgICBoZWFkZXJzOiBidWlsZEhlYWRlcnMoW3sgJ09wZW5BSS1CZXRhJzogJ2Fzc2lzdGFudHM9djInIH0sIG9wdGlvbnM/LmhlYWRlcnNdKSxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIE1vZGlmaWVzIGFuIGFzc2lzdGFudC5cbiAgICAgKlxuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgdHNcbiAgICAgKiBjb25zdCBhc3Npc3RhbnQgPSBhd2FpdCBjbGllbnQuYmV0YS5hc3Npc3RhbnRzLnVwZGF0ZShcbiAgICAgKiAgICdhc3Npc3RhbnRfaWQnLFxuICAgICAqICk7XG4gICAgICogYGBgXG4gICAgICovXG4gICAgdXBkYXRlKGFzc2lzdGFudElELCBib2R5LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQucG9zdChwYXRoIGAvYXNzaXN0YW50cy8ke2Fzc2lzdGFudElEfWAsIHtcbiAgICAgICAgICAgIGJvZHksXG4gICAgICAgICAgICAuLi5vcHRpb25zLFxuICAgICAgICAgICAgaGVhZGVyczogYnVpbGRIZWFkZXJzKFt7ICdPcGVuQUktQmV0YSc6ICdhc3Npc3RhbnRzPXYyJyB9LCBvcHRpb25zPy5oZWFkZXJzXSksXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIGEgbGlzdCBvZiBhc3Npc3RhbnRzLlxuICAgICAqXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBgYGB0c1xuICAgICAqIC8vIEF1dG9tYXRpY2FsbHkgZmV0Y2hlcyBtb3JlIHBhZ2VzIGFzIG5lZWRlZC5cbiAgICAgKiBmb3IgYXdhaXQgKGNvbnN0IGFzc2lzdGFudCBvZiBjbGllbnQuYmV0YS5hc3Npc3RhbnRzLmxpc3QoKSkge1xuICAgICAqICAgLy8gLi4uXG4gICAgICogfVxuICAgICAqIGBgYFxuICAgICAqL1xuICAgIGxpc3QocXVlcnkgPSB7fSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmdldEFQSUxpc3QoJy9hc3Npc3RhbnRzJywgKEN1cnNvclBhZ2UpLCB7XG4gICAgICAgICAgICBxdWVyeSxcbiAgICAgICAgICAgIC4uLm9wdGlvbnMsXG4gICAgICAgICAgICBoZWFkZXJzOiBidWlsZEhlYWRlcnMoW3sgJ09wZW5BSS1CZXRhJzogJ2Fzc2lzdGFudHM9djInIH0sIG9wdGlvbnM/LmhlYWRlcnNdKSxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIERlbGV0ZSBhbiBhc3Npc3RhbnQuXG4gICAgICpcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYHRzXG4gICAgICogY29uc3QgYXNzaXN0YW50RGVsZXRlZCA9XG4gICAgICogICBhd2FpdCBjbGllbnQuYmV0YS5hc3Npc3RhbnRzLmRlbGV0ZSgnYXNzaXN0YW50X2lkJyk7XG4gICAgICogYGBgXG4gICAgICovXG4gICAgZGVsZXRlKGFzc2lzdGFudElELCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZGVsZXRlKHBhdGggYC9hc3Npc3RhbnRzLyR7YXNzaXN0YW50SUR9YCwge1xuICAgICAgICAgICAgLi4ub3B0aW9ucyxcbiAgICAgICAgICAgIGhlYWRlcnM6IGJ1aWxkSGVhZGVycyhbeyAnT3BlbkFJLUJldGEnOiAnYXNzaXN0YW50cz12MicgfSwgb3B0aW9ucz8uaGVhZGVyc10pLFxuICAgICAgICB9KTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hc3Npc3RhbnRzLm1qcy5tYXAiXSwibmFtZXMiOlsiQVBJUmVzb3VyY2UiLCJDdXJzb3JQYWdlIiwiYnVpbGRIZWFkZXJzIiwicGF0aCIsIkFzc2lzdGFudHMiLCJjcmVhdGUiLCJib2R5Iiwib3B0aW9ucyIsIl9jbGllbnQiLCJwb3N0IiwiaGVhZGVycyIsInJldHJpZXZlIiwiYXNzaXN0YW50SUQiLCJnZXQiLCJ1cGRhdGUiLCJsaXN0IiwicXVlcnkiLCJnZXRBUElMaXN0IiwiZGVsZXRlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/resources/beta/assistants.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/resources/beta/beta.mjs":
/*!*****************************************************!*\
  !*** ./node_modules/openai/resources/beta/beta.mjs ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Beta: () => (/* binding */ Beta)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/resource.mjs */ \"(rsc)/./node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _assistants_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./assistants.mjs */ \"(rsc)/./node_modules/openai/resources/beta/assistants.mjs\");\n/* harmony import */ var _realtime_realtime_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./realtime/realtime.mjs */ \"(rsc)/./node_modules/openai/resources/beta/realtime/realtime.mjs\");\n/* harmony import */ var _threads_threads_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./threads/threads.mjs */ \"(rsc)/./node_modules/openai/resources/beta/threads/threads.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\n\n\n\n\nclass Beta extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    constructor(){\n        super(...arguments);\n        this.realtime = new _realtime_realtime_mjs__WEBPACK_IMPORTED_MODULE_2__.Realtime(this._client);\n        this.assistants = new _assistants_mjs__WEBPACK_IMPORTED_MODULE_1__.Assistants(this._client);\n        this.threads = new _threads_threads_mjs__WEBPACK_IMPORTED_MODULE_3__.Threads(this._client);\n    }\n}\nBeta.Realtime = _realtime_realtime_mjs__WEBPACK_IMPORTED_MODULE_2__.Realtime;\nBeta.Assistants = _assistants_mjs__WEBPACK_IMPORTED_MODULE_1__.Assistants;\nBeta.Threads = _threads_threads_mjs__WEBPACK_IMPORTED_MODULE_3__.Threads; //# sourceMappingURL=beta.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9iZXRhL2JldGEubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUEsc0ZBQXNGO0FBQ2hDO0FBQ0o7QUFDSDtBQUNRO0FBQ0g7QUFDQTtBQUNIO0FBQzFDLE1BQU1PLGFBQWFQLDJEQUFXQTtJQUNqQ1EsYUFBYztRQUNWLEtBQUssSUFBSUM7UUFDVCxJQUFJLENBQUNDLFFBQVEsR0FBRyxJQUFJUCw0REFBb0IsQ0FBQyxJQUFJLENBQUNRLE9BQU87UUFDckQsSUFBSSxDQUFDQyxVQUFVLEdBQUcsSUFBSVgsdURBQXdCLENBQUMsSUFBSSxDQUFDVSxPQUFPO1FBQzNELElBQUksQ0FBQ0UsT0FBTyxHQUFHLElBQUlSLHlEQUFrQixDQUFDLElBQUksQ0FBQ00sT0FBTztJQUN0RDtBQUNKO0FBQ0FKLEtBQUtILFFBQVEsR0FBR0EsNERBQVFBO0FBQ3hCRyxLQUFLTCxVQUFVLEdBQUdBLHVEQUFVQTtBQUM1QkssS0FBS0QsT0FBTyxHQUFHQSx5REFBT0EsRUFDdEIsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3lzdGVtLXByb21wdC10b29sLXdlYi8uL25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2JldGEvYmV0YS5tanM/ZjkyNSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlIGdlbmVyYXRlZCBmcm9tIG91ciBPcGVuQVBJIHNwZWMgYnkgU3RhaW5sZXNzLiBTZWUgQ09OVFJJQlVUSU5HLm1kIGZvciBkZXRhaWxzLlxuaW1wb3J0IHsgQVBJUmVzb3VyY2UgfSBmcm9tIFwiLi4vLi4vY29yZS9yZXNvdXJjZS5tanNcIjtcbmltcG9ydCAqIGFzIEFzc2lzdGFudHNBUEkgZnJvbSBcIi4vYXNzaXN0YW50cy5tanNcIjtcbmltcG9ydCB7IEFzc2lzdGFudHMsIH0gZnJvbSBcIi4vYXNzaXN0YW50cy5tanNcIjtcbmltcG9ydCAqIGFzIFJlYWx0aW1lQVBJIGZyb20gXCIuL3JlYWx0aW1lL3JlYWx0aW1lLm1qc1wiO1xuaW1wb3J0IHsgUmVhbHRpbWUsIH0gZnJvbSBcIi4vcmVhbHRpbWUvcmVhbHRpbWUubWpzXCI7XG5pbXBvcnQgKiBhcyBUaHJlYWRzQVBJIGZyb20gXCIuL3RocmVhZHMvdGhyZWFkcy5tanNcIjtcbmltcG9ydCB7IFRocmVhZHMsIH0gZnJvbSBcIi4vdGhyZWFkcy90aHJlYWRzLm1qc1wiO1xuZXhwb3J0IGNsYXNzIEJldGEgZXh0ZW5kcyBBUElSZXNvdXJjZSB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XG4gICAgICAgIHRoaXMucmVhbHRpbWUgPSBuZXcgUmVhbHRpbWVBUEkuUmVhbHRpbWUodGhpcy5fY2xpZW50KTtcbiAgICAgICAgdGhpcy5hc3Npc3RhbnRzID0gbmV3IEFzc2lzdGFudHNBUEkuQXNzaXN0YW50cyh0aGlzLl9jbGllbnQpO1xuICAgICAgICB0aGlzLnRocmVhZHMgPSBuZXcgVGhyZWFkc0FQSS5UaHJlYWRzKHRoaXMuX2NsaWVudCk7XG4gICAgfVxufVxuQmV0YS5SZWFsdGltZSA9IFJlYWx0aW1lO1xuQmV0YS5Bc3Npc3RhbnRzID0gQXNzaXN0YW50cztcbkJldGEuVGhyZWFkcyA9IFRocmVhZHM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1iZXRhLm1qcy5tYXAiXSwibmFtZXMiOlsiQVBJUmVzb3VyY2UiLCJBc3Npc3RhbnRzQVBJIiwiQXNzaXN0YW50cyIsIlJlYWx0aW1lQVBJIiwiUmVhbHRpbWUiLCJUaHJlYWRzQVBJIiwiVGhyZWFkcyIsIkJldGEiLCJjb25zdHJ1Y3RvciIsImFyZ3VtZW50cyIsInJlYWx0aW1lIiwiX2NsaWVudCIsImFzc2lzdGFudHMiLCJ0aHJlYWRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/resources/beta/beta.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/resources/beta/realtime/realtime.mjs":
/*!******************************************************************!*\
  !*** ./node_modules/openai/resources/beta/realtime/realtime.mjs ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Realtime: () => (/* binding */ Realtime)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/resource.mjs */ \"(rsc)/./node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _sessions_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sessions.mjs */ \"(rsc)/./node_modules/openai/resources/beta/realtime/sessions.mjs\");\n/* harmony import */ var _transcription_sessions_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./transcription-sessions.mjs */ \"(rsc)/./node_modules/openai/resources/beta/realtime/transcription-sessions.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\n\n\n/**\n * @deprecated Realtime has now launched and is generally available. The old beta API is now deprecated.\n */ class Realtime extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    constructor(){\n        super(...arguments);\n        this.sessions = new _sessions_mjs__WEBPACK_IMPORTED_MODULE_1__.Sessions(this._client);\n        this.transcriptionSessions = new _transcription_sessions_mjs__WEBPACK_IMPORTED_MODULE_2__.TranscriptionSessions(this._client);\n    }\n}\nRealtime.Sessions = _sessions_mjs__WEBPACK_IMPORTED_MODULE_1__.Sessions;\nRealtime.TranscriptionSessions = _transcription_sessions_mjs__WEBPACK_IMPORTED_MODULE_2__.TranscriptionSessions; //# sourceMappingURL=realtime.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9iZXRhL3JlYWx0aW1lL3JlYWx0aW1lLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUEsc0ZBQXNGO0FBQzdCO0FBQ1g7QUFDSDtBQUM4QjtBQUNIO0FBQ3RFOztDQUVDLEdBQ00sTUFBTUssaUJBQWlCTCwyREFBV0E7SUFDckNNLGFBQWM7UUFDVixLQUFLLElBQUlDO1FBQ1QsSUFBSSxDQUFDQyxRQUFRLEdBQUcsSUFBSVAsbURBQW9CLENBQUMsSUFBSSxDQUFDUSxPQUFPO1FBQ3JELElBQUksQ0FBQ0MscUJBQXFCLEdBQUcsSUFBSVAsOEVBQThDLENBQUMsSUFBSSxDQUFDTSxPQUFPO0lBQ2hHO0FBQ0o7QUFDQUosU0FBU0gsUUFBUSxHQUFHQSxtREFBUUE7QUFDNUJHLFNBQVNELHFCQUFxQixHQUFHQSw4RUFBcUJBLEVBQ3RELHFDQUFxQyIsInNvdXJjZXMiOlsid2VicGFjazovL3N5c3RlbS1wcm9tcHQtdG9vbC13ZWIvLi9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9iZXRhL3JlYWx0aW1lL3JlYWx0aW1lLm1qcz9iNWIzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG5pbXBvcnQgeyBBUElSZXNvdXJjZSB9IGZyb20gXCIuLi8uLi8uLi9jb3JlL3Jlc291cmNlLm1qc1wiO1xuaW1wb3J0ICogYXMgU2Vzc2lvbnNBUEkgZnJvbSBcIi4vc2Vzc2lvbnMubWpzXCI7XG5pbXBvcnQgeyBTZXNzaW9ucywgfSBmcm9tIFwiLi9zZXNzaW9ucy5tanNcIjtcbmltcG9ydCAqIGFzIFRyYW5zY3JpcHRpb25TZXNzaW9uc0FQSSBmcm9tIFwiLi90cmFuc2NyaXB0aW9uLXNlc3Npb25zLm1qc1wiO1xuaW1wb3J0IHsgVHJhbnNjcmlwdGlvblNlc3Npb25zLCB9IGZyb20gXCIuL3RyYW5zY3JpcHRpb24tc2Vzc2lvbnMubWpzXCI7XG4vKipcbiAqIEBkZXByZWNhdGVkIFJlYWx0aW1lIGhhcyBub3cgbGF1bmNoZWQgYW5kIGlzIGdlbmVyYWxseSBhdmFpbGFibGUuIFRoZSBvbGQgYmV0YSBBUEkgaXMgbm93IGRlcHJlY2F0ZWQuXG4gKi9cbmV4cG9ydCBjbGFzcyBSZWFsdGltZSBleHRlbmRzIEFQSVJlc291cmNlIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgdGhpcy5zZXNzaW9ucyA9IG5ldyBTZXNzaW9uc0FQSS5TZXNzaW9ucyh0aGlzLl9jbGllbnQpO1xuICAgICAgICB0aGlzLnRyYW5zY3JpcHRpb25TZXNzaW9ucyA9IG5ldyBUcmFuc2NyaXB0aW9uU2Vzc2lvbnNBUEkuVHJhbnNjcmlwdGlvblNlc3Npb25zKHRoaXMuX2NsaWVudCk7XG4gICAgfVxufVxuUmVhbHRpbWUuU2Vzc2lvbnMgPSBTZXNzaW9ucztcblJlYWx0aW1lLlRyYW5zY3JpcHRpb25TZXNzaW9ucyA9IFRyYW5zY3JpcHRpb25TZXNzaW9ucztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlYWx0aW1lLm1qcy5tYXAiXSwibmFtZXMiOlsiQVBJUmVzb3VyY2UiLCJTZXNzaW9uc0FQSSIsIlNlc3Npb25zIiwiVHJhbnNjcmlwdGlvblNlc3Npb25zQVBJIiwiVHJhbnNjcmlwdGlvblNlc3Npb25zIiwiUmVhbHRpbWUiLCJjb25zdHJ1Y3RvciIsImFyZ3VtZW50cyIsInNlc3Npb25zIiwiX2NsaWVudCIsInRyYW5zY3JpcHRpb25TZXNzaW9ucyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/resources/beta/realtime/realtime.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/resources/beta/realtime/sessions.mjs":
/*!******************************************************************!*\
  !*** ./node_modules/openai/resources/beta/realtime/sessions.mjs ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Sessions: () => (/* binding */ Sessions)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/resource.mjs */ \"(rsc)/./node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _internal_headers_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../internal/headers.mjs */ \"(rsc)/./node_modules/openai/internal/headers.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\nclass Sessions extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * Create an ephemeral API token for use in client-side applications with the\n     * Realtime API. Can be configured with the same session parameters as the\n     * `session.update` client event.\n     *\n     * It responds with a session object, plus a `client_secret` key which contains a\n     * usable ephemeral API token that can be used to authenticate browser clients for\n     * the Realtime API.\n     *\n     * @example\n     * ```ts\n     * const session =\n     *   await client.beta.realtime.sessions.create();\n     * ```\n     */ create(body, options) {\n        return this._client.post(\"/realtime/sessions\", {\n            body,\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_1__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n} //# sourceMappingURL=sessions.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9iZXRhL3JlYWx0aW1lL3Nlc3Npb25zLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxzRkFBc0Y7QUFDN0I7QUFDSTtBQUN0RCxNQUFNRSxpQkFBaUJGLDJEQUFXQTtJQUNyQzs7Ozs7Ozs7Ozs7Ozs7S0FjQyxHQUNERyxPQUFPQyxJQUFJLEVBQUVDLE9BQU8sRUFBRTtRQUNsQixPQUFPLElBQUksQ0FBQ0MsT0FBTyxDQUFDQyxJQUFJLENBQUMsc0JBQXNCO1lBQzNDSDtZQUNBLEdBQUdDLE9BQU87WUFDVkcsU0FBU1AsbUVBQVlBLENBQUM7Z0JBQUM7b0JBQUUsZUFBZTtnQkFBZ0I7Z0JBQUdJLFNBQVNHO2FBQVE7UUFDaEY7SUFDSjtBQUNKLEVBQ0EscUNBQXFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3lzdGVtLXByb21wdC10b29sLXdlYi8uL25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2JldGEvcmVhbHRpbWUvc2Vzc2lvbnMubWpzP2I1ZGMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZSBnZW5lcmF0ZWQgZnJvbSBvdXIgT3BlbkFQSSBzcGVjIGJ5IFN0YWlubGVzcy4gU2VlIENPTlRSSUJVVElORy5tZCBmb3IgZGV0YWlscy5cbmltcG9ydCB7IEFQSVJlc291cmNlIH0gZnJvbSBcIi4uLy4uLy4uL2NvcmUvcmVzb3VyY2UubWpzXCI7XG5pbXBvcnQgeyBidWlsZEhlYWRlcnMgfSBmcm9tIFwiLi4vLi4vLi4vaW50ZXJuYWwvaGVhZGVycy5tanNcIjtcbmV4cG9ydCBjbGFzcyBTZXNzaW9ucyBleHRlbmRzIEFQSVJlc291cmNlIHtcbiAgICAvKipcbiAgICAgKiBDcmVhdGUgYW4gZXBoZW1lcmFsIEFQSSB0b2tlbiBmb3IgdXNlIGluIGNsaWVudC1zaWRlIGFwcGxpY2F0aW9ucyB3aXRoIHRoZVxuICAgICAqIFJlYWx0aW1lIEFQSS4gQ2FuIGJlIGNvbmZpZ3VyZWQgd2l0aCB0aGUgc2FtZSBzZXNzaW9uIHBhcmFtZXRlcnMgYXMgdGhlXG4gICAgICogYHNlc3Npb24udXBkYXRlYCBjbGllbnQgZXZlbnQuXG4gICAgICpcbiAgICAgKiBJdCByZXNwb25kcyB3aXRoIGEgc2Vzc2lvbiBvYmplY3QsIHBsdXMgYSBgY2xpZW50X3NlY3JldGAga2V5IHdoaWNoIGNvbnRhaW5zIGFcbiAgICAgKiB1c2FibGUgZXBoZW1lcmFsIEFQSSB0b2tlbiB0aGF0IGNhbiBiZSB1c2VkIHRvIGF1dGhlbnRpY2F0ZSBicm93c2VyIGNsaWVudHMgZm9yXG4gICAgICogdGhlIFJlYWx0aW1lIEFQSS5cbiAgICAgKlxuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgdHNcbiAgICAgKiBjb25zdCBzZXNzaW9uID1cbiAgICAgKiAgIGF3YWl0IGNsaWVudC5iZXRhLnJlYWx0aW1lLnNlc3Npb25zLmNyZWF0ZSgpO1xuICAgICAqIGBgYFxuICAgICAqL1xuICAgIGNyZWF0ZShib2R5LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQucG9zdCgnL3JlYWx0aW1lL3Nlc3Npb25zJywge1xuICAgICAgICAgICAgYm9keSxcbiAgICAgICAgICAgIC4uLm9wdGlvbnMsXG4gICAgICAgICAgICBoZWFkZXJzOiBidWlsZEhlYWRlcnMoW3sgJ09wZW5BSS1CZXRhJzogJ2Fzc2lzdGFudHM9djInIH0sIG9wdGlvbnM/LmhlYWRlcnNdKSxcbiAgICAgICAgfSk7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2Vzc2lvbnMubWpzLm1hcCJdLCJuYW1lcyI6WyJBUElSZXNvdXJjZSIsImJ1aWxkSGVhZGVycyIsIlNlc3Npb25zIiwiY3JlYXRlIiwiYm9keSIsIm9wdGlvbnMiLCJfY2xpZW50IiwicG9zdCIsImhlYWRlcnMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/resources/beta/realtime/sessions.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/resources/beta/realtime/transcription-sessions.mjs":
/*!********************************************************************************!*\
  !*** ./node_modules/openai/resources/beta/realtime/transcription-sessions.mjs ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TranscriptionSessions: () => (/* binding */ TranscriptionSessions)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/resource.mjs */ \"(rsc)/./node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _internal_headers_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../internal/headers.mjs */ \"(rsc)/./node_modules/openai/internal/headers.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\nclass TranscriptionSessions extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * Create an ephemeral API token for use in client-side applications with the\n     * Realtime API specifically for realtime transcriptions. Can be configured with\n     * the same session parameters as the `transcription_session.update` client event.\n     *\n     * It responds with a session object, plus a `client_secret` key which contains a\n     * usable ephemeral API token that can be used to authenticate browser clients for\n     * the Realtime API.\n     *\n     * @example\n     * ```ts\n     * const transcriptionSession =\n     *   await client.beta.realtime.transcriptionSessions.create();\n     * ```\n     */ create(body, options) {\n        return this._client.post(\"/realtime/transcription_sessions\", {\n            body,\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_1__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n} //# sourceMappingURL=transcription-sessions.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9iZXRhL3JlYWx0aW1lL3RyYW5zY3JpcHRpb24tc2Vzc2lvbnMubWpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLHNGQUFzRjtBQUM3QjtBQUNJO0FBQ3RELE1BQU1FLDhCQUE4QkYsMkRBQVdBO0lBQ2xEOzs7Ozs7Ozs7Ozs7OztLQWNDLEdBQ0RHLE9BQU9DLElBQUksRUFBRUMsT0FBTyxFQUFFO1FBQ2xCLE9BQU8sSUFBSSxDQUFDQyxPQUFPLENBQUNDLElBQUksQ0FBQyxvQ0FBb0M7WUFDekRIO1lBQ0EsR0FBR0MsT0FBTztZQUNWRyxTQUFTUCxtRUFBWUEsQ0FBQztnQkFBQztvQkFBRSxlQUFlO2dCQUFnQjtnQkFBR0ksU0FBU0c7YUFBUTtRQUNoRjtJQUNKO0FBQ0osRUFDQSxtREFBbUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zeXN0ZW0tcHJvbXB0LXRvb2wtd2ViLy4vbm9kZV9tb2R1bGVzL29wZW5haS9yZXNvdXJjZXMvYmV0YS9yZWFsdGltZS90cmFuc2NyaXB0aW9uLXNlc3Npb25zLm1qcz81ODIxIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG5pbXBvcnQgeyBBUElSZXNvdXJjZSB9IGZyb20gXCIuLi8uLi8uLi9jb3JlL3Jlc291cmNlLm1qc1wiO1xuaW1wb3J0IHsgYnVpbGRIZWFkZXJzIH0gZnJvbSBcIi4uLy4uLy4uL2ludGVybmFsL2hlYWRlcnMubWpzXCI7XG5leHBvcnQgY2xhc3MgVHJhbnNjcmlwdGlvblNlc3Npb25zIGV4dGVuZHMgQVBJUmVzb3VyY2Uge1xuICAgIC8qKlxuICAgICAqIENyZWF0ZSBhbiBlcGhlbWVyYWwgQVBJIHRva2VuIGZvciB1c2UgaW4gY2xpZW50LXNpZGUgYXBwbGljYXRpb25zIHdpdGggdGhlXG4gICAgICogUmVhbHRpbWUgQVBJIHNwZWNpZmljYWxseSBmb3IgcmVhbHRpbWUgdHJhbnNjcmlwdGlvbnMuIENhbiBiZSBjb25maWd1cmVkIHdpdGhcbiAgICAgKiB0aGUgc2FtZSBzZXNzaW9uIHBhcmFtZXRlcnMgYXMgdGhlIGB0cmFuc2NyaXB0aW9uX3Nlc3Npb24udXBkYXRlYCBjbGllbnQgZXZlbnQuXG4gICAgICpcbiAgICAgKiBJdCByZXNwb25kcyB3aXRoIGEgc2Vzc2lvbiBvYmplY3QsIHBsdXMgYSBgY2xpZW50X3NlY3JldGAga2V5IHdoaWNoIGNvbnRhaW5zIGFcbiAgICAgKiB1c2FibGUgZXBoZW1lcmFsIEFQSSB0b2tlbiB0aGF0IGNhbiBiZSB1c2VkIHRvIGF1dGhlbnRpY2F0ZSBicm93c2VyIGNsaWVudHMgZm9yXG4gICAgICogdGhlIFJlYWx0aW1lIEFQSS5cbiAgICAgKlxuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgdHNcbiAgICAgKiBjb25zdCB0cmFuc2NyaXB0aW9uU2Vzc2lvbiA9XG4gICAgICogICBhd2FpdCBjbGllbnQuYmV0YS5yZWFsdGltZS50cmFuc2NyaXB0aW9uU2Vzc2lvbnMuY3JlYXRlKCk7XG4gICAgICogYGBgXG4gICAgICovXG4gICAgY3JlYXRlKGJvZHksIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5wb3N0KCcvcmVhbHRpbWUvdHJhbnNjcmlwdGlvbl9zZXNzaW9ucycsIHtcbiAgICAgICAgICAgIGJvZHksXG4gICAgICAgICAgICAuLi5vcHRpb25zLFxuICAgICAgICAgICAgaGVhZGVyczogYnVpbGRIZWFkZXJzKFt7ICdPcGVuQUktQmV0YSc6ICdhc3Npc3RhbnRzPXYyJyB9LCBvcHRpb25zPy5oZWFkZXJzXSksXG4gICAgICAgIH0pO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXRyYW5zY3JpcHRpb24tc2Vzc2lvbnMubWpzLm1hcCJdLCJuYW1lcyI6WyJBUElSZXNvdXJjZSIsImJ1aWxkSGVhZGVycyIsIlRyYW5zY3JpcHRpb25TZXNzaW9ucyIsImNyZWF0ZSIsImJvZHkiLCJvcHRpb25zIiwiX2NsaWVudCIsInBvc3QiLCJoZWFkZXJzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/resources/beta/realtime/transcription-sessions.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/resources/beta/threads/messages.mjs":
/*!*****************************************************************!*\
  !*** ./node_modules/openai/resources/beta/threads/messages.mjs ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Messages: () => (/* binding */ Messages)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/resource.mjs */ \"(rsc)/./node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../core/pagination.mjs */ \"(rsc)/./node_modules/openai/core/pagination.mjs\");\n/* harmony import */ var _internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../internal/headers.mjs */ \"(rsc)/./node_modules/openai/internal/headers.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../internal/utils/path.mjs */ \"(rsc)/./node_modules/openai/internal/utils/path.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\n\n/**\n * @deprecated The Assistants API is deprecated in favor of the Responses API\n */ class Messages extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * Create a message.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */ create(threadID, body, options) {\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__.path`/threads/${threadID}/messages`, {\n            body,\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Retrieve a message.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */ retrieve(messageID, params, options) {\n        const { thread_id } = params;\n        return this._client.get(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__.path`/threads/${thread_id}/messages/${messageID}`, {\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Modifies a message.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */ update(messageID, params, options) {\n        const { thread_id, ...body } = params;\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__.path`/threads/${thread_id}/messages/${messageID}`, {\n            body,\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Returns a list of messages for a given thread.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */ list(threadID, query = {}, options) {\n        return this._client.getAPIList(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__.path`/threads/${threadID}/messages`, _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__.CursorPage, {\n            query,\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Deletes a message.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */ delete(messageID, params, options) {\n        const { thread_id } = params;\n        return this._client.delete(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__.path`/threads/${thread_id}/messages/${messageID}`, {\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n} //# sourceMappingURL=messages.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9iZXRhL3RocmVhZHMvbWVzc2FnZXMubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUEsc0ZBQXNGO0FBQzdCO0FBQ0M7QUFDRztBQUNMO0FBQ3hEOztDQUVDLEdBQ00sTUFBTUksaUJBQWlCSiwyREFBV0E7SUFDckM7Ozs7S0FJQyxHQUNESyxPQUFPQyxRQUFRLEVBQUVDLElBQUksRUFBRUMsT0FBTyxFQUFFO1FBQzVCLE9BQU8sSUFBSSxDQUFDQyxPQUFPLENBQUNDLElBQUksQ0FBQ1AsMERBQUssQ0FBQyxTQUFTLEVBQUVHLFNBQVMsU0FBUyxDQUFDLEVBQUU7WUFDM0RDO1lBQ0EsR0FBR0MsT0FBTztZQUNWRyxTQUFTVCxtRUFBWUEsQ0FBQztnQkFBQztvQkFBRSxlQUFlO2dCQUFnQjtnQkFBR00sU0FBU0c7YUFBUTtRQUNoRjtJQUNKO0lBQ0E7Ozs7S0FJQyxHQUNEQyxTQUFTQyxTQUFTLEVBQUVDLE1BQU0sRUFBRU4sT0FBTyxFQUFFO1FBQ2pDLE1BQU0sRUFBRU8sU0FBUyxFQUFFLEdBQUdEO1FBQ3RCLE9BQU8sSUFBSSxDQUFDTCxPQUFPLENBQUNPLEdBQUcsQ0FBQ2IsMERBQUssQ0FBQyxTQUFTLEVBQUVZLFVBQVUsVUFBVSxFQUFFRixVQUFVLENBQUMsRUFBRTtZQUN4RSxHQUFHTCxPQUFPO1lBQ1ZHLFNBQVNULG1FQUFZQSxDQUFDO2dCQUFDO29CQUFFLGVBQWU7Z0JBQWdCO2dCQUFHTSxTQUFTRzthQUFRO1FBQ2hGO0lBQ0o7SUFDQTs7OztLQUlDLEdBQ0RNLE9BQU9KLFNBQVMsRUFBRUMsTUFBTSxFQUFFTixPQUFPLEVBQUU7UUFDL0IsTUFBTSxFQUFFTyxTQUFTLEVBQUUsR0FBR1IsTUFBTSxHQUFHTztRQUMvQixPQUFPLElBQUksQ0FBQ0wsT0FBTyxDQUFDQyxJQUFJLENBQUNQLDBEQUFLLENBQUMsU0FBUyxFQUFFWSxVQUFVLFVBQVUsRUFBRUYsVUFBVSxDQUFDLEVBQUU7WUFDekVOO1lBQ0EsR0FBR0MsT0FBTztZQUNWRyxTQUFTVCxtRUFBWUEsQ0FBQztnQkFBQztvQkFBRSxlQUFlO2dCQUFnQjtnQkFBR00sU0FBU0c7YUFBUTtRQUNoRjtJQUNKO0lBQ0E7Ozs7S0FJQyxHQUNETyxLQUFLWixRQUFRLEVBQUVhLFFBQVEsQ0FBQyxDQUFDLEVBQUVYLE9BQU8sRUFBRTtRQUNoQyxPQUFPLElBQUksQ0FBQ0MsT0FBTyxDQUFDVyxVQUFVLENBQUNqQiwwREFBSyxDQUFDLFNBQVMsRUFBRUcsU0FBUyxTQUFTLENBQUMsRUFBR0wsNERBQVVBLEVBQUc7WUFDL0VrQjtZQUNBLEdBQUdYLE9BQU87WUFDVkcsU0FBU1QsbUVBQVlBLENBQUM7Z0JBQUM7b0JBQUUsZUFBZTtnQkFBZ0I7Z0JBQUdNLFNBQVNHO2FBQVE7UUFDaEY7SUFDSjtJQUNBOzs7O0tBSUMsR0FDRFUsT0FBT1IsU0FBUyxFQUFFQyxNQUFNLEVBQUVOLE9BQU8sRUFBRTtRQUMvQixNQUFNLEVBQUVPLFNBQVMsRUFBRSxHQUFHRDtRQUN0QixPQUFPLElBQUksQ0FBQ0wsT0FBTyxDQUFDWSxNQUFNLENBQUNsQiwwREFBSyxDQUFDLFNBQVMsRUFBRVksVUFBVSxVQUFVLEVBQUVGLFVBQVUsQ0FBQyxFQUFFO1lBQzNFLEdBQUdMLE9BQU87WUFDVkcsU0FBU1QsbUVBQVlBLENBQUM7Z0JBQUM7b0JBQUUsZUFBZTtnQkFBZ0I7Z0JBQUdNLFNBQVNHO2FBQVE7UUFDaEY7SUFDSjtBQUNKLEVBQ0EscUNBQXFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3lzdGVtLXByb21wdC10b29sLXdlYi8uL25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2JldGEvdGhyZWFkcy9tZXNzYWdlcy5tanM/MDVkZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlIGdlbmVyYXRlZCBmcm9tIG91ciBPcGVuQVBJIHNwZWMgYnkgU3RhaW5sZXNzLiBTZWUgQ09OVFJJQlVUSU5HLm1kIGZvciBkZXRhaWxzLlxuaW1wb3J0IHsgQVBJUmVzb3VyY2UgfSBmcm9tIFwiLi4vLi4vLi4vY29yZS9yZXNvdXJjZS5tanNcIjtcbmltcG9ydCB7IEN1cnNvclBhZ2UgfSBmcm9tIFwiLi4vLi4vLi4vY29yZS9wYWdpbmF0aW9uLm1qc1wiO1xuaW1wb3J0IHsgYnVpbGRIZWFkZXJzIH0gZnJvbSBcIi4uLy4uLy4uL2ludGVybmFsL2hlYWRlcnMubWpzXCI7XG5pbXBvcnQgeyBwYXRoIH0gZnJvbSBcIi4uLy4uLy4uL2ludGVybmFsL3V0aWxzL3BhdGgubWpzXCI7XG4vKipcbiAqIEBkZXByZWNhdGVkIFRoZSBBc3Npc3RhbnRzIEFQSSBpcyBkZXByZWNhdGVkIGluIGZhdm9yIG9mIHRoZSBSZXNwb25zZXMgQVBJXG4gKi9cbmV4cG9ydCBjbGFzcyBNZXNzYWdlcyBleHRlbmRzIEFQSVJlc291cmNlIHtcbiAgICAvKipcbiAgICAgKiBDcmVhdGUgYSBtZXNzYWdlLlxuICAgICAqXG4gICAgICogQGRlcHJlY2F0ZWQgVGhlIEFzc2lzdGFudHMgQVBJIGlzIGRlcHJlY2F0ZWQgaW4gZmF2b3Igb2YgdGhlIFJlc3BvbnNlcyBBUElcbiAgICAgKi9cbiAgICBjcmVhdGUodGhyZWFkSUQsIGJvZHksIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5wb3N0KHBhdGggYC90aHJlYWRzLyR7dGhyZWFkSUR9L21lc3NhZ2VzYCwge1xuICAgICAgICAgICAgYm9keSxcbiAgICAgICAgICAgIC4uLm9wdGlvbnMsXG4gICAgICAgICAgICBoZWFkZXJzOiBidWlsZEhlYWRlcnMoW3sgJ09wZW5BSS1CZXRhJzogJ2Fzc2lzdGFudHM9djInIH0sIG9wdGlvbnM/LmhlYWRlcnNdKSxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHJpZXZlIGEgbWVzc2FnZS5cbiAgICAgKlxuICAgICAqIEBkZXByZWNhdGVkIFRoZSBBc3Npc3RhbnRzIEFQSSBpcyBkZXByZWNhdGVkIGluIGZhdm9yIG9mIHRoZSBSZXNwb25zZXMgQVBJXG4gICAgICovXG4gICAgcmV0cmlldmUobWVzc2FnZUlELCBwYXJhbXMsIG9wdGlvbnMpIHtcbiAgICAgICAgY29uc3QgeyB0aHJlYWRfaWQgfSA9IHBhcmFtcztcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5nZXQocGF0aCBgL3RocmVhZHMvJHt0aHJlYWRfaWR9L21lc3NhZ2VzLyR7bWVzc2FnZUlEfWAsIHtcbiAgICAgICAgICAgIC4uLm9wdGlvbnMsXG4gICAgICAgICAgICBoZWFkZXJzOiBidWlsZEhlYWRlcnMoW3sgJ09wZW5BSS1CZXRhJzogJ2Fzc2lzdGFudHM9djInIH0sIG9wdGlvbnM/LmhlYWRlcnNdKSxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIE1vZGlmaWVzIGEgbWVzc2FnZS5cbiAgICAgKlxuICAgICAqIEBkZXByZWNhdGVkIFRoZSBBc3Npc3RhbnRzIEFQSSBpcyBkZXByZWNhdGVkIGluIGZhdm9yIG9mIHRoZSBSZXNwb25zZXMgQVBJXG4gICAgICovXG4gICAgdXBkYXRlKG1lc3NhZ2VJRCwgcGFyYW1zLCBvcHRpb25zKSB7XG4gICAgICAgIGNvbnN0IHsgdGhyZWFkX2lkLCAuLi5ib2R5IH0gPSBwYXJhbXM7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQucG9zdChwYXRoIGAvdGhyZWFkcy8ke3RocmVhZF9pZH0vbWVzc2FnZXMvJHttZXNzYWdlSUR9YCwge1xuICAgICAgICAgICAgYm9keSxcbiAgICAgICAgICAgIC4uLm9wdGlvbnMsXG4gICAgICAgICAgICBoZWFkZXJzOiBidWlsZEhlYWRlcnMoW3sgJ09wZW5BSS1CZXRhJzogJ2Fzc2lzdGFudHM9djInIH0sIG9wdGlvbnM/LmhlYWRlcnNdKSxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHVybnMgYSBsaXN0IG9mIG1lc3NhZ2VzIGZvciBhIGdpdmVuIHRocmVhZC5cbiAgICAgKlxuICAgICAqIEBkZXByZWNhdGVkIFRoZSBBc3Npc3RhbnRzIEFQSSBpcyBkZXByZWNhdGVkIGluIGZhdm9yIG9mIHRoZSBSZXNwb25zZXMgQVBJXG4gICAgICovXG4gICAgbGlzdCh0aHJlYWRJRCwgcXVlcnkgPSB7fSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmdldEFQSUxpc3QocGF0aCBgL3RocmVhZHMvJHt0aHJlYWRJRH0vbWVzc2FnZXNgLCAoQ3Vyc29yUGFnZSksIHtcbiAgICAgICAgICAgIHF1ZXJ5LFxuICAgICAgICAgICAgLi4ub3B0aW9ucyxcbiAgICAgICAgICAgIGhlYWRlcnM6IGJ1aWxkSGVhZGVycyhbeyAnT3BlbkFJLUJldGEnOiAnYXNzaXN0YW50cz12MicgfSwgb3B0aW9ucz8uaGVhZGVyc10pLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogRGVsZXRlcyBhIG1lc3NhZ2UuXG4gICAgICpcbiAgICAgKiBAZGVwcmVjYXRlZCBUaGUgQXNzaXN0YW50cyBBUEkgaXMgZGVwcmVjYXRlZCBpbiBmYXZvciBvZiB0aGUgUmVzcG9uc2VzIEFQSVxuICAgICAqL1xuICAgIGRlbGV0ZShtZXNzYWdlSUQsIHBhcmFtcywgb3B0aW9ucykge1xuICAgICAgICBjb25zdCB7IHRocmVhZF9pZCB9ID0gcGFyYW1zO1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmRlbGV0ZShwYXRoIGAvdGhyZWFkcy8ke3RocmVhZF9pZH0vbWVzc2FnZXMvJHttZXNzYWdlSUR9YCwge1xuICAgICAgICAgICAgLi4ub3B0aW9ucyxcbiAgICAgICAgICAgIGhlYWRlcnM6IGJ1aWxkSGVhZGVycyhbeyAnT3BlbkFJLUJldGEnOiAnYXNzaXN0YW50cz12MicgfSwgb3B0aW9ucz8uaGVhZGVyc10pLFxuICAgICAgICB9KTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1tZXNzYWdlcy5tanMubWFwIl0sIm5hbWVzIjpbIkFQSVJlc291cmNlIiwiQ3Vyc29yUGFnZSIsImJ1aWxkSGVhZGVycyIsInBhdGgiLCJNZXNzYWdlcyIsImNyZWF0ZSIsInRocmVhZElEIiwiYm9keSIsIm9wdGlvbnMiLCJfY2xpZW50IiwicG9zdCIsImhlYWRlcnMiLCJyZXRyaWV2ZSIsIm1lc3NhZ2VJRCIsInBhcmFtcyIsInRocmVhZF9pZCIsImdldCIsInVwZGF0ZSIsImxpc3QiLCJxdWVyeSIsImdldEFQSUxpc3QiLCJkZWxldGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/resources/beta/threads/messages.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/resources/beta/threads/runs/runs.mjs":
/*!******************************************************************!*\
  !*** ./node_modules/openai/resources/beta/threads/runs/runs.mjs ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Runs: () => (/* binding */ Runs)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../core/resource.mjs */ \"(rsc)/./node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _steps_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./steps.mjs */ \"(rsc)/./node_modules/openai/resources/beta/threads/runs/steps.mjs\");\n/* harmony import */ var _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../core/pagination.mjs */ \"(rsc)/./node_modules/openai/core/pagination.mjs\");\n/* harmony import */ var _internal_headers_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../internal/headers.mjs */ \"(rsc)/./node_modules/openai/internal/headers.mjs\");\n/* harmony import */ var _lib_AssistantStream_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../lib/AssistantStream.mjs */ \"(rsc)/./node_modules/openai/lib/AssistantStream.mjs\");\n/* harmony import */ var _internal_utils_sleep_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../internal/utils/sleep.mjs */ \"(rsc)/./node_modules/openai/internal/utils/sleep.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../internal/utils/path.mjs */ \"(rsc)/./node_modules/openai/internal/utils/path.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\n\n\n\n\n\n/**\n * @deprecated The Assistants API is deprecated in favor of the Responses API\n */ class Runs extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    constructor(){\n        super(...arguments);\n        this.steps = new _steps_mjs__WEBPACK_IMPORTED_MODULE_1__.Steps(this._client);\n    }\n    create(threadID, params, options) {\n        const { include, ...body } = params;\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_6__.path`/threads/${threadID}/runs`, {\n            query: {\n                include\n            },\n            body,\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_3__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ]),\n            stream: params.stream ?? false\n        });\n    }\n    /**\n     * Retrieves a run.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */ retrieve(runID, params, options) {\n        const { thread_id } = params;\n        return this._client.get(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_6__.path`/threads/${thread_id}/runs/${runID}`, {\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_3__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Modifies a run.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */ update(runID, params, options) {\n        const { thread_id, ...body } = params;\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_6__.path`/threads/${thread_id}/runs/${runID}`, {\n            body,\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_3__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Returns a list of runs belonging to a thread.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */ list(threadID, query = {}, options) {\n        return this._client.getAPIList(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_6__.path`/threads/${threadID}/runs`, _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_2__.CursorPage, {\n            query,\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_3__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Cancels a run that is `in_progress`.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */ cancel(runID, params, options) {\n        const { thread_id } = params;\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_6__.path`/threads/${thread_id}/runs/${runID}/cancel`, {\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_3__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * A helper to create a run an poll for a terminal state. More information on Run\n     * lifecycles can be found here:\n     * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n     */ async createAndPoll(threadId, body, options) {\n        const run = await this.create(threadId, body, options);\n        return await this.poll(run.id, {\n            thread_id: threadId\n        }, options);\n    }\n    /**\n     * Create a Run stream\n     *\n     * @deprecated use `stream` instead\n     */ createAndStream(threadId, body, options) {\n        return _lib_AssistantStream_mjs__WEBPACK_IMPORTED_MODULE_4__.AssistantStream.createAssistantStream(threadId, this._client.beta.threads.runs, body, options);\n    }\n    /**\n     * A helper to poll a run status until it reaches a terminal state. More\n     * information on Run lifecycles can be found here:\n     * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n     */ async poll(runId, params, options) {\n        const headers = (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_3__.buildHeaders)([\n            options?.headers,\n            {\n                \"X-Stainless-Poll-Helper\": \"true\",\n                \"X-Stainless-Custom-Poll-Interval\": options?.pollIntervalMs?.toString() ?? undefined\n            }\n        ]);\n        while(true){\n            const { data: run, response } = await this.retrieve(runId, params, {\n                ...options,\n                headers: {\n                    ...options?.headers,\n                    ...headers\n                }\n            }).withResponse();\n            switch(run.status){\n                //If we are in any sort of intermediate state we poll\n                case \"queued\":\n                case \"in_progress\":\n                case \"cancelling\":\n                    let sleepInterval = 5000;\n                    if (options?.pollIntervalMs) {\n                        sleepInterval = options.pollIntervalMs;\n                    } else {\n                        const headerInterval = response.headers.get(\"openai-poll-after-ms\");\n                        if (headerInterval) {\n                            const headerIntervalMs = parseInt(headerInterval);\n                            if (!isNaN(headerIntervalMs)) {\n                                sleepInterval = headerIntervalMs;\n                            }\n                        }\n                    }\n                    await (0,_internal_utils_sleep_mjs__WEBPACK_IMPORTED_MODULE_5__.sleep)(sleepInterval);\n                    break;\n                //We return the run in any terminal state.\n                case \"requires_action\":\n                case \"incomplete\":\n                case \"cancelled\":\n                case \"completed\":\n                case \"failed\":\n                case \"expired\":\n                    return run;\n            }\n        }\n    }\n    /**\n     * Create a Run stream\n     */ stream(threadId, body, options) {\n        return _lib_AssistantStream_mjs__WEBPACK_IMPORTED_MODULE_4__.AssistantStream.createAssistantStream(threadId, this._client.beta.threads.runs, body, options);\n    }\n    submitToolOutputs(runID, params, options) {\n        const { thread_id, ...body } = params;\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_6__.path`/threads/${thread_id}/runs/${runID}/submit_tool_outputs`, {\n            body,\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_3__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ]),\n            stream: params.stream ?? false\n        });\n    }\n    /**\n     * A helper to submit a tool output to a run and poll for a terminal run state.\n     * More information on Run lifecycles can be found here:\n     * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n     */ async submitToolOutputsAndPoll(runId, params, options) {\n        const run = await this.submitToolOutputs(runId, params, options);\n        return await this.poll(run.id, params, options);\n    }\n    /**\n     * Submit the tool outputs from a previous run and stream the run to a terminal\n     * state. More information on Run lifecycles can be found here:\n     * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n     */ submitToolOutputsStream(runId, params, options) {\n        return _lib_AssistantStream_mjs__WEBPACK_IMPORTED_MODULE_4__.AssistantStream.createToolAssistantStream(runId, this._client.beta.threads.runs, params, options);\n    }\n}\nRuns.Steps = _steps_mjs__WEBPACK_IMPORTED_MODULE_1__.Steps; //# sourceMappingURL=runs.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/resources/beta/threads/runs/runs.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/resources/beta/threads/runs/steps.mjs":
/*!*******************************************************************!*\
  !*** ./node_modules/openai/resources/beta/threads/runs/steps.mjs ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Steps: () => (/* binding */ Steps)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../core/resource.mjs */ \"(rsc)/./node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../core/pagination.mjs */ \"(rsc)/./node_modules/openai/core/pagination.mjs\");\n/* harmony import */ var _internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../internal/headers.mjs */ \"(rsc)/./node_modules/openai/internal/headers.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../internal/utils/path.mjs */ \"(rsc)/./node_modules/openai/internal/utils/path.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\n\n/**\n * @deprecated The Assistants API is deprecated in favor of the Responses API\n */ class Steps extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * Retrieves a run step.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */ retrieve(stepID, params, options) {\n        const { thread_id, run_id, ...query } = params;\n        return this._client.get(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__.path`/threads/${thread_id}/runs/${run_id}/steps/${stepID}`, {\n            query,\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Returns a list of run steps belonging to a run.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */ list(runID, params, options) {\n        const { thread_id, ...query } = params;\n        return this._client.getAPIList(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__.path`/threads/${thread_id}/runs/${runID}/steps`, _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__.CursorPage, {\n            query,\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n} //# sourceMappingURL=steps.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9iZXRhL3RocmVhZHMvcnVucy9zdGVwcy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQSxzRkFBc0Y7QUFDMUI7QUFDQztBQUNHO0FBQ0w7QUFDM0Q7O0NBRUMsR0FDTSxNQUFNSSxjQUFjSiwyREFBV0E7SUFDbEM7Ozs7S0FJQyxHQUNESyxTQUFTQyxNQUFNLEVBQUVDLE1BQU0sRUFBRUMsT0FBTyxFQUFFO1FBQzlCLE1BQU0sRUFBRUMsU0FBUyxFQUFFQyxNQUFNLEVBQUUsR0FBR0MsT0FBTyxHQUFHSjtRQUN4QyxPQUFPLElBQUksQ0FBQ0ssT0FBTyxDQUFDQyxHQUFHLENBQUNWLDBEQUFLLENBQUMsU0FBUyxFQUFFTSxVQUFVLE1BQU0sRUFBRUMsT0FBTyxPQUFPLEVBQUVKLE9BQU8sQ0FBQyxFQUFFO1lBQ2pGSztZQUNBLEdBQUdILE9BQU87WUFDVk0sU0FBU1osbUVBQVlBLENBQUM7Z0JBQUM7b0JBQUUsZUFBZTtnQkFBZ0I7Z0JBQUdNLFNBQVNNO2FBQVE7UUFDaEY7SUFDSjtJQUNBOzs7O0tBSUMsR0FDREMsS0FBS0MsS0FBSyxFQUFFVCxNQUFNLEVBQUVDLE9BQU8sRUFBRTtRQUN6QixNQUFNLEVBQUVDLFNBQVMsRUFBRSxHQUFHRSxPQUFPLEdBQUdKO1FBQ2hDLE9BQU8sSUFBSSxDQUFDSyxPQUFPLENBQUNLLFVBQVUsQ0FBQ2QsMERBQUssQ0FBQyxTQUFTLEVBQUVNLFVBQVUsTUFBTSxFQUFFTyxNQUFNLE1BQU0sQ0FBQyxFQUFHZiw0REFBVUEsRUFBRztZQUMzRlU7WUFDQSxHQUFHSCxPQUFPO1lBQ1ZNLFNBQVNaLG1FQUFZQSxDQUFDO2dCQUFDO29CQUFFLGVBQWU7Z0JBQWdCO2dCQUFHTSxTQUFTTTthQUFRO1FBQ2hGO0lBQ0o7QUFDSixFQUNBLGtDQUFrQyIsInNvdXJjZXMiOlsid2VicGFjazovL3N5c3RlbS1wcm9tcHQtdG9vbC13ZWIvLi9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9iZXRhL3RocmVhZHMvcnVucy9zdGVwcy5tanM/NDdlMyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlIGdlbmVyYXRlZCBmcm9tIG91ciBPcGVuQVBJIHNwZWMgYnkgU3RhaW5sZXNzLiBTZWUgQ09OVFJJQlVUSU5HLm1kIGZvciBkZXRhaWxzLlxuaW1wb3J0IHsgQVBJUmVzb3VyY2UgfSBmcm9tIFwiLi4vLi4vLi4vLi4vY29yZS9yZXNvdXJjZS5tanNcIjtcbmltcG9ydCB7IEN1cnNvclBhZ2UgfSBmcm9tIFwiLi4vLi4vLi4vLi4vY29yZS9wYWdpbmF0aW9uLm1qc1wiO1xuaW1wb3J0IHsgYnVpbGRIZWFkZXJzIH0gZnJvbSBcIi4uLy4uLy4uLy4uL2ludGVybmFsL2hlYWRlcnMubWpzXCI7XG5pbXBvcnQgeyBwYXRoIH0gZnJvbSBcIi4uLy4uLy4uLy4uL2ludGVybmFsL3V0aWxzL3BhdGgubWpzXCI7XG4vKipcbiAqIEBkZXByZWNhdGVkIFRoZSBBc3Npc3RhbnRzIEFQSSBpcyBkZXByZWNhdGVkIGluIGZhdm9yIG9mIHRoZSBSZXNwb25zZXMgQVBJXG4gKi9cbmV4cG9ydCBjbGFzcyBTdGVwcyBleHRlbmRzIEFQSVJlc291cmNlIHtcbiAgICAvKipcbiAgICAgKiBSZXRyaWV2ZXMgYSBydW4gc3RlcC5cbiAgICAgKlxuICAgICAqIEBkZXByZWNhdGVkIFRoZSBBc3Npc3RhbnRzIEFQSSBpcyBkZXByZWNhdGVkIGluIGZhdm9yIG9mIHRoZSBSZXNwb25zZXMgQVBJXG4gICAgICovXG4gICAgcmV0cmlldmUoc3RlcElELCBwYXJhbXMsIG9wdGlvbnMpIHtcbiAgICAgICAgY29uc3QgeyB0aHJlYWRfaWQsIHJ1bl9pZCwgLi4ucXVlcnkgfSA9IHBhcmFtcztcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5nZXQocGF0aCBgL3RocmVhZHMvJHt0aHJlYWRfaWR9L3J1bnMvJHtydW5faWR9L3N0ZXBzLyR7c3RlcElEfWAsIHtcbiAgICAgICAgICAgIHF1ZXJ5LFxuICAgICAgICAgICAgLi4ub3B0aW9ucyxcbiAgICAgICAgICAgIGhlYWRlcnM6IGJ1aWxkSGVhZGVycyhbeyAnT3BlbkFJLUJldGEnOiAnYXNzaXN0YW50cz12MicgfSwgb3B0aW9ucz8uaGVhZGVyc10pLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0dXJucyBhIGxpc3Qgb2YgcnVuIHN0ZXBzIGJlbG9uZ2luZyB0byBhIHJ1bi5cbiAgICAgKlxuICAgICAqIEBkZXByZWNhdGVkIFRoZSBBc3Npc3RhbnRzIEFQSSBpcyBkZXByZWNhdGVkIGluIGZhdm9yIG9mIHRoZSBSZXNwb25zZXMgQVBJXG4gICAgICovXG4gICAgbGlzdChydW5JRCwgcGFyYW1zLCBvcHRpb25zKSB7XG4gICAgICAgIGNvbnN0IHsgdGhyZWFkX2lkLCAuLi5xdWVyeSB9ID0gcGFyYW1zO1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmdldEFQSUxpc3QocGF0aCBgL3RocmVhZHMvJHt0aHJlYWRfaWR9L3J1bnMvJHtydW5JRH0vc3RlcHNgLCAoQ3Vyc29yUGFnZSksIHtcbiAgICAgICAgICAgIHF1ZXJ5LFxuICAgICAgICAgICAgLi4ub3B0aW9ucyxcbiAgICAgICAgICAgIGhlYWRlcnM6IGJ1aWxkSGVhZGVycyhbeyAnT3BlbkFJLUJldGEnOiAnYXNzaXN0YW50cz12MicgfSwgb3B0aW9ucz8uaGVhZGVyc10pLFxuICAgICAgICB9KTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zdGVwcy5tanMubWFwIl0sIm5hbWVzIjpbIkFQSVJlc291cmNlIiwiQ3Vyc29yUGFnZSIsImJ1aWxkSGVhZGVycyIsInBhdGgiLCJTdGVwcyIsInJldHJpZXZlIiwic3RlcElEIiwicGFyYW1zIiwib3B0aW9ucyIsInRocmVhZF9pZCIsInJ1bl9pZCIsInF1ZXJ5IiwiX2NsaWVudCIsImdldCIsImhlYWRlcnMiLCJsaXN0IiwicnVuSUQiLCJnZXRBUElMaXN0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/resources/beta/threads/runs/steps.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/resources/beta/threads/threads.mjs":
/*!****************************************************************!*\
  !*** ./node_modules/openai/resources/beta/threads/threads.mjs ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Threads: () => (/* binding */ Threads)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/resource.mjs */ \"(rsc)/./node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _messages_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./messages.mjs */ \"(rsc)/./node_modules/openai/resources/beta/threads/messages.mjs\");\n/* harmony import */ var _runs_runs_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./runs/runs.mjs */ \"(rsc)/./node_modules/openai/resources/beta/threads/runs/runs.mjs\");\n/* harmony import */ var _internal_headers_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../internal/headers.mjs */ \"(rsc)/./node_modules/openai/internal/headers.mjs\");\n/* harmony import */ var _lib_AssistantStream_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../lib/AssistantStream.mjs */ \"(rsc)/./node_modules/openai/lib/AssistantStream.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../internal/utils/path.mjs */ \"(rsc)/./node_modules/openai/internal/utils/path.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\n\n\n\n\n\n/**\n * @deprecated The Assistants API is deprecated in favor of the Responses API\n */ class Threads extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    constructor(){\n        super(...arguments);\n        this.runs = new _runs_runs_mjs__WEBPACK_IMPORTED_MODULE_2__.Runs(this._client);\n        this.messages = new _messages_mjs__WEBPACK_IMPORTED_MODULE_1__.Messages(this._client);\n    }\n    /**\n     * Create a thread.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */ create(body = {}, options) {\n        return this._client.post(\"/threads\", {\n            body,\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_3__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Retrieves a thread.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */ retrieve(threadID, options) {\n        return this._client.get(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_5__.path`/threads/${threadID}`, {\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_3__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Modifies a thread.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */ update(threadID, body, options) {\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_5__.path`/threads/${threadID}`, {\n            body,\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_3__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Delete a thread.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */ delete(threadID, options) {\n        return this._client.delete(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_5__.path`/threads/${threadID}`, {\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_3__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    createAndRun(body, options) {\n        return this._client.post(\"/threads/runs\", {\n            body,\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_3__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ]),\n            stream: body.stream ?? false\n        });\n    }\n    /**\n     * A helper to create a thread, start a run and then poll for a terminal state.\n     * More information on Run lifecycles can be found here:\n     * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n     */ async createAndRunPoll(body, options) {\n        const run = await this.createAndRun(body, options);\n        return await this.runs.poll(run.id, {\n            thread_id: run.thread_id\n        }, options);\n    }\n    /**\n     * Create a thread and stream the run back\n     */ createAndRunStream(body, options) {\n        return _lib_AssistantStream_mjs__WEBPACK_IMPORTED_MODULE_4__.AssistantStream.createThreadAssistantStream(body, this._client.beta.threads, options);\n    }\n}\nThreads.Runs = _runs_runs_mjs__WEBPACK_IMPORTED_MODULE_2__.Runs;\nThreads.Messages = _messages_mjs__WEBPACK_IMPORTED_MODULE_1__.Messages; //# sourceMappingURL=threads.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9iZXRhL3RocmVhZHMvdGhyZWFkcy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBLHNGQUFzRjtBQUM3QjtBQUNYO0FBQ0g7QUFDQTtBQUNIO0FBQ3FCO0FBQ007QUFDWDtBQUN4RDs7Q0FFQyxHQUNNLE1BQU1RLGdCQUFnQlIsMkRBQVdBO0lBQ3BDUyxhQUFjO1FBQ1YsS0FBSyxJQUFJQztRQUNULElBQUksQ0FBQ0MsSUFBSSxHQUFHLElBQUlSLGdEQUFZLENBQUMsSUFBSSxDQUFDUyxPQUFPO1FBQ3pDLElBQUksQ0FBQ0MsUUFBUSxHQUFHLElBQUlaLG1EQUFvQixDQUFDLElBQUksQ0FBQ1csT0FBTztJQUN6RDtJQUNBOzs7O0tBSUMsR0FDREUsT0FBT0MsT0FBTyxDQUFDLENBQUMsRUFBRUMsT0FBTyxFQUFFO1FBQ3ZCLE9BQU8sSUFBSSxDQUFDSixPQUFPLENBQUNLLElBQUksQ0FBQyxZQUFZO1lBQ2pDRjtZQUNBLEdBQUdDLE9BQU87WUFDVkUsU0FBU2IsbUVBQVlBLENBQUM7Z0JBQUM7b0JBQUUsZUFBZTtnQkFBZ0I7Z0JBQUdXLFNBQVNFO2FBQVE7UUFDaEY7SUFDSjtJQUNBOzs7O0tBSUMsR0FDREMsU0FBU0MsUUFBUSxFQUFFSixPQUFPLEVBQUU7UUFDeEIsT0FBTyxJQUFJLENBQUNKLE9BQU8sQ0FBQ1MsR0FBRyxDQUFDZCwwREFBSyxDQUFDLFNBQVMsRUFBRWEsU0FBUyxDQUFDLEVBQUU7WUFDakQsR0FBR0osT0FBTztZQUNWRSxTQUFTYixtRUFBWUEsQ0FBQztnQkFBQztvQkFBRSxlQUFlO2dCQUFnQjtnQkFBR1csU0FBU0U7YUFBUTtRQUNoRjtJQUNKO0lBQ0E7Ozs7S0FJQyxHQUNESSxPQUFPRixRQUFRLEVBQUVMLElBQUksRUFBRUMsT0FBTyxFQUFFO1FBQzVCLE9BQU8sSUFBSSxDQUFDSixPQUFPLENBQUNLLElBQUksQ0FBQ1YsMERBQUssQ0FBQyxTQUFTLEVBQUVhLFNBQVMsQ0FBQyxFQUFFO1lBQ2xETDtZQUNBLEdBQUdDLE9BQU87WUFDVkUsU0FBU2IsbUVBQVlBLENBQUM7Z0JBQUM7b0JBQUUsZUFBZTtnQkFBZ0I7Z0JBQUdXLFNBQVNFO2FBQVE7UUFDaEY7SUFDSjtJQUNBOzs7O0tBSUMsR0FDREssT0FBT0gsUUFBUSxFQUFFSixPQUFPLEVBQUU7UUFDdEIsT0FBTyxJQUFJLENBQUNKLE9BQU8sQ0FBQ1csTUFBTSxDQUFDaEIsMERBQUssQ0FBQyxTQUFTLEVBQUVhLFNBQVMsQ0FBQyxFQUFFO1lBQ3BELEdBQUdKLE9BQU87WUFDVkUsU0FBU2IsbUVBQVlBLENBQUM7Z0JBQUM7b0JBQUUsZUFBZTtnQkFBZ0I7Z0JBQUdXLFNBQVNFO2FBQVE7UUFDaEY7SUFDSjtJQUNBTSxhQUFhVCxJQUFJLEVBQUVDLE9BQU8sRUFBRTtRQUN4QixPQUFPLElBQUksQ0FBQ0osT0FBTyxDQUFDSyxJQUFJLENBQUMsaUJBQWlCO1lBQ3RDRjtZQUNBLEdBQUdDLE9BQU87WUFDVkUsU0FBU2IsbUVBQVlBLENBQUM7Z0JBQUM7b0JBQUUsZUFBZTtnQkFBZ0I7Z0JBQUdXLFNBQVNFO2FBQVE7WUFDNUVPLFFBQVFWLEtBQUtVLE1BQU0sSUFBSTtRQUMzQjtJQUNKO0lBQ0E7Ozs7S0FJQyxHQUNELE1BQU1DLGlCQUFpQlgsSUFBSSxFQUFFQyxPQUFPLEVBQUU7UUFDbEMsTUFBTVcsTUFBTSxNQUFNLElBQUksQ0FBQ0gsWUFBWSxDQUFDVCxNQUFNQztRQUMxQyxPQUFPLE1BQU0sSUFBSSxDQUFDTCxJQUFJLENBQUNpQixJQUFJLENBQUNELElBQUlFLEVBQUUsRUFBRTtZQUFFQyxXQUFXSCxJQUFJRyxTQUFTO1FBQUMsR0FBR2Q7SUFDdEU7SUFDQTs7S0FFQyxHQUNEZSxtQkFBbUJoQixJQUFJLEVBQUVDLE9BQU8sRUFBRTtRQUM5QixPQUFPVixxRUFBZUEsQ0FBQzBCLDJCQUEyQixDQUFDakIsTUFBTSxJQUFJLENBQUNILE9BQU8sQ0FBQ3FCLElBQUksQ0FBQ0MsT0FBTyxFQUFFbEI7SUFDeEY7QUFDSjtBQUNBUixRQUFRSixJQUFJLEdBQUdBLGdEQUFJQTtBQUNuQkksUUFBUU4sUUFBUSxHQUFHQSxtREFBUUEsRUFDM0Isb0NBQW9DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3lzdGVtLXByb21wdC10b29sLXdlYi8uL25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2JldGEvdGhyZWFkcy90aHJlYWRzLm1qcz82NzcxIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG5pbXBvcnQgeyBBUElSZXNvdXJjZSB9IGZyb20gXCIuLi8uLi8uLi9jb3JlL3Jlc291cmNlLm1qc1wiO1xuaW1wb3J0ICogYXMgTWVzc2FnZXNBUEkgZnJvbSBcIi4vbWVzc2FnZXMubWpzXCI7XG5pbXBvcnQgeyBNZXNzYWdlcywgfSBmcm9tIFwiLi9tZXNzYWdlcy5tanNcIjtcbmltcG9ydCAqIGFzIFJ1bnNBUEkgZnJvbSBcIi4vcnVucy9ydW5zLm1qc1wiO1xuaW1wb3J0IHsgUnVucywgfSBmcm9tIFwiLi9ydW5zL3J1bnMubWpzXCI7XG5pbXBvcnQgeyBidWlsZEhlYWRlcnMgfSBmcm9tIFwiLi4vLi4vLi4vaW50ZXJuYWwvaGVhZGVycy5tanNcIjtcbmltcG9ydCB7IEFzc2lzdGFudFN0cmVhbSB9IGZyb20gXCIuLi8uLi8uLi9saWIvQXNzaXN0YW50U3RyZWFtLm1qc1wiO1xuaW1wb3J0IHsgcGF0aCB9IGZyb20gXCIuLi8uLi8uLi9pbnRlcm5hbC91dGlscy9wYXRoLm1qc1wiO1xuLyoqXG4gKiBAZGVwcmVjYXRlZCBUaGUgQXNzaXN0YW50cyBBUEkgaXMgZGVwcmVjYXRlZCBpbiBmYXZvciBvZiB0aGUgUmVzcG9uc2VzIEFQSVxuICovXG5leHBvcnQgY2xhc3MgVGhyZWFkcyBleHRlbmRzIEFQSVJlc291cmNlIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgdGhpcy5ydW5zID0gbmV3IFJ1bnNBUEkuUnVucyh0aGlzLl9jbGllbnQpO1xuICAgICAgICB0aGlzLm1lc3NhZ2VzID0gbmV3IE1lc3NhZ2VzQVBJLk1lc3NhZ2VzKHRoaXMuX2NsaWVudCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENyZWF0ZSBhIHRocmVhZC5cbiAgICAgKlxuICAgICAqIEBkZXByZWNhdGVkIFRoZSBBc3Npc3RhbnRzIEFQSSBpcyBkZXByZWNhdGVkIGluIGZhdm9yIG9mIHRoZSBSZXNwb25zZXMgQVBJXG4gICAgICovXG4gICAgY3JlYXRlKGJvZHkgPSB7fSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LnBvc3QoJy90aHJlYWRzJywge1xuICAgICAgICAgICAgYm9keSxcbiAgICAgICAgICAgIC4uLm9wdGlvbnMsXG4gICAgICAgICAgICBoZWFkZXJzOiBidWlsZEhlYWRlcnMoW3sgJ09wZW5BSS1CZXRhJzogJ2Fzc2lzdGFudHM9djInIH0sIG9wdGlvbnM/LmhlYWRlcnNdKSxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHJpZXZlcyBhIHRocmVhZC5cbiAgICAgKlxuICAgICAqIEBkZXByZWNhdGVkIFRoZSBBc3Npc3RhbnRzIEFQSSBpcyBkZXByZWNhdGVkIGluIGZhdm9yIG9mIHRoZSBSZXNwb25zZXMgQVBJXG4gICAgICovXG4gICAgcmV0cmlldmUodGhyZWFkSUQsIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5nZXQocGF0aCBgL3RocmVhZHMvJHt0aHJlYWRJRH1gLCB7XG4gICAgICAgICAgICAuLi5vcHRpb25zLFxuICAgICAgICAgICAgaGVhZGVyczogYnVpbGRIZWFkZXJzKFt7ICdPcGVuQUktQmV0YSc6ICdhc3Npc3RhbnRzPXYyJyB9LCBvcHRpb25zPy5oZWFkZXJzXSksXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBNb2RpZmllcyBhIHRocmVhZC5cbiAgICAgKlxuICAgICAqIEBkZXByZWNhdGVkIFRoZSBBc3Npc3RhbnRzIEFQSSBpcyBkZXByZWNhdGVkIGluIGZhdm9yIG9mIHRoZSBSZXNwb25zZXMgQVBJXG4gICAgICovXG4gICAgdXBkYXRlKHRocmVhZElELCBib2R5LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQucG9zdChwYXRoIGAvdGhyZWFkcy8ke3RocmVhZElEfWAsIHtcbiAgICAgICAgICAgIGJvZHksXG4gICAgICAgICAgICAuLi5vcHRpb25zLFxuICAgICAgICAgICAgaGVhZGVyczogYnVpbGRIZWFkZXJzKFt7ICdPcGVuQUktQmV0YSc6ICdhc3Npc3RhbnRzPXYyJyB9LCBvcHRpb25zPy5oZWFkZXJzXSksXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBEZWxldGUgYSB0aHJlYWQuXG4gICAgICpcbiAgICAgKiBAZGVwcmVjYXRlZCBUaGUgQXNzaXN0YW50cyBBUEkgaXMgZGVwcmVjYXRlZCBpbiBmYXZvciBvZiB0aGUgUmVzcG9uc2VzIEFQSVxuICAgICAqL1xuICAgIGRlbGV0ZSh0aHJlYWRJRCwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmRlbGV0ZShwYXRoIGAvdGhyZWFkcy8ke3RocmVhZElEfWAsIHtcbiAgICAgICAgICAgIC4uLm9wdGlvbnMsXG4gICAgICAgICAgICBoZWFkZXJzOiBidWlsZEhlYWRlcnMoW3sgJ09wZW5BSS1CZXRhJzogJ2Fzc2lzdGFudHM9djInIH0sIG9wdGlvbnM/LmhlYWRlcnNdKSxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGNyZWF0ZUFuZFJ1bihib2R5LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQucG9zdCgnL3RocmVhZHMvcnVucycsIHtcbiAgICAgICAgICAgIGJvZHksXG4gICAgICAgICAgICAuLi5vcHRpb25zLFxuICAgICAgICAgICAgaGVhZGVyczogYnVpbGRIZWFkZXJzKFt7ICdPcGVuQUktQmV0YSc6ICdhc3Npc3RhbnRzPXYyJyB9LCBvcHRpb25zPy5oZWFkZXJzXSksXG4gICAgICAgICAgICBzdHJlYW06IGJvZHkuc3RyZWFtID8/IGZhbHNlLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQSBoZWxwZXIgdG8gY3JlYXRlIGEgdGhyZWFkLCBzdGFydCBhIHJ1biBhbmQgdGhlbiBwb2xsIGZvciBhIHRlcm1pbmFsIHN0YXRlLlxuICAgICAqIE1vcmUgaW5mb3JtYXRpb24gb24gUnVuIGxpZmVjeWNsZXMgY2FuIGJlIGZvdW5kIGhlcmU6XG4gICAgICogaHR0cHM6Ly9wbGF0Zm9ybS5vcGVuYWkuY29tL2RvY3MvYXNzaXN0YW50cy9ob3ctaXQtd29ya3MvcnVucy1hbmQtcnVuLXN0ZXBzXG4gICAgICovXG4gICAgYXN5bmMgY3JlYXRlQW5kUnVuUG9sbChib2R5LCBvcHRpb25zKSB7XG4gICAgICAgIGNvbnN0IHJ1biA9IGF3YWl0IHRoaXMuY3JlYXRlQW5kUnVuKGJvZHksIG9wdGlvbnMpO1xuICAgICAgICByZXR1cm4gYXdhaXQgdGhpcy5ydW5zLnBvbGwocnVuLmlkLCB7IHRocmVhZF9pZDogcnVuLnRocmVhZF9pZCB9LCBvcHRpb25zKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ3JlYXRlIGEgdGhyZWFkIGFuZCBzdHJlYW0gdGhlIHJ1biBiYWNrXG4gICAgICovXG4gICAgY3JlYXRlQW5kUnVuU3RyZWFtKGJvZHksIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIEFzc2lzdGFudFN0cmVhbS5jcmVhdGVUaHJlYWRBc3Npc3RhbnRTdHJlYW0oYm9keSwgdGhpcy5fY2xpZW50LmJldGEudGhyZWFkcywgb3B0aW9ucyk7XG4gICAgfVxufVxuVGhyZWFkcy5SdW5zID0gUnVucztcblRocmVhZHMuTWVzc2FnZXMgPSBNZXNzYWdlcztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXRocmVhZHMubWpzLm1hcCJdLCJuYW1lcyI6WyJBUElSZXNvdXJjZSIsIk1lc3NhZ2VzQVBJIiwiTWVzc2FnZXMiLCJSdW5zQVBJIiwiUnVucyIsImJ1aWxkSGVhZGVycyIsIkFzc2lzdGFudFN0cmVhbSIsInBhdGgiLCJUaHJlYWRzIiwiY29uc3RydWN0b3IiLCJhcmd1bWVudHMiLCJydW5zIiwiX2NsaWVudCIsIm1lc3NhZ2VzIiwiY3JlYXRlIiwiYm9keSIsIm9wdGlvbnMiLCJwb3N0IiwiaGVhZGVycyIsInJldHJpZXZlIiwidGhyZWFkSUQiLCJnZXQiLCJ1cGRhdGUiLCJkZWxldGUiLCJjcmVhdGVBbmRSdW4iLCJzdHJlYW0iLCJjcmVhdGVBbmRSdW5Qb2xsIiwicnVuIiwicG9sbCIsImlkIiwidGhyZWFkX2lkIiwiY3JlYXRlQW5kUnVuU3RyZWFtIiwiY3JlYXRlVGhyZWFkQXNzaXN0YW50U3RyZWFtIiwiYmV0YSIsInRocmVhZHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/resources/beta/threads/threads.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/resources/chat/chat.mjs":
/*!*****************************************************!*\
  !*** ./node_modules/openai/resources/chat/chat.mjs ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Chat: () => (/* binding */ Chat)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/resource.mjs */ \"(rsc)/./node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _completions_completions_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./completions/completions.mjs */ \"(rsc)/./node_modules/openai/resources/chat/completions/completions.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\nclass Chat extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    constructor(){\n        super(...arguments);\n        this.completions = new _completions_completions_mjs__WEBPACK_IMPORTED_MODULE_1__.Completions(this._client);\n    }\n}\nChat.Completions = _completions_completions_mjs__WEBPACK_IMPORTED_MODULE_1__.Completions; //# sourceMappingURL=chat.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9jaGF0L2NoYXQubWpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLHNGQUFzRjtBQUNoQztBQUNVO0FBQ0g7QUFDdEQsTUFBTUcsYUFBYUgsMkRBQVdBO0lBQ2pDSSxhQUFjO1FBQ1YsS0FBSyxJQUFJQztRQUNULElBQUksQ0FBQ0MsV0FBVyxHQUFHLElBQUlMLHFFQUEwQixDQUFDLElBQUksQ0FBQ00sT0FBTztJQUNsRTtBQUNKO0FBQ0FKLEtBQUtELFdBQVcsR0FBR0EscUVBQVdBLEVBQzlCLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL3N5c3RlbS1wcm9tcHQtdG9vbC13ZWIvLi9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9jaGF0L2NoYXQubWpzPzkwYzEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZSBnZW5lcmF0ZWQgZnJvbSBvdXIgT3BlbkFQSSBzcGVjIGJ5IFN0YWlubGVzcy4gU2VlIENPTlRSSUJVVElORy5tZCBmb3IgZGV0YWlscy5cbmltcG9ydCB7IEFQSVJlc291cmNlIH0gZnJvbSBcIi4uLy4uL2NvcmUvcmVzb3VyY2UubWpzXCI7XG5pbXBvcnQgKiBhcyBDb21wbGV0aW9uc0FQSSBmcm9tIFwiLi9jb21wbGV0aW9ucy9jb21wbGV0aW9ucy5tanNcIjtcbmltcG9ydCB7IENvbXBsZXRpb25zLCB9IGZyb20gXCIuL2NvbXBsZXRpb25zL2NvbXBsZXRpb25zLm1qc1wiO1xuZXhwb3J0IGNsYXNzIENoYXQgZXh0ZW5kcyBBUElSZXNvdXJjZSB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XG4gICAgICAgIHRoaXMuY29tcGxldGlvbnMgPSBuZXcgQ29tcGxldGlvbnNBUEkuQ29tcGxldGlvbnModGhpcy5fY2xpZW50KTtcbiAgICB9XG59XG5DaGF0LkNvbXBsZXRpb25zID0gQ29tcGxldGlvbnM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jaGF0Lm1qcy5tYXAiXSwibmFtZXMiOlsiQVBJUmVzb3VyY2UiLCJDb21wbGV0aW9uc0FQSSIsIkNvbXBsZXRpb25zIiwiQ2hhdCIsImNvbnN0cnVjdG9yIiwiYXJndW1lbnRzIiwiY29tcGxldGlvbnMiLCJfY2xpZW50Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/resources/chat/chat.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/resources/chat/completions/completions.mjs":
/*!************************************************************************!*\
  !*** ./node_modules/openai/resources/chat/completions/completions.mjs ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChatCompletionRunner: () => (/* reexport safe */ _lib_ChatCompletionRunner_mjs__WEBPACK_IMPORTED_MODULE_4__.ChatCompletionRunner),\n/* harmony export */   ChatCompletionStream: () => (/* reexport safe */ _lib_ChatCompletionStream_mjs__WEBPACK_IMPORTED_MODULE_6__.ChatCompletionStream),\n/* harmony export */   ChatCompletionStreamingRunner: () => (/* reexport safe */ _lib_ChatCompletionStreamingRunner_mjs__WEBPACK_IMPORTED_MODULE_5__.ChatCompletionStreamingRunner),\n/* harmony export */   Completions: () => (/* binding */ Completions),\n/* harmony export */   ParsingToolFunction: () => (/* reexport safe */ _lib_RunnableFunction_mjs__WEBPACK_IMPORTED_MODULE_8__.ParsingToolFunction)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/resource.mjs */ \"(rsc)/./node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _messages_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./messages.mjs */ \"(rsc)/./node_modules/openai/resources/chat/completions/messages.mjs\");\n/* harmony import */ var _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../core/pagination.mjs */ \"(rsc)/./node_modules/openai/core/pagination.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../internal/utils/path.mjs */ \"(rsc)/./node_modules/openai/internal/utils/path.mjs\");\n/* harmony import */ var _lib_ChatCompletionRunner_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../lib/ChatCompletionRunner.mjs */ \"(rsc)/./node_modules/openai/lib/ChatCompletionRunner.mjs\");\n/* harmony import */ var _lib_ChatCompletionStreamingRunner_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../lib/ChatCompletionStreamingRunner.mjs */ \"(rsc)/./node_modules/openai/lib/ChatCompletionStreamingRunner.mjs\");\n/* harmony import */ var _lib_ChatCompletionStream_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../lib/ChatCompletionStream.mjs */ \"(rsc)/./node_modules/openai/lib/ChatCompletionStream.mjs\");\n/* harmony import */ var _lib_parser_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../lib/parser.mjs */ \"(rsc)/./node_modules/openai/lib/parser.mjs\");\n/* harmony import */ var _lib_RunnableFunction_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../lib/RunnableFunction.mjs */ \"(rsc)/./node_modules/openai/lib/RunnableFunction.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\n\n\n\n\n\n\nclass Completions extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    constructor(){\n        super(...arguments);\n        this.messages = new _messages_mjs__WEBPACK_IMPORTED_MODULE_1__.Messages(this._client);\n    }\n    create(body, options) {\n        return this._client.post(\"/chat/completions\", {\n            body,\n            ...options,\n            stream: body.stream ?? false\n        });\n    }\n    /**\n     * Get a stored chat completion. Only Chat Completions that have been created with\n     * the `store` parameter set to `true` will be returned.\n     *\n     * @example\n     * ```ts\n     * const chatCompletion =\n     *   await client.chat.completions.retrieve('completion_id');\n     * ```\n     */ retrieve(completionID, options) {\n        return this._client.get(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__.path`/chat/completions/${completionID}`, options);\n    }\n    /**\n     * Modify a stored chat completion. Only Chat Completions that have been created\n     * with the `store` parameter set to `true` can be modified. Currently, the only\n     * supported modification is to update the `metadata` field.\n     *\n     * @example\n     * ```ts\n     * const chatCompletion = await client.chat.completions.update(\n     *   'completion_id',\n     *   { metadata: { foo: 'string' } },\n     * );\n     * ```\n     */ update(completionID, body, options) {\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__.path`/chat/completions/${completionID}`, {\n            body,\n            ...options\n        });\n    }\n    /**\n     * List stored Chat Completions. Only Chat Completions that have been stored with\n     * the `store` parameter set to `true` will be returned.\n     *\n     * @example\n     * ```ts\n     * // Automatically fetches more pages as needed.\n     * for await (const chatCompletion of client.chat.completions.list()) {\n     *   // ...\n     * }\n     * ```\n     */ list(query = {}, options) {\n        return this._client.getAPIList(\"/chat/completions\", _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_2__.CursorPage, {\n            query,\n            ...options\n        });\n    }\n    /**\n     * Delete a stored chat completion. Only Chat Completions that have been created\n     * with the `store` parameter set to `true` can be deleted.\n     *\n     * @example\n     * ```ts\n     * const chatCompletionDeleted =\n     *   await client.chat.completions.delete('completion_id');\n     * ```\n     */ delete(completionID, options) {\n        return this._client.delete(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__.path`/chat/completions/${completionID}`, options);\n    }\n    parse(body, options) {\n        (0,_lib_parser_mjs__WEBPACK_IMPORTED_MODULE_7__.validateInputTools)(body.tools);\n        return this._client.chat.completions.create(body, {\n            ...options,\n            headers: {\n                ...options?.headers,\n                \"X-Stainless-Helper-Method\": \"chat.completions.parse\"\n            }\n        })._thenUnwrap((completion)=>(0,_lib_parser_mjs__WEBPACK_IMPORTED_MODULE_7__.parseChatCompletion)(completion, body));\n    }\n    runTools(body, options) {\n        if (body.stream) {\n            return _lib_ChatCompletionStreamingRunner_mjs__WEBPACK_IMPORTED_MODULE_5__.ChatCompletionStreamingRunner.runTools(this._client, body, options);\n        }\n        return _lib_ChatCompletionRunner_mjs__WEBPACK_IMPORTED_MODULE_4__.ChatCompletionRunner.runTools(this._client, body, options);\n    }\n    /**\n     * Creates a chat completion stream\n     */ stream(body, options) {\n        return _lib_ChatCompletionStream_mjs__WEBPACK_IMPORTED_MODULE_6__.ChatCompletionStream.createChatCompletion(this._client, body, options);\n    }\n}\n\n\n\n\nCompletions.Messages = _messages_mjs__WEBPACK_IMPORTED_MODULE_1__.Messages; //# sourceMappingURL=completions.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/resources/chat/completions/completions.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/resources/chat/completions/index.mjs":
/*!******************************************************************!*\
  !*** ./node_modules/openai/resources/chat/completions/index.mjs ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChatCompletionRunner: () => (/* reexport safe */ _completions_mjs__WEBPACK_IMPORTED_MODULE_0__.ChatCompletionRunner),\n/* harmony export */   ChatCompletionStream: () => (/* reexport safe */ _completions_mjs__WEBPACK_IMPORTED_MODULE_0__.ChatCompletionStream),\n/* harmony export */   ChatCompletionStreamingRunner: () => (/* reexport safe */ _completions_mjs__WEBPACK_IMPORTED_MODULE_0__.ChatCompletionStreamingRunner),\n/* harmony export */   Completions: () => (/* reexport safe */ _completions_mjs__WEBPACK_IMPORTED_MODULE_0__.Completions),\n/* harmony export */   Messages: () => (/* reexport safe */ _messages_mjs__WEBPACK_IMPORTED_MODULE_1__.Messages),\n/* harmony export */   ParsingToolFunction: () => (/* reexport safe */ _completions_mjs__WEBPACK_IMPORTED_MODULE_0__.ParsingToolFunction)\n/* harmony export */ });\n/* harmony import */ var _completions_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./completions.mjs */ \"(rsc)/./node_modules/openai/resources/chat/completions/completions.mjs\");\n/* harmony import */ var _messages_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./messages.mjs */ \"(rsc)/./node_modules/openai/resources/chat/completions/messages.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n //# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9jaGF0L2NvbXBsZXRpb25zL2luZGV4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBLHNGQUFzRjtBQUNyQztBQUNmO0FBQ1EsQ0FDMUMsa0NBQWtDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3lzdGVtLXByb21wdC10b29sLXdlYi8uL25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2NoYXQvY29tcGxldGlvbnMvaW5kZXgubWpzPzc4NTciXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZSBnZW5lcmF0ZWQgZnJvbSBvdXIgT3BlbkFQSSBzcGVjIGJ5IFN0YWlubGVzcy4gU2VlIENPTlRSSUJVVElORy5tZCBmb3IgZGV0YWlscy5cbmV4cG9ydCB7IENvbXBsZXRpb25zLCB9IGZyb20gXCIuL2NvbXBsZXRpb25zLm1qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vY29tcGxldGlvbnMubWpzXCI7XG5leHBvcnQgeyBNZXNzYWdlcyB9IGZyb20gXCIuL21lc3NhZ2VzLm1qc1wiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXgubWpzLm1hcCJdLCJuYW1lcyI6WyJDb21wbGV0aW9ucyIsIk1lc3NhZ2VzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/resources/chat/completions/index.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/resources/chat/completions/messages.mjs":
/*!*********************************************************************!*\
  !*** ./node_modules/openai/resources/chat/completions/messages.mjs ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Messages: () => (/* binding */ Messages)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/resource.mjs */ \"(rsc)/./node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../core/pagination.mjs */ \"(rsc)/./node_modules/openai/core/pagination.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../internal/utils/path.mjs */ \"(rsc)/./node_modules/openai/internal/utils/path.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\nclass Messages extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * Get the messages in a stored chat completion. Only Chat Completions that have\n     * been created with the `store` parameter set to `true` will be returned.\n     *\n     * @example\n     * ```ts\n     * // Automatically fetches more pages as needed.\n     * for await (const chatCompletionStoreMessage of client.chat.completions.messages.list(\n     *   'completion_id',\n     * )) {\n     *   // ...\n     * }\n     * ```\n     */ list(completionID, query = {}, options) {\n        return this._client.getAPIList(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__.path`/chat/completions/${completionID}/messages`, _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__.CursorPage, {\n            query,\n            ...options\n        });\n    }\n} //# sourceMappingURL=messages.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9jaGF0L2NvbXBsZXRpb25zL21lc3NhZ2VzLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUEsc0ZBQXNGO0FBQzdCO0FBQ0M7QUFDRjtBQUNqRCxNQUFNRyxpQkFBaUJILDJEQUFXQTtJQUNyQzs7Ozs7Ozs7Ozs7OztLQWFDLEdBQ0RJLEtBQUtDLFlBQVksRUFBRUMsUUFBUSxDQUFDLENBQUMsRUFBRUMsT0FBTyxFQUFFO1FBQ3BDLE9BQU8sSUFBSSxDQUFDQyxPQUFPLENBQUNDLFVBQVUsQ0FBQ1AsMERBQUssQ0FBQyxrQkFBa0IsRUFBRUcsYUFBYSxTQUFTLENBQUMsRUFBR0osNERBQVVBLEVBQUc7WUFBRUs7WUFBTyxHQUFHQyxPQUFPO1FBQUM7SUFDeEg7QUFDSixFQUNBLHFDQUFxQyIsInNvdXJjZXMiOlsid2VicGFjazovL3N5c3RlbS1wcm9tcHQtdG9vbC13ZWIvLi9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9jaGF0L2NvbXBsZXRpb25zL21lc3NhZ2VzLm1qcz8yMzQyIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG5pbXBvcnQgeyBBUElSZXNvdXJjZSB9IGZyb20gXCIuLi8uLi8uLi9jb3JlL3Jlc291cmNlLm1qc1wiO1xuaW1wb3J0IHsgQ3Vyc29yUGFnZSB9IGZyb20gXCIuLi8uLi8uLi9jb3JlL3BhZ2luYXRpb24ubWpzXCI7XG5pbXBvcnQgeyBwYXRoIH0gZnJvbSBcIi4uLy4uLy4uL2ludGVybmFsL3V0aWxzL3BhdGgubWpzXCI7XG5leHBvcnQgY2xhc3MgTWVzc2FnZXMgZXh0ZW5kcyBBUElSZXNvdXJjZSB7XG4gICAgLyoqXG4gICAgICogR2V0IHRoZSBtZXNzYWdlcyBpbiBhIHN0b3JlZCBjaGF0IGNvbXBsZXRpb24uIE9ubHkgQ2hhdCBDb21wbGV0aW9ucyB0aGF0IGhhdmVcbiAgICAgKiBiZWVuIGNyZWF0ZWQgd2l0aCB0aGUgYHN0b3JlYCBwYXJhbWV0ZXIgc2V0IHRvIGB0cnVlYCB3aWxsIGJlIHJldHVybmVkLlxuICAgICAqXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBgYGB0c1xuICAgICAqIC8vIEF1dG9tYXRpY2FsbHkgZmV0Y2hlcyBtb3JlIHBhZ2VzIGFzIG5lZWRlZC5cbiAgICAgKiBmb3IgYXdhaXQgKGNvbnN0IGNoYXRDb21wbGV0aW9uU3RvcmVNZXNzYWdlIG9mIGNsaWVudC5jaGF0LmNvbXBsZXRpb25zLm1lc3NhZ2VzLmxpc3QoXG4gICAgICogICAnY29tcGxldGlvbl9pZCcsXG4gICAgICogKSkge1xuICAgICAqICAgLy8gLi4uXG4gICAgICogfVxuICAgICAqIGBgYFxuICAgICAqL1xuICAgIGxpc3QoY29tcGxldGlvbklELCBxdWVyeSA9IHt9LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZ2V0QVBJTGlzdChwYXRoIGAvY2hhdC9jb21wbGV0aW9ucy8ke2NvbXBsZXRpb25JRH0vbWVzc2FnZXNgLCAoQ3Vyc29yUGFnZSksIHsgcXVlcnksIC4uLm9wdGlvbnMgfSk7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bWVzc2FnZXMubWpzLm1hcCJdLCJuYW1lcyI6WyJBUElSZXNvdXJjZSIsIkN1cnNvclBhZ2UiLCJwYXRoIiwiTWVzc2FnZXMiLCJsaXN0IiwiY29tcGxldGlvbklEIiwicXVlcnkiLCJvcHRpb25zIiwiX2NsaWVudCIsImdldEFQSUxpc3QiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/resources/chat/completions/messages.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/resources/chat/index.mjs":
/*!******************************************************!*\
  !*** ./node_modules/openai/resources/chat/index.mjs ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Chat: () => (/* reexport safe */ _chat_mjs__WEBPACK_IMPORTED_MODULE_0__.Chat),\n/* harmony export */   Completions: () => (/* reexport safe */ _completions_index_mjs__WEBPACK_IMPORTED_MODULE_1__.Completions)\n/* harmony export */ });\n/* harmony import */ var _chat_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chat.mjs */ \"(rsc)/./node_modules/openai/resources/chat/chat.mjs\");\n/* harmony import */ var _completions_index_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./completions/index.mjs */ \"(rsc)/./node_modules/openai/resources/chat/completions/index.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n //# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9jaGF0L2luZGV4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUEsc0ZBQXNGO0FBQ3BEO0FBQ3FCLENBQ3ZELGtDQUFrQyIsInNvdXJjZXMiOlsid2VicGFjazovL3N5c3RlbS1wcm9tcHQtdG9vbC13ZWIvLi9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9jaGF0L2luZGV4Lm1qcz82MjNlIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG5leHBvcnQgeyBDaGF0IH0gZnJvbSBcIi4vY2hhdC5tanNcIjtcbmV4cG9ydCB7IENvbXBsZXRpb25zLCB9IGZyb20gXCIuL2NvbXBsZXRpb25zL2luZGV4Lm1qc1wiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXgubWpzLm1hcCJdLCJuYW1lcyI6WyJDaGF0IiwiQ29tcGxldGlvbnMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/resources/chat/index.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/resources/completions.mjs":
/*!*******************************************************!*\
  !*** ./node_modules/openai/resources/completions.mjs ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Completions: () => (/* binding */ Completions)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/resource.mjs */ \"(rsc)/./node_modules/openai/core/resource.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nclass Completions extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    create(body, options) {\n        return this._client.post(\"/completions\", {\n            body,\n            ...options,\n            stream: body.stream ?? false\n        });\n    }\n} //# sourceMappingURL=completions.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9jb21wbGV0aW9ucy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxzRkFBc0Y7QUFDbkM7QUFDNUMsTUFBTUMsb0JBQW9CRCwyREFBV0E7SUFDeENFLE9BQU9DLElBQUksRUFBRUMsT0FBTyxFQUFFO1FBQ2xCLE9BQU8sSUFBSSxDQUFDQyxPQUFPLENBQUNDLElBQUksQ0FBQyxnQkFBZ0I7WUFBRUg7WUFBTSxHQUFHQyxPQUFPO1lBQUVHLFFBQVFKLEtBQUtJLE1BQU0sSUFBSTtRQUFNO0lBQzlGO0FBQ0osRUFDQSx3Q0FBd0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zeXN0ZW0tcHJvbXB0LXRvb2wtd2ViLy4vbm9kZV9tb2R1bGVzL29wZW5haS9yZXNvdXJjZXMvY29tcGxldGlvbnMubWpzP2E0ODEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZSBnZW5lcmF0ZWQgZnJvbSBvdXIgT3BlbkFQSSBzcGVjIGJ5IFN0YWlubGVzcy4gU2VlIENPTlRSSUJVVElORy5tZCBmb3IgZGV0YWlscy5cbmltcG9ydCB7IEFQSVJlc291cmNlIH0gZnJvbSBcIi4uL2NvcmUvcmVzb3VyY2UubWpzXCI7XG5leHBvcnQgY2xhc3MgQ29tcGxldGlvbnMgZXh0ZW5kcyBBUElSZXNvdXJjZSB7XG4gICAgY3JlYXRlKGJvZHksIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5wb3N0KCcvY29tcGxldGlvbnMnLCB7IGJvZHksIC4uLm9wdGlvbnMsIHN0cmVhbTogYm9keS5zdHJlYW0gPz8gZmFsc2UgfSk7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29tcGxldGlvbnMubWpzLm1hcCJdLCJuYW1lcyI6WyJBUElSZXNvdXJjZSIsIkNvbXBsZXRpb25zIiwiY3JlYXRlIiwiYm9keSIsIm9wdGlvbnMiLCJfY2xpZW50IiwicG9zdCIsInN0cmVhbSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/resources/completions.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/resources/containers/containers.mjs":
/*!*****************************************************************!*\
  !*** ./node_modules/openai/resources/containers/containers.mjs ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Containers: () => (/* binding */ Containers)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/resource.mjs */ \"(rsc)/./node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _files_files_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./files/files.mjs */ \"(rsc)/./node_modules/openai/resources/containers/files/files.mjs\");\n/* harmony import */ var _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/pagination.mjs */ \"(rsc)/./node_modules/openai/core/pagination.mjs\");\n/* harmony import */ var _internal_headers_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../internal/headers.mjs */ \"(rsc)/./node_modules/openai/internal/headers.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../internal/utils/path.mjs */ \"(rsc)/./node_modules/openai/internal/utils/path.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\n\n\n\nclass Containers extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    constructor(){\n        super(...arguments);\n        this.files = new _files_files_mjs__WEBPACK_IMPORTED_MODULE_1__.Files(this._client);\n    }\n    /**\n     * Create Container\n     */ create(body, options) {\n        return this._client.post(\"/containers\", {\n            body,\n            ...options\n        });\n    }\n    /**\n     * Retrieve Container\n     */ retrieve(containerID, options) {\n        return this._client.get(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_4__.path`/containers/${containerID}`, options);\n    }\n    /**\n     * List Containers\n     */ list(query = {}, options) {\n        return this._client.getAPIList(\"/containers\", _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_2__.CursorPage, {\n            query,\n            ...options\n        });\n    }\n    /**\n     * Delete Container\n     */ delete(containerID, options) {\n        return this._client.delete(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_4__.path`/containers/${containerID}`, {\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_3__.buildHeaders)([\n                {\n                    Accept: \"*/*\"\n                },\n                options?.headers\n            ])\n        });\n    }\n}\nContainers.Files = _files_files_mjs__WEBPACK_IMPORTED_MODULE_1__.Files; //# sourceMappingURL=containers.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9jb250YWluZXJzL2NvbnRhaW5lcnMubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBLHNGQUFzRjtBQUNoQztBQUNSO0FBQ0g7QUFDWTtBQUNHO0FBQ0w7QUFDOUMsTUFBTU0sbUJBQW1CTiwyREFBV0E7SUFDdkNPLGFBQWM7UUFDVixLQUFLLElBQUlDO1FBQ1QsSUFBSSxDQUFDQyxLQUFLLEdBQUcsSUFBSVIsbURBQWMsQ0FBQyxJQUFJLENBQUNTLE9BQU87SUFDaEQ7SUFDQTs7S0FFQyxHQUNEQyxPQUFPQyxJQUFJLEVBQUVDLE9BQU8sRUFBRTtRQUNsQixPQUFPLElBQUksQ0FBQ0gsT0FBTyxDQUFDSSxJQUFJLENBQUMsZUFBZTtZQUFFRjtZQUFNLEdBQUdDLE9BQU87UUFBQztJQUMvRDtJQUNBOztLQUVDLEdBQ0RFLFNBQVNDLFdBQVcsRUFBRUgsT0FBTyxFQUFFO1FBQzNCLE9BQU8sSUFBSSxDQUFDSCxPQUFPLENBQUNPLEdBQUcsQ0FBQ1osMERBQUssQ0FBQyxZQUFZLEVBQUVXLFlBQVksQ0FBQyxFQUFFSDtJQUMvRDtJQUNBOztLQUVDLEdBQ0RLLEtBQUtDLFFBQVEsQ0FBQyxDQUFDLEVBQUVOLE9BQU8sRUFBRTtRQUN0QixPQUFPLElBQUksQ0FBQ0gsT0FBTyxDQUFDVSxVQUFVLENBQUMsZUFBZ0JqQiw0REFBVUEsRUFBRztZQUFFZ0I7WUFBTyxHQUFHTixPQUFPO1FBQUM7SUFDcEY7SUFDQTs7S0FFQyxHQUNEUSxPQUFPTCxXQUFXLEVBQUVILE9BQU8sRUFBRTtRQUN6QixPQUFPLElBQUksQ0FBQ0gsT0FBTyxDQUFDVyxNQUFNLENBQUNoQiwwREFBSyxDQUFDLFlBQVksRUFBRVcsWUFBWSxDQUFDLEVBQUU7WUFDMUQsR0FBR0gsT0FBTztZQUNWUyxTQUFTbEIsbUVBQVlBLENBQUM7Z0JBQUM7b0JBQUVtQixRQUFRO2dCQUFNO2dCQUFHVixTQUFTUzthQUFRO1FBQy9EO0lBQ0o7QUFDSjtBQUNBaEIsV0FBV0osS0FBSyxHQUFHQSxtREFBS0EsRUFDeEIsdUNBQXVDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3lzdGVtLXByb21wdC10b29sLXdlYi8uL25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2NvbnRhaW5lcnMvY29udGFpbmVycy5tanM/OWEzYyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlIGdlbmVyYXRlZCBmcm9tIG91ciBPcGVuQVBJIHNwZWMgYnkgU3RhaW5sZXNzLiBTZWUgQ09OVFJJQlVUSU5HLm1kIGZvciBkZXRhaWxzLlxuaW1wb3J0IHsgQVBJUmVzb3VyY2UgfSBmcm9tIFwiLi4vLi4vY29yZS9yZXNvdXJjZS5tanNcIjtcbmltcG9ydCAqIGFzIEZpbGVzQVBJIGZyb20gXCIuL2ZpbGVzL2ZpbGVzLm1qc1wiO1xuaW1wb3J0IHsgRmlsZXMsIH0gZnJvbSBcIi4vZmlsZXMvZmlsZXMubWpzXCI7XG5pbXBvcnQgeyBDdXJzb3JQYWdlIH0gZnJvbSBcIi4uLy4uL2NvcmUvcGFnaW5hdGlvbi5tanNcIjtcbmltcG9ydCB7IGJ1aWxkSGVhZGVycyB9IGZyb20gXCIuLi8uLi9pbnRlcm5hbC9oZWFkZXJzLm1qc1wiO1xuaW1wb3J0IHsgcGF0aCB9IGZyb20gXCIuLi8uLi9pbnRlcm5hbC91dGlscy9wYXRoLm1qc1wiO1xuZXhwb3J0IGNsYXNzIENvbnRhaW5lcnMgZXh0ZW5kcyBBUElSZXNvdXJjZSB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XG4gICAgICAgIHRoaXMuZmlsZXMgPSBuZXcgRmlsZXNBUEkuRmlsZXModGhpcy5fY2xpZW50KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ3JlYXRlIENvbnRhaW5lclxuICAgICAqL1xuICAgIGNyZWF0ZShib2R5LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQucG9zdCgnL2NvbnRhaW5lcnMnLCB7IGJvZHksIC4uLm9wdGlvbnMgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHJpZXZlIENvbnRhaW5lclxuICAgICAqL1xuICAgIHJldHJpZXZlKGNvbnRhaW5lcklELCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZ2V0KHBhdGggYC9jb250YWluZXJzLyR7Y29udGFpbmVySUR9YCwgb3B0aW9ucyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIExpc3QgQ29udGFpbmVyc1xuICAgICAqL1xuICAgIGxpc3QocXVlcnkgPSB7fSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmdldEFQSUxpc3QoJy9jb250YWluZXJzJywgKEN1cnNvclBhZ2UpLCB7IHF1ZXJ5LCAuLi5vcHRpb25zIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBEZWxldGUgQ29udGFpbmVyXG4gICAgICovXG4gICAgZGVsZXRlKGNvbnRhaW5lcklELCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZGVsZXRlKHBhdGggYC9jb250YWluZXJzLyR7Y29udGFpbmVySUR9YCwge1xuICAgICAgICAgICAgLi4ub3B0aW9ucyxcbiAgICAgICAgICAgIGhlYWRlcnM6IGJ1aWxkSGVhZGVycyhbeyBBY2NlcHQ6ICcqLyonIH0sIG9wdGlvbnM/LmhlYWRlcnNdKSxcbiAgICAgICAgfSk7XG4gICAgfVxufVxuQ29udGFpbmVycy5GaWxlcyA9IEZpbGVzO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29udGFpbmVycy5tanMubWFwIl0sIm5hbWVzIjpbIkFQSVJlc291cmNlIiwiRmlsZXNBUEkiLCJGaWxlcyIsIkN1cnNvclBhZ2UiLCJidWlsZEhlYWRlcnMiLCJwYXRoIiwiQ29udGFpbmVycyIsImNvbnN0cnVjdG9yIiwiYXJndW1lbnRzIiwiZmlsZXMiLCJfY2xpZW50IiwiY3JlYXRlIiwiYm9keSIsIm9wdGlvbnMiLCJwb3N0IiwicmV0cmlldmUiLCJjb250YWluZXJJRCIsImdldCIsImxpc3QiLCJxdWVyeSIsImdldEFQSUxpc3QiLCJkZWxldGUiLCJoZWFkZXJzIiwiQWNjZXB0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/resources/containers/containers.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/resources/containers/files/content.mjs":
/*!********************************************************************!*\
  !*** ./node_modules/openai/resources/containers/files/content.mjs ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Content: () => (/* binding */ Content)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/resource.mjs */ \"(rsc)/./node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _internal_headers_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../internal/headers.mjs */ \"(rsc)/./node_modules/openai/internal/headers.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../internal/utils/path.mjs */ \"(rsc)/./node_modules/openai/internal/utils/path.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\nclass Content extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * Retrieve Container File Content\n     */ retrieve(fileID, params, options) {\n        const { container_id } = params;\n        return this._client.get(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__.path`/containers/${container_id}/files/${fileID}/content`, {\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_1__.buildHeaders)([\n                {\n                    Accept: \"application/binary\"\n                },\n                options?.headers\n            ]),\n            __binaryResponse: true\n        });\n    }\n} //# sourceMappingURL=content.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9jb250YWluZXJzL2ZpbGVzL2NvbnRlbnQubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSxzRkFBc0Y7QUFDN0I7QUFDSTtBQUNMO0FBQ2pELE1BQU1HLGdCQUFnQkgsMkRBQVdBO0lBQ3BDOztLQUVDLEdBQ0RJLFNBQVNDLE1BQU0sRUFBRUMsTUFBTSxFQUFFQyxPQUFPLEVBQUU7UUFDOUIsTUFBTSxFQUFFQyxZQUFZLEVBQUUsR0FBR0Y7UUFDekIsT0FBTyxJQUFJLENBQUNHLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDUiwwREFBSyxDQUFDLFlBQVksRUFBRU0sYUFBYSxPQUFPLEVBQUVILE9BQU8sUUFBUSxDQUFDLEVBQUU7WUFDaEYsR0FBR0UsT0FBTztZQUNWSSxTQUFTVixtRUFBWUEsQ0FBQztnQkFBQztvQkFBRVcsUUFBUTtnQkFBcUI7Z0JBQUdMLFNBQVNJO2FBQVE7WUFDMUVFLGtCQUFrQjtRQUN0QjtJQUNKO0FBQ0osRUFDQSxvQ0FBb0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zeXN0ZW0tcHJvbXB0LXRvb2wtd2ViLy4vbm9kZV9tb2R1bGVzL29wZW5haS9yZXNvdXJjZXMvY29udGFpbmVycy9maWxlcy9jb250ZW50Lm1qcz9jNDM4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG5pbXBvcnQgeyBBUElSZXNvdXJjZSB9IGZyb20gXCIuLi8uLi8uLi9jb3JlL3Jlc291cmNlLm1qc1wiO1xuaW1wb3J0IHsgYnVpbGRIZWFkZXJzIH0gZnJvbSBcIi4uLy4uLy4uL2ludGVybmFsL2hlYWRlcnMubWpzXCI7XG5pbXBvcnQgeyBwYXRoIH0gZnJvbSBcIi4uLy4uLy4uL2ludGVybmFsL3V0aWxzL3BhdGgubWpzXCI7XG5leHBvcnQgY2xhc3MgQ29udGVudCBleHRlbmRzIEFQSVJlc291cmNlIHtcbiAgICAvKipcbiAgICAgKiBSZXRyaWV2ZSBDb250YWluZXIgRmlsZSBDb250ZW50XG4gICAgICovXG4gICAgcmV0cmlldmUoZmlsZUlELCBwYXJhbXMsIG9wdGlvbnMpIHtcbiAgICAgICAgY29uc3QgeyBjb250YWluZXJfaWQgfSA9IHBhcmFtcztcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5nZXQocGF0aCBgL2NvbnRhaW5lcnMvJHtjb250YWluZXJfaWR9L2ZpbGVzLyR7ZmlsZUlEfS9jb250ZW50YCwge1xuICAgICAgICAgICAgLi4ub3B0aW9ucyxcbiAgICAgICAgICAgIGhlYWRlcnM6IGJ1aWxkSGVhZGVycyhbeyBBY2NlcHQ6ICdhcHBsaWNhdGlvbi9iaW5hcnknIH0sIG9wdGlvbnM/LmhlYWRlcnNdKSxcbiAgICAgICAgICAgIF9fYmluYXJ5UmVzcG9uc2U6IHRydWUsXG4gICAgICAgIH0pO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbnRlbnQubWpzLm1hcCJdLCJuYW1lcyI6WyJBUElSZXNvdXJjZSIsImJ1aWxkSGVhZGVycyIsInBhdGgiLCJDb250ZW50IiwicmV0cmlldmUiLCJmaWxlSUQiLCJwYXJhbXMiLCJvcHRpb25zIiwiY29udGFpbmVyX2lkIiwiX2NsaWVudCIsImdldCIsImhlYWRlcnMiLCJBY2NlcHQiLCJfX2JpbmFyeVJlc3BvbnNlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/resources/containers/files/content.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/resources/containers/files/files.mjs":
/*!******************************************************************!*\
  !*** ./node_modules/openai/resources/containers/files/files.mjs ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Files: () => (/* binding */ Files)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/resource.mjs */ \"(rsc)/./node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _content_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./content.mjs */ \"(rsc)/./node_modules/openai/resources/containers/files/content.mjs\");\n/* harmony import */ var _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../core/pagination.mjs */ \"(rsc)/./node_modules/openai/core/pagination.mjs\");\n/* harmony import */ var _internal_headers_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../internal/headers.mjs */ \"(rsc)/./node_modules/openai/internal/headers.mjs\");\n/* harmony import */ var _internal_uploads_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../internal/uploads.mjs */ \"(rsc)/./node_modules/openai/internal/uploads.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../internal/utils/path.mjs */ \"(rsc)/./node_modules/openai/internal/utils/path.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\n\n\n\n\nclass Files extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    constructor(){\n        super(...arguments);\n        this.content = new _content_mjs__WEBPACK_IMPORTED_MODULE_1__.Content(this._client);\n    }\n    /**\n     * Create a Container File\n     *\n     * You can send either a multipart/form-data request with the raw file content, or\n     * a JSON request with a file ID.\n     */ create(containerID, body, options) {\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_5__.path`/containers/${containerID}/files`, (0,_internal_uploads_mjs__WEBPACK_IMPORTED_MODULE_4__.multipartFormRequestOptions)({\n            body,\n            ...options\n        }, this._client));\n    }\n    /**\n     * Retrieve Container File\n     */ retrieve(fileID, params, options) {\n        const { container_id } = params;\n        return this._client.get(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_5__.path`/containers/${container_id}/files/${fileID}`, options);\n    }\n    /**\n     * List Container files\n     */ list(containerID, query = {}, options) {\n        return this._client.getAPIList(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_5__.path`/containers/${containerID}/files`, _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_2__.CursorPage, {\n            query,\n            ...options\n        });\n    }\n    /**\n     * Delete Container File\n     */ delete(fileID, params, options) {\n        const { container_id } = params;\n        return this._client.delete(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_5__.path`/containers/${container_id}/files/${fileID}`, {\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_3__.buildHeaders)([\n                {\n                    Accept: \"*/*\"\n                },\n                options?.headers\n            ])\n        });\n    }\n}\nFiles.Content = _content_mjs__WEBPACK_IMPORTED_MODULE_1__.Content; //# sourceMappingURL=files.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9jb250YWluZXJzL2ZpbGVzL2ZpbGVzLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUEsc0ZBQXNGO0FBQzdCO0FBQ2I7QUFDSjtBQUNrQjtBQUNHO0FBQ2U7QUFDcEI7QUFDakQsTUFBTU8sY0FBY1AsMkRBQVdBO0lBQ2xDUSxhQUFjO1FBQ1YsS0FBSyxJQUFJQztRQUNULElBQUksQ0FBQ0MsT0FBTyxHQUFHLElBQUlULGlEQUFrQixDQUFDLElBQUksQ0FBQ1UsT0FBTztJQUN0RDtJQUNBOzs7OztLQUtDLEdBQ0RDLE9BQU9DLFdBQVcsRUFBRUMsSUFBSSxFQUFFQyxPQUFPLEVBQUU7UUFDL0IsT0FBTyxJQUFJLENBQUNKLE9BQU8sQ0FBQ0ssSUFBSSxDQUFDViwwREFBSyxDQUFDLFlBQVksRUFBRU8sWUFBWSxNQUFNLENBQUMsRUFBRVIsa0ZBQTJCQSxDQUFDO1lBQUVTO1lBQU0sR0FBR0MsT0FBTztRQUFDLEdBQUcsSUFBSSxDQUFDSixPQUFPO0lBQ3BJO0lBQ0E7O0tBRUMsR0FDRE0sU0FBU0MsTUFBTSxFQUFFQyxNQUFNLEVBQUVKLE9BQU8sRUFBRTtRQUM5QixNQUFNLEVBQUVLLFlBQVksRUFBRSxHQUFHRDtRQUN6QixPQUFPLElBQUksQ0FBQ1IsT0FBTyxDQUFDVSxHQUFHLENBQUNmLDBEQUFLLENBQUMsWUFBWSxFQUFFYyxhQUFhLE9BQU8sRUFBRUYsT0FBTyxDQUFDLEVBQUVIO0lBQ2hGO0lBQ0E7O0tBRUMsR0FDRE8sS0FBS1QsV0FBVyxFQUFFVSxRQUFRLENBQUMsQ0FBQyxFQUFFUixPQUFPLEVBQUU7UUFDbkMsT0FBTyxJQUFJLENBQUNKLE9BQU8sQ0FBQ2EsVUFBVSxDQUFDbEIsMERBQUssQ0FBQyxZQUFZLEVBQUVPLFlBQVksTUFBTSxDQUFDLEVBQUdWLDREQUFVQSxFQUFHO1lBQ2xGb0I7WUFDQSxHQUFHUixPQUFPO1FBQ2Q7SUFDSjtJQUNBOztLQUVDLEdBQ0RVLE9BQU9QLE1BQU0sRUFBRUMsTUFBTSxFQUFFSixPQUFPLEVBQUU7UUFDNUIsTUFBTSxFQUFFSyxZQUFZLEVBQUUsR0FBR0Q7UUFDekIsT0FBTyxJQUFJLENBQUNSLE9BQU8sQ0FBQ2MsTUFBTSxDQUFDbkIsMERBQUssQ0FBQyxZQUFZLEVBQUVjLGFBQWEsT0FBTyxFQUFFRixPQUFPLENBQUMsRUFBRTtZQUMzRSxHQUFHSCxPQUFPO1lBQ1ZXLFNBQVN0QixtRUFBWUEsQ0FBQztnQkFBQztvQkFBRXVCLFFBQVE7Z0JBQU07Z0JBQUdaLFNBQVNXO2FBQVE7UUFDL0Q7SUFDSjtBQUNKO0FBQ0FuQixNQUFNTCxPQUFPLEdBQUdBLGlEQUFPQSxFQUN2QixrQ0FBa0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zeXN0ZW0tcHJvbXB0LXRvb2wtd2ViLy4vbm9kZV9tb2R1bGVzL29wZW5haS9yZXNvdXJjZXMvY29udGFpbmVycy9maWxlcy9maWxlcy5tanM/MzZmZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlIGdlbmVyYXRlZCBmcm9tIG91ciBPcGVuQVBJIHNwZWMgYnkgU3RhaW5sZXNzLiBTZWUgQ09OVFJJQlVUSU5HLm1kIGZvciBkZXRhaWxzLlxuaW1wb3J0IHsgQVBJUmVzb3VyY2UgfSBmcm9tIFwiLi4vLi4vLi4vY29yZS9yZXNvdXJjZS5tanNcIjtcbmltcG9ydCAqIGFzIENvbnRlbnRBUEkgZnJvbSBcIi4vY29udGVudC5tanNcIjtcbmltcG9ydCB7IENvbnRlbnQgfSBmcm9tIFwiLi9jb250ZW50Lm1qc1wiO1xuaW1wb3J0IHsgQ3Vyc29yUGFnZSB9IGZyb20gXCIuLi8uLi8uLi9jb3JlL3BhZ2luYXRpb24ubWpzXCI7XG5pbXBvcnQgeyBidWlsZEhlYWRlcnMgfSBmcm9tIFwiLi4vLi4vLi4vaW50ZXJuYWwvaGVhZGVycy5tanNcIjtcbmltcG9ydCB7IG11bHRpcGFydEZvcm1SZXF1ZXN0T3B0aW9ucyB9IGZyb20gXCIuLi8uLi8uLi9pbnRlcm5hbC91cGxvYWRzLm1qc1wiO1xuaW1wb3J0IHsgcGF0aCB9IGZyb20gXCIuLi8uLi8uLi9pbnRlcm5hbC91dGlscy9wYXRoLm1qc1wiO1xuZXhwb3J0IGNsYXNzIEZpbGVzIGV4dGVuZHMgQVBJUmVzb3VyY2Uge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgICAgICB0aGlzLmNvbnRlbnQgPSBuZXcgQ29udGVudEFQSS5Db250ZW50KHRoaXMuX2NsaWVudCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENyZWF0ZSBhIENvbnRhaW5lciBGaWxlXG4gICAgICpcbiAgICAgKiBZb3UgY2FuIHNlbmQgZWl0aGVyIGEgbXVsdGlwYXJ0L2Zvcm0tZGF0YSByZXF1ZXN0IHdpdGggdGhlIHJhdyBmaWxlIGNvbnRlbnQsIG9yXG4gICAgICogYSBKU09OIHJlcXVlc3Qgd2l0aCBhIGZpbGUgSUQuXG4gICAgICovXG4gICAgY3JlYXRlKGNvbnRhaW5lcklELCBib2R5LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQucG9zdChwYXRoIGAvY29udGFpbmVycy8ke2NvbnRhaW5lcklEfS9maWxlc2AsIG11bHRpcGFydEZvcm1SZXF1ZXN0T3B0aW9ucyh7IGJvZHksIC4uLm9wdGlvbnMgfSwgdGhpcy5fY2xpZW50KSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHJpZXZlIENvbnRhaW5lciBGaWxlXG4gICAgICovXG4gICAgcmV0cmlldmUoZmlsZUlELCBwYXJhbXMsIG9wdGlvbnMpIHtcbiAgICAgICAgY29uc3QgeyBjb250YWluZXJfaWQgfSA9IHBhcmFtcztcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5nZXQocGF0aCBgL2NvbnRhaW5lcnMvJHtjb250YWluZXJfaWR9L2ZpbGVzLyR7ZmlsZUlEfWAsIG9wdGlvbnMpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBMaXN0IENvbnRhaW5lciBmaWxlc1xuICAgICAqL1xuICAgIGxpc3QoY29udGFpbmVySUQsIHF1ZXJ5ID0ge30sIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5nZXRBUElMaXN0KHBhdGggYC9jb250YWluZXJzLyR7Y29udGFpbmVySUR9L2ZpbGVzYCwgKEN1cnNvclBhZ2UpLCB7XG4gICAgICAgICAgICBxdWVyeSxcbiAgICAgICAgICAgIC4uLm9wdGlvbnMsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBEZWxldGUgQ29udGFpbmVyIEZpbGVcbiAgICAgKi9cbiAgICBkZWxldGUoZmlsZUlELCBwYXJhbXMsIG9wdGlvbnMpIHtcbiAgICAgICAgY29uc3QgeyBjb250YWluZXJfaWQgfSA9IHBhcmFtcztcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5kZWxldGUocGF0aCBgL2NvbnRhaW5lcnMvJHtjb250YWluZXJfaWR9L2ZpbGVzLyR7ZmlsZUlEfWAsIHtcbiAgICAgICAgICAgIC4uLm9wdGlvbnMsXG4gICAgICAgICAgICBoZWFkZXJzOiBidWlsZEhlYWRlcnMoW3sgQWNjZXB0OiAnKi8qJyB9LCBvcHRpb25zPy5oZWFkZXJzXSksXG4gICAgICAgIH0pO1xuICAgIH1cbn1cbkZpbGVzLkNvbnRlbnQgPSBDb250ZW50O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZmlsZXMubWpzLm1hcCJdLCJuYW1lcyI6WyJBUElSZXNvdXJjZSIsIkNvbnRlbnRBUEkiLCJDb250ZW50IiwiQ3Vyc29yUGFnZSIsImJ1aWxkSGVhZGVycyIsIm11bHRpcGFydEZvcm1SZXF1ZXN0T3B0aW9ucyIsInBhdGgiLCJGaWxlcyIsImNvbnN0cnVjdG9yIiwiYXJndW1lbnRzIiwiY29udGVudCIsIl9jbGllbnQiLCJjcmVhdGUiLCJjb250YWluZXJJRCIsImJvZHkiLCJvcHRpb25zIiwicG9zdCIsInJldHJpZXZlIiwiZmlsZUlEIiwicGFyYW1zIiwiY29udGFpbmVyX2lkIiwiZ2V0IiwibGlzdCIsInF1ZXJ5IiwiZ2V0QVBJTGlzdCIsImRlbGV0ZSIsImhlYWRlcnMiLCJBY2NlcHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/resources/containers/files/files.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/resources/conversations/conversations.mjs":
/*!***********************************************************************!*\
  !*** ./node_modules/openai/resources/conversations/conversations.mjs ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Conversations: () => (/* binding */ Conversations)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/resource.mjs */ \"(rsc)/./node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _items_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./items.mjs */ \"(rsc)/./node_modules/openai/resources/conversations/items.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../internal/utils/path.mjs */ \"(rsc)/./node_modules/openai/internal/utils/path.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\n\nclass Conversations extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    constructor(){\n        super(...arguments);\n        this.items = new _items_mjs__WEBPACK_IMPORTED_MODULE_1__.Items(this._client);\n    }\n    /**\n     * Create a conversation.\n     */ create(body, options) {\n        return this._client.post(\"/conversations\", {\n            body,\n            ...options\n        });\n    }\n    /**\n     * Get a conversation with the given ID.\n     */ retrieve(conversationID, options) {\n        return this._client.get(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__.path`/conversations/${conversationID}`, options);\n    }\n    /**\n     * Update a conversation's metadata with the given ID.\n     */ update(conversationID, body, options) {\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__.path`/conversations/${conversationID}`, {\n            body,\n            ...options\n        });\n    }\n    /**\n     * Delete a conversation with the given ID.\n     */ delete(conversationID, options) {\n        return this._client.delete(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__.path`/conversations/${conversationID}`, options);\n    }\n}\nConversations.Items = _items_mjs__WEBPACK_IMPORTED_MODULE_1__.Items; //# sourceMappingURL=conversations.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9jb252ZXJzYXRpb25zL2NvbnZlcnNhdGlvbnMubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSxzRkFBc0Y7QUFDaEM7QUFDZDtBQUNIO0FBQ2dCO0FBQzlDLE1BQU1JLHNCQUFzQkosMkRBQVdBO0lBQzFDSyxhQUFjO1FBQ1YsS0FBSyxJQUFJQztRQUNULElBQUksQ0FBQ0MsS0FBSyxHQUFHLElBQUlOLDZDQUFjLENBQUMsSUFBSSxDQUFDTyxPQUFPO0lBQ2hEO0lBQ0E7O0tBRUMsR0FDREMsT0FBT0MsSUFBSSxFQUFFQyxPQUFPLEVBQUU7UUFDbEIsT0FBTyxJQUFJLENBQUNILE9BQU8sQ0FBQ0ksSUFBSSxDQUFDLGtCQUFrQjtZQUFFRjtZQUFNLEdBQUdDLE9BQU87UUFBQztJQUNsRTtJQUNBOztLQUVDLEdBQ0RFLFNBQVNDLGNBQWMsRUFBRUgsT0FBTyxFQUFFO1FBQzlCLE9BQU8sSUFBSSxDQUFDSCxPQUFPLENBQUNPLEdBQUcsQ0FBQ1osMERBQUssQ0FBQyxlQUFlLEVBQUVXLGVBQWUsQ0FBQyxFQUFFSDtJQUNyRTtJQUNBOztLQUVDLEdBQ0RLLE9BQU9GLGNBQWMsRUFBRUosSUFBSSxFQUFFQyxPQUFPLEVBQUU7UUFDbEMsT0FBTyxJQUFJLENBQUNILE9BQU8sQ0FBQ0ksSUFBSSxDQUFDVCwwREFBSyxDQUFDLGVBQWUsRUFBRVcsZUFBZSxDQUFDLEVBQUU7WUFBRUo7WUFBTSxHQUFHQyxPQUFPO1FBQUM7SUFDekY7SUFDQTs7S0FFQyxHQUNETSxPQUFPSCxjQUFjLEVBQUVILE9BQU8sRUFBRTtRQUM1QixPQUFPLElBQUksQ0FBQ0gsT0FBTyxDQUFDUyxNQUFNLENBQUNkLDBEQUFLLENBQUMsZUFBZSxFQUFFVyxlQUFlLENBQUMsRUFBRUg7SUFDeEU7QUFDSjtBQUNBUCxjQUFjRixLQUFLLEdBQUdBLDZDQUFLQSxFQUMzQiwwQ0FBMEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zeXN0ZW0tcHJvbXB0LXRvb2wtd2ViLy4vbm9kZV9tb2R1bGVzL29wZW5haS9yZXNvdXJjZXMvY29udmVyc2F0aW9ucy9jb252ZXJzYXRpb25zLm1qcz9iMWE3Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG5pbXBvcnQgeyBBUElSZXNvdXJjZSB9IGZyb20gXCIuLi8uLi9jb3JlL3Jlc291cmNlLm1qc1wiO1xuaW1wb3J0ICogYXMgSXRlbXNBUEkgZnJvbSBcIi4vaXRlbXMubWpzXCI7XG5pbXBvcnQgeyBJdGVtcywgfSBmcm9tIFwiLi9pdGVtcy5tanNcIjtcbmltcG9ydCB7IHBhdGggfSBmcm9tIFwiLi4vLi4vaW50ZXJuYWwvdXRpbHMvcGF0aC5tanNcIjtcbmV4cG9ydCBjbGFzcyBDb252ZXJzYXRpb25zIGV4dGVuZHMgQVBJUmVzb3VyY2Uge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgICAgICB0aGlzLml0ZW1zID0gbmV3IEl0ZW1zQVBJLkl0ZW1zKHRoaXMuX2NsaWVudCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENyZWF0ZSBhIGNvbnZlcnNhdGlvbi5cbiAgICAgKi9cbiAgICBjcmVhdGUoYm9keSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LnBvc3QoJy9jb252ZXJzYXRpb25zJywgeyBib2R5LCAuLi5vcHRpb25zIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXQgYSBjb252ZXJzYXRpb24gd2l0aCB0aGUgZ2l2ZW4gSUQuXG4gICAgICovXG4gICAgcmV0cmlldmUoY29udmVyc2F0aW9uSUQsIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5nZXQocGF0aCBgL2NvbnZlcnNhdGlvbnMvJHtjb252ZXJzYXRpb25JRH1gLCBvcHRpb25zKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogVXBkYXRlIGEgY29udmVyc2F0aW9uJ3MgbWV0YWRhdGEgd2l0aCB0aGUgZ2l2ZW4gSUQuXG4gICAgICovXG4gICAgdXBkYXRlKGNvbnZlcnNhdGlvbklELCBib2R5LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQucG9zdChwYXRoIGAvY29udmVyc2F0aW9ucy8ke2NvbnZlcnNhdGlvbklEfWAsIHsgYm9keSwgLi4ub3B0aW9ucyB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogRGVsZXRlIGEgY29udmVyc2F0aW9uIHdpdGggdGhlIGdpdmVuIElELlxuICAgICAqL1xuICAgIGRlbGV0ZShjb252ZXJzYXRpb25JRCwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmRlbGV0ZShwYXRoIGAvY29udmVyc2F0aW9ucy8ke2NvbnZlcnNhdGlvbklEfWAsIG9wdGlvbnMpO1xuICAgIH1cbn1cbkNvbnZlcnNhdGlvbnMuSXRlbXMgPSBJdGVtcztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbnZlcnNhdGlvbnMubWpzLm1hcCJdLCJuYW1lcyI6WyJBUElSZXNvdXJjZSIsIkl0ZW1zQVBJIiwiSXRlbXMiLCJwYXRoIiwiQ29udmVyc2F0aW9ucyIsImNvbnN0cnVjdG9yIiwiYXJndW1lbnRzIiwiaXRlbXMiLCJfY2xpZW50IiwiY3JlYXRlIiwiYm9keSIsIm9wdGlvbnMiLCJwb3N0IiwicmV0cmlldmUiLCJjb252ZXJzYXRpb25JRCIsImdldCIsInVwZGF0ZSIsImRlbGV0ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/resources/conversations/conversations.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/resources/conversations/items.mjs":
/*!***************************************************************!*\
  !*** ./node_modules/openai/resources/conversations/items.mjs ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Items: () => (/* binding */ Items)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/resource.mjs */ \"(rsc)/./node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/pagination.mjs */ \"(rsc)/./node_modules/openai/core/pagination.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../internal/utils/path.mjs */ \"(rsc)/./node_modules/openai/internal/utils/path.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\nclass Items extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * Create items in a conversation with the given ID.\n     */ create(conversationID, params, options) {\n        const { include, ...body } = params;\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__.path`/conversations/${conversationID}/items`, {\n            query: {\n                include\n            },\n            body,\n            ...options\n        });\n    }\n    /**\n     * Get a single item from a conversation with the given IDs.\n     */ retrieve(itemID, params, options) {\n        const { conversation_id, ...query } = params;\n        return this._client.get(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__.path`/conversations/${conversation_id}/items/${itemID}`, {\n            query,\n            ...options\n        });\n    }\n    /**\n     * List all items for a conversation with the given ID.\n     */ list(conversationID, query = {}, options) {\n        return this._client.getAPIList(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__.path`/conversations/${conversationID}/items`, _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__.ConversationCursorPage, {\n            query,\n            ...options\n        });\n    }\n    /**\n     * Delete an item from a conversation with the given IDs.\n     */ delete(itemID, params, options) {\n        const { conversation_id } = params;\n        return this._client.delete(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__.path`/conversations/${conversation_id}/items/${itemID}`, options);\n    }\n} //# sourceMappingURL=items.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9jb252ZXJzYXRpb25zL2l0ZW1zLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUEsc0ZBQXNGO0FBQ2hDO0FBQ2M7QUFDZjtBQUM5QyxNQUFNRyxjQUFjSCwyREFBV0E7SUFDbEM7O0tBRUMsR0FDREksT0FBT0MsY0FBYyxFQUFFQyxNQUFNLEVBQUVDLE9BQU8sRUFBRTtRQUNwQyxNQUFNLEVBQUVDLE9BQU8sRUFBRSxHQUFHQyxNQUFNLEdBQUdIO1FBQzdCLE9BQU8sSUFBSSxDQUFDSSxPQUFPLENBQUNDLElBQUksQ0FBQ1QsMERBQUssQ0FBQyxlQUFlLEVBQUVHLGVBQWUsTUFBTSxDQUFDLEVBQUU7WUFDcEVPLE9BQU87Z0JBQUVKO1lBQVE7WUFDakJDO1lBQ0EsR0FBR0YsT0FBTztRQUNkO0lBQ0o7SUFDQTs7S0FFQyxHQUNETSxTQUFTQyxNQUFNLEVBQUVSLE1BQU0sRUFBRUMsT0FBTyxFQUFFO1FBQzlCLE1BQU0sRUFBRVEsZUFBZSxFQUFFLEdBQUdILE9BQU8sR0FBR047UUFDdEMsT0FBTyxJQUFJLENBQUNJLE9BQU8sQ0FBQ00sR0FBRyxDQUFDZCwwREFBSyxDQUFDLGVBQWUsRUFBRWEsZ0JBQWdCLE9BQU8sRUFBRUQsT0FBTyxDQUFDLEVBQUU7WUFBRUY7WUFBTyxHQUFHTCxPQUFPO1FBQUM7SUFDMUc7SUFDQTs7S0FFQyxHQUNEVSxLQUFLWixjQUFjLEVBQUVPLFFBQVEsQ0FBQyxDQUFDLEVBQUVMLE9BQU8sRUFBRTtRQUN0QyxPQUFPLElBQUksQ0FBQ0csT0FBTyxDQUFDUSxVQUFVLENBQUNoQiwwREFBSyxDQUFDLGVBQWUsRUFBRUcsZUFBZSxNQUFNLENBQUMsRUFBR0osd0VBQXNCQSxFQUFHO1lBQUVXO1lBQU8sR0FBR0wsT0FBTztRQUFDO0lBQ2hJO0lBQ0E7O0tBRUMsR0FDRFksT0FBT0wsTUFBTSxFQUFFUixNQUFNLEVBQUVDLE9BQU8sRUFBRTtRQUM1QixNQUFNLEVBQUVRLGVBQWUsRUFBRSxHQUFHVDtRQUM1QixPQUFPLElBQUksQ0FBQ0ksT0FBTyxDQUFDUyxNQUFNLENBQUNqQiwwREFBSyxDQUFDLGVBQWUsRUFBRWEsZ0JBQWdCLE9BQU8sRUFBRUQsT0FBTyxDQUFDLEVBQUVQO0lBQ3pGO0FBQ0osRUFDQSxrQ0FBa0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zeXN0ZW0tcHJvbXB0LXRvb2wtd2ViLy4vbm9kZV9tb2R1bGVzL29wZW5haS9yZXNvdXJjZXMvY29udmVyc2F0aW9ucy9pdGVtcy5tanM/Njc2OCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlIGdlbmVyYXRlZCBmcm9tIG91ciBPcGVuQVBJIHNwZWMgYnkgU3RhaW5sZXNzLiBTZWUgQ09OVFJJQlVUSU5HLm1kIGZvciBkZXRhaWxzLlxuaW1wb3J0IHsgQVBJUmVzb3VyY2UgfSBmcm9tIFwiLi4vLi4vY29yZS9yZXNvdXJjZS5tanNcIjtcbmltcG9ydCB7IENvbnZlcnNhdGlvbkN1cnNvclBhZ2UsIH0gZnJvbSBcIi4uLy4uL2NvcmUvcGFnaW5hdGlvbi5tanNcIjtcbmltcG9ydCB7IHBhdGggfSBmcm9tIFwiLi4vLi4vaW50ZXJuYWwvdXRpbHMvcGF0aC5tanNcIjtcbmV4cG9ydCBjbGFzcyBJdGVtcyBleHRlbmRzIEFQSVJlc291cmNlIHtcbiAgICAvKipcbiAgICAgKiBDcmVhdGUgaXRlbXMgaW4gYSBjb252ZXJzYXRpb24gd2l0aCB0aGUgZ2l2ZW4gSUQuXG4gICAgICovXG4gICAgY3JlYXRlKGNvbnZlcnNhdGlvbklELCBwYXJhbXMsIG9wdGlvbnMpIHtcbiAgICAgICAgY29uc3QgeyBpbmNsdWRlLCAuLi5ib2R5IH0gPSBwYXJhbXM7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQucG9zdChwYXRoIGAvY29udmVyc2F0aW9ucy8ke2NvbnZlcnNhdGlvbklEfS9pdGVtc2AsIHtcbiAgICAgICAgICAgIHF1ZXJ5OiB7IGluY2x1ZGUgfSxcbiAgICAgICAgICAgIGJvZHksXG4gICAgICAgICAgICAuLi5vcHRpb25zLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogR2V0IGEgc2luZ2xlIGl0ZW0gZnJvbSBhIGNvbnZlcnNhdGlvbiB3aXRoIHRoZSBnaXZlbiBJRHMuXG4gICAgICovXG4gICAgcmV0cmlldmUoaXRlbUlELCBwYXJhbXMsIG9wdGlvbnMpIHtcbiAgICAgICAgY29uc3QgeyBjb252ZXJzYXRpb25faWQsIC4uLnF1ZXJ5IH0gPSBwYXJhbXM7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZ2V0KHBhdGggYC9jb252ZXJzYXRpb25zLyR7Y29udmVyc2F0aW9uX2lkfS9pdGVtcy8ke2l0ZW1JRH1gLCB7IHF1ZXJ5LCAuLi5vcHRpb25zIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBMaXN0IGFsbCBpdGVtcyBmb3IgYSBjb252ZXJzYXRpb24gd2l0aCB0aGUgZ2l2ZW4gSUQuXG4gICAgICovXG4gICAgbGlzdChjb252ZXJzYXRpb25JRCwgcXVlcnkgPSB7fSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmdldEFQSUxpc3QocGF0aCBgL2NvbnZlcnNhdGlvbnMvJHtjb252ZXJzYXRpb25JRH0vaXRlbXNgLCAoQ29udmVyc2F0aW9uQ3Vyc29yUGFnZSksIHsgcXVlcnksIC4uLm9wdGlvbnMgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIERlbGV0ZSBhbiBpdGVtIGZyb20gYSBjb252ZXJzYXRpb24gd2l0aCB0aGUgZ2l2ZW4gSURzLlxuICAgICAqL1xuICAgIGRlbGV0ZShpdGVtSUQsIHBhcmFtcywgb3B0aW9ucykge1xuICAgICAgICBjb25zdCB7IGNvbnZlcnNhdGlvbl9pZCB9ID0gcGFyYW1zO1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmRlbGV0ZShwYXRoIGAvY29udmVyc2F0aW9ucy8ke2NvbnZlcnNhdGlvbl9pZH0vaXRlbXMvJHtpdGVtSUR9YCwgb3B0aW9ucyk7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aXRlbXMubWpzLm1hcCJdLCJuYW1lcyI6WyJBUElSZXNvdXJjZSIsIkNvbnZlcnNhdGlvbkN1cnNvclBhZ2UiLCJwYXRoIiwiSXRlbXMiLCJjcmVhdGUiLCJjb252ZXJzYXRpb25JRCIsInBhcmFtcyIsIm9wdGlvbnMiLCJpbmNsdWRlIiwiYm9keSIsIl9jbGllbnQiLCJwb3N0IiwicXVlcnkiLCJyZXRyaWV2ZSIsIml0ZW1JRCIsImNvbnZlcnNhdGlvbl9pZCIsImdldCIsImxpc3QiLCJnZXRBUElMaXN0IiwiZGVsZXRlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/resources/conversations/items.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/resources/embeddings.mjs":
/*!******************************************************!*\
  !*** ./node_modules/openai/resources/embeddings.mjs ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Embeddings: () => (/* binding */ Embeddings)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/resource.mjs */ \"(rsc)/./node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _internal_utils_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../internal/utils.mjs */ \"(rsc)/./node_modules/openai/internal/utils.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\nclass Embeddings extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * Creates an embedding vector representing the input text.\n     *\n     * @example\n     * ```ts\n     * const createEmbeddingResponse =\n     *   await client.embeddings.create({\n     *     input: 'The quick brown fox jumped over the lazy dog',\n     *     model: 'text-embedding-3-small',\n     *   });\n     * ```\n     */ create(body, options) {\n        const hasUserProvidedEncodingFormat = !!body.encoding_format;\n        // No encoding_format specified, defaulting to base64 for performance reasons\n        // See https://github.com/openai/openai-node/pull/1312\n        let encoding_format = hasUserProvidedEncodingFormat ? body.encoding_format : \"base64\";\n        if (hasUserProvidedEncodingFormat) {\n            (0,_internal_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.loggerFor)(this._client).debug(\"embeddings/user defined encoding_format:\", body.encoding_format);\n        }\n        const response = this._client.post(\"/embeddings\", {\n            body: {\n                ...body,\n                encoding_format: encoding_format\n            },\n            ...options\n        });\n        // if the user specified an encoding_format, return the response as-is\n        if (hasUserProvidedEncodingFormat) {\n            return response;\n        }\n        // in this stage, we are sure the user did not specify an encoding_format\n        // and we defaulted to base64 for performance reasons\n        // we are sure then that the response is base64 encoded, let's decode it\n        // the returned result will be a float32 array since this is OpenAI API's default encoding\n        (0,_internal_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.loggerFor)(this._client).debug(\"embeddings/decoding base64 embeddings from base64\");\n        return response._thenUnwrap((response)=>{\n            if (response && response.data) {\n                response.data.forEach((embeddingBase64Obj)=>{\n                    const embeddingBase64Str = embeddingBase64Obj.embedding;\n                    embeddingBase64Obj.embedding = (0,_internal_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.toFloat32Array)(embeddingBase64Str);\n                });\n            }\n            return response;\n        });\n    }\n} //# sourceMappingURL=embeddings.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9lbWJlZGRpbmdzLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxzRkFBc0Y7QUFDbkM7QUFDZTtBQUMzRCxNQUFNRyxtQkFBbUJILDJEQUFXQTtJQUN2Qzs7Ozs7Ozs7Ozs7S0FXQyxHQUNESSxPQUFPQyxJQUFJLEVBQUVDLE9BQU8sRUFBRTtRQUNsQixNQUFNQyxnQ0FBZ0MsQ0FBQyxDQUFDRixLQUFLRyxlQUFlO1FBQzVELDZFQUE2RTtRQUM3RSxzREFBc0Q7UUFDdEQsSUFBSUEsa0JBQWtCRCxnQ0FBZ0NGLEtBQUtHLGVBQWUsR0FBRztRQUM3RSxJQUFJRCwrQkFBK0I7WUFDL0JOLDhEQUFTQSxDQUFDLElBQUksQ0FBQ1EsT0FBTyxFQUFFQyxLQUFLLENBQUMsNENBQTRDTCxLQUFLRyxlQUFlO1FBQ2xHO1FBQ0EsTUFBTUcsV0FBVyxJQUFJLENBQUNGLE9BQU8sQ0FBQ0csSUFBSSxDQUFDLGVBQWU7WUFDOUNQLE1BQU07Z0JBQ0YsR0FBR0EsSUFBSTtnQkFDUEcsaUJBQWlCQTtZQUNyQjtZQUNBLEdBQUdGLE9BQU87UUFDZDtRQUNBLHNFQUFzRTtRQUN0RSxJQUFJQywrQkFBK0I7WUFDL0IsT0FBT0k7UUFDWDtRQUNBLHlFQUF5RTtRQUN6RSxxREFBcUQ7UUFDckQsd0VBQXdFO1FBQ3hFLDBGQUEwRjtRQUMxRlYsOERBQVNBLENBQUMsSUFBSSxDQUFDUSxPQUFPLEVBQUVDLEtBQUssQ0FBQztRQUM5QixPQUFPQyxTQUFTRSxXQUFXLENBQUMsQ0FBQ0Y7WUFDekIsSUFBSUEsWUFBWUEsU0FBU0csSUFBSSxFQUFFO2dCQUMzQkgsU0FBU0csSUFBSSxDQUFDQyxPQUFPLENBQUMsQ0FBQ0M7b0JBQ25CLE1BQU1DLHFCQUFxQkQsbUJBQW1CRSxTQUFTO29CQUN2REYsbUJBQW1CRSxTQUFTLEdBQUdoQixtRUFBY0EsQ0FBQ2U7Z0JBQ2xEO1lBQ0o7WUFDQSxPQUFPTjtRQUNYO0lBQ0o7QUFDSixFQUNBLHVDQUF1QyIsInNvdXJjZXMiOlsid2VicGFjazovL3N5c3RlbS1wcm9tcHQtdG9vbC13ZWIvLi9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9lbWJlZGRpbmdzLm1qcz84NzkxIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG5pbXBvcnQgeyBBUElSZXNvdXJjZSB9IGZyb20gXCIuLi9jb3JlL3Jlc291cmNlLm1qc1wiO1xuaW1wb3J0IHsgbG9nZ2VyRm9yLCB0b0Zsb2F0MzJBcnJheSB9IGZyb20gXCIuLi9pbnRlcm5hbC91dGlscy5tanNcIjtcbmV4cG9ydCBjbGFzcyBFbWJlZGRpbmdzIGV4dGVuZHMgQVBJUmVzb3VyY2Uge1xuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYW4gZW1iZWRkaW5nIHZlY3RvciByZXByZXNlbnRpbmcgdGhlIGlucHV0IHRleHQuXG4gICAgICpcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYHRzXG4gICAgICogY29uc3QgY3JlYXRlRW1iZWRkaW5nUmVzcG9uc2UgPVxuICAgICAqICAgYXdhaXQgY2xpZW50LmVtYmVkZGluZ3MuY3JlYXRlKHtcbiAgICAgKiAgICAgaW5wdXQ6ICdUaGUgcXVpY2sgYnJvd24gZm94IGp1bXBlZCBvdmVyIHRoZSBsYXp5IGRvZycsXG4gICAgICogICAgIG1vZGVsOiAndGV4dC1lbWJlZGRpbmctMy1zbWFsbCcsXG4gICAgICogICB9KTtcbiAgICAgKiBgYGBcbiAgICAgKi9cbiAgICBjcmVhdGUoYm9keSwgb3B0aW9ucykge1xuICAgICAgICBjb25zdCBoYXNVc2VyUHJvdmlkZWRFbmNvZGluZ0Zvcm1hdCA9ICEhYm9keS5lbmNvZGluZ19mb3JtYXQ7XG4gICAgICAgIC8vIE5vIGVuY29kaW5nX2Zvcm1hdCBzcGVjaWZpZWQsIGRlZmF1bHRpbmcgdG8gYmFzZTY0IGZvciBwZXJmb3JtYW5jZSByZWFzb25zXG4gICAgICAgIC8vIFNlZSBodHRwczovL2dpdGh1Yi5jb20vb3BlbmFpL29wZW5haS1ub2RlL3B1bGwvMTMxMlxuICAgICAgICBsZXQgZW5jb2RpbmdfZm9ybWF0ID0gaGFzVXNlclByb3ZpZGVkRW5jb2RpbmdGb3JtYXQgPyBib2R5LmVuY29kaW5nX2Zvcm1hdCA6ICdiYXNlNjQnO1xuICAgICAgICBpZiAoaGFzVXNlclByb3ZpZGVkRW5jb2RpbmdGb3JtYXQpIHtcbiAgICAgICAgICAgIGxvZ2dlckZvcih0aGlzLl9jbGllbnQpLmRlYnVnKCdlbWJlZGRpbmdzL3VzZXIgZGVmaW5lZCBlbmNvZGluZ19mb3JtYXQ6JywgYm9keS5lbmNvZGluZ19mb3JtYXQpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gdGhpcy5fY2xpZW50LnBvc3QoJy9lbWJlZGRpbmdzJywge1xuICAgICAgICAgICAgYm9keToge1xuICAgICAgICAgICAgICAgIC4uLmJvZHksXG4gICAgICAgICAgICAgICAgZW5jb2RpbmdfZm9ybWF0OiBlbmNvZGluZ19mb3JtYXQsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgLi4ub3B0aW9ucyxcbiAgICAgICAgfSk7XG4gICAgICAgIC8vIGlmIHRoZSB1c2VyIHNwZWNpZmllZCBhbiBlbmNvZGluZ19mb3JtYXQsIHJldHVybiB0aGUgcmVzcG9uc2UgYXMtaXNcbiAgICAgICAgaWYgKGhhc1VzZXJQcm92aWRlZEVuY29kaW5nRm9ybWF0KSB7XG4gICAgICAgICAgICByZXR1cm4gcmVzcG9uc2U7XG4gICAgICAgIH1cbiAgICAgICAgLy8gaW4gdGhpcyBzdGFnZSwgd2UgYXJlIHN1cmUgdGhlIHVzZXIgZGlkIG5vdCBzcGVjaWZ5IGFuIGVuY29kaW5nX2Zvcm1hdFxuICAgICAgICAvLyBhbmQgd2UgZGVmYXVsdGVkIHRvIGJhc2U2NCBmb3IgcGVyZm9ybWFuY2UgcmVhc29uc1xuICAgICAgICAvLyB3ZSBhcmUgc3VyZSB0aGVuIHRoYXQgdGhlIHJlc3BvbnNlIGlzIGJhc2U2NCBlbmNvZGVkLCBsZXQncyBkZWNvZGUgaXRcbiAgICAgICAgLy8gdGhlIHJldHVybmVkIHJlc3VsdCB3aWxsIGJlIGEgZmxvYXQzMiBhcnJheSBzaW5jZSB0aGlzIGlzIE9wZW5BSSBBUEkncyBkZWZhdWx0IGVuY29kaW5nXG4gICAgICAgIGxvZ2dlckZvcih0aGlzLl9jbGllbnQpLmRlYnVnKCdlbWJlZGRpbmdzL2RlY29kaW5nIGJhc2U2NCBlbWJlZGRpbmdzIGZyb20gYmFzZTY0Jyk7XG4gICAgICAgIHJldHVybiByZXNwb25zZS5fdGhlblVud3JhcCgocmVzcG9uc2UpID0+IHtcbiAgICAgICAgICAgIGlmIChyZXNwb25zZSAmJiByZXNwb25zZS5kYXRhKSB7XG4gICAgICAgICAgICAgICAgcmVzcG9uc2UuZGF0YS5mb3JFYWNoKChlbWJlZGRpbmdCYXNlNjRPYmopID0+IHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgZW1iZWRkaW5nQmFzZTY0U3RyID0gZW1iZWRkaW5nQmFzZTY0T2JqLmVtYmVkZGluZztcbiAgICAgICAgICAgICAgICAgICAgZW1iZWRkaW5nQmFzZTY0T2JqLmVtYmVkZGluZyA9IHRvRmxvYXQzMkFycmF5KGVtYmVkZGluZ0Jhc2U2NFN0cik7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gcmVzcG9uc2U7XG4gICAgICAgIH0pO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWVtYmVkZGluZ3MubWpzLm1hcCJdLCJuYW1lcyI6WyJBUElSZXNvdXJjZSIsImxvZ2dlckZvciIsInRvRmxvYXQzMkFycmF5IiwiRW1iZWRkaW5ncyIsImNyZWF0ZSIsImJvZHkiLCJvcHRpb25zIiwiaGFzVXNlclByb3ZpZGVkRW5jb2RpbmdGb3JtYXQiLCJlbmNvZGluZ19mb3JtYXQiLCJfY2xpZW50IiwiZGVidWciLCJyZXNwb25zZSIsInBvc3QiLCJfdGhlblVud3JhcCIsImRhdGEiLCJmb3JFYWNoIiwiZW1iZWRkaW5nQmFzZTY0T2JqIiwiZW1iZWRkaW5nQmFzZTY0U3RyIiwiZW1iZWRkaW5nIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/resources/embeddings.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/resources/evals/evals.mjs":
/*!*******************************************************!*\
  !*** ./node_modules/openai/resources/evals/evals.mjs ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Evals: () => (/* binding */ Evals)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/resource.mjs */ \"(rsc)/./node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _runs_runs_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./runs/runs.mjs */ \"(rsc)/./node_modules/openai/resources/evals/runs/runs.mjs\");\n/* harmony import */ var _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/pagination.mjs */ \"(rsc)/./node_modules/openai/core/pagination.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../internal/utils/path.mjs */ \"(rsc)/./node_modules/openai/internal/utils/path.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\n\n\nclass Evals extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    constructor(){\n        super(...arguments);\n        this.runs = new _runs_runs_mjs__WEBPACK_IMPORTED_MODULE_1__.Runs(this._client);\n    }\n    /**\n     * Create the structure of an evaluation that can be used to test a model's\n     * performance. An evaluation is a set of testing criteria and the config for a\n     * data source, which dictates the schema of the data used in the evaluation. After\n     * creating an evaluation, you can run it on different models and model parameters.\n     * We support several types of graders and datasources. For more information, see\n     * the [Evals guide](https://platform.openai.com/docs/guides/evals).\n     */ create(body, options) {\n        return this._client.post(\"/evals\", {\n            body,\n            ...options\n        });\n    }\n    /**\n     * Get an evaluation by ID.\n     */ retrieve(evalID, options) {\n        return this._client.get(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__.path`/evals/${evalID}`, options);\n    }\n    /**\n     * Update certain properties of an evaluation.\n     */ update(evalID, body, options) {\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__.path`/evals/${evalID}`, {\n            body,\n            ...options\n        });\n    }\n    /**\n     * List evaluations for a project.\n     */ list(query = {}, options) {\n        return this._client.getAPIList(\"/evals\", _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_2__.CursorPage, {\n            query,\n            ...options\n        });\n    }\n    /**\n     * Delete an evaluation.\n     */ delete(evalID, options) {\n        return this._client.delete(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__.path`/evals/${evalID}`, options);\n    }\n}\nEvals.Runs = _runs_runs_mjs__WEBPACK_IMPORTED_MODULE_1__.Runs; //# sourceMappingURL=evals.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9ldmFscy9ldmFscy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQSxzRkFBc0Y7QUFDaEM7QUFDWDtBQUNIO0FBQ2U7QUFDRjtBQUM5QyxNQUFNSyxjQUFjTCwyREFBV0E7SUFDbENNLGFBQWM7UUFDVixLQUFLLElBQUlDO1FBQ1QsSUFBSSxDQUFDQyxJQUFJLEdBQUcsSUFBSVAsZ0RBQVksQ0FBQyxJQUFJLENBQUNRLE9BQU87SUFDN0M7SUFDQTs7Ozs7OztLQU9DLEdBQ0RDLE9BQU9DLElBQUksRUFBRUMsT0FBTyxFQUFFO1FBQ2xCLE9BQU8sSUFBSSxDQUFDSCxPQUFPLENBQUNJLElBQUksQ0FBQyxVQUFVO1lBQUVGO1lBQU0sR0FBR0MsT0FBTztRQUFDO0lBQzFEO0lBQ0E7O0tBRUMsR0FDREUsU0FBU0MsTUFBTSxFQUFFSCxPQUFPLEVBQUU7UUFDdEIsT0FBTyxJQUFJLENBQUNILE9BQU8sQ0FBQ08sR0FBRyxDQUFDWiwwREFBSyxDQUFDLE9BQU8sRUFBRVcsT0FBTyxDQUFDLEVBQUVIO0lBQ3JEO0lBQ0E7O0tBRUMsR0FDREssT0FBT0YsTUFBTSxFQUFFSixJQUFJLEVBQUVDLE9BQU8sRUFBRTtRQUMxQixPQUFPLElBQUksQ0FBQ0gsT0FBTyxDQUFDSSxJQUFJLENBQUNULDBEQUFLLENBQUMsT0FBTyxFQUFFVyxPQUFPLENBQUMsRUFBRTtZQUFFSjtZQUFNLEdBQUdDLE9BQU87UUFBQztJQUN6RTtJQUNBOztLQUVDLEdBQ0RNLEtBQUtDLFFBQVEsQ0FBQyxDQUFDLEVBQUVQLE9BQU8sRUFBRTtRQUN0QixPQUFPLElBQUksQ0FBQ0gsT0FBTyxDQUFDVyxVQUFVLENBQUMsVUFBV2pCLDREQUFVQSxFQUFHO1lBQUVnQjtZQUFPLEdBQUdQLE9BQU87UUFBQztJQUMvRTtJQUNBOztLQUVDLEdBQ0RTLE9BQU9OLE1BQU0sRUFBRUgsT0FBTyxFQUFFO1FBQ3BCLE9BQU8sSUFBSSxDQUFDSCxPQUFPLENBQUNZLE1BQU0sQ0FBQ2pCLDBEQUFLLENBQUMsT0FBTyxFQUFFVyxPQUFPLENBQUMsRUFBRUg7SUFDeEQ7QUFDSjtBQUNBUCxNQUFNSCxJQUFJLEdBQUdBLGdEQUFJQSxFQUNqQixrQ0FBa0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zeXN0ZW0tcHJvbXB0LXRvb2wtd2ViLy4vbm9kZV9tb2R1bGVzL29wZW5haS9yZXNvdXJjZXMvZXZhbHMvZXZhbHMubWpzPzViNjYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZSBnZW5lcmF0ZWQgZnJvbSBvdXIgT3BlbkFQSSBzcGVjIGJ5IFN0YWlubGVzcy4gU2VlIENPTlRSSUJVVElORy5tZCBmb3IgZGV0YWlscy5cbmltcG9ydCB7IEFQSVJlc291cmNlIH0gZnJvbSBcIi4uLy4uL2NvcmUvcmVzb3VyY2UubWpzXCI7XG5pbXBvcnQgKiBhcyBSdW5zQVBJIGZyb20gXCIuL3J1bnMvcnVucy5tanNcIjtcbmltcG9ydCB7IFJ1bnMsIH0gZnJvbSBcIi4vcnVucy9ydW5zLm1qc1wiO1xuaW1wb3J0IHsgQ3Vyc29yUGFnZSB9IGZyb20gXCIuLi8uLi9jb3JlL3BhZ2luYXRpb24ubWpzXCI7XG5pbXBvcnQgeyBwYXRoIH0gZnJvbSBcIi4uLy4uL2ludGVybmFsL3V0aWxzL3BhdGgubWpzXCI7XG5leHBvcnQgY2xhc3MgRXZhbHMgZXh0ZW5kcyBBUElSZXNvdXJjZSB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XG4gICAgICAgIHRoaXMucnVucyA9IG5ldyBSdW5zQVBJLlJ1bnModGhpcy5fY2xpZW50KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ3JlYXRlIHRoZSBzdHJ1Y3R1cmUgb2YgYW4gZXZhbHVhdGlvbiB0aGF0IGNhbiBiZSB1c2VkIHRvIHRlc3QgYSBtb2RlbCdzXG4gICAgICogcGVyZm9ybWFuY2UuIEFuIGV2YWx1YXRpb24gaXMgYSBzZXQgb2YgdGVzdGluZyBjcml0ZXJpYSBhbmQgdGhlIGNvbmZpZyBmb3IgYVxuICAgICAqIGRhdGEgc291cmNlLCB3aGljaCBkaWN0YXRlcyB0aGUgc2NoZW1hIG9mIHRoZSBkYXRhIHVzZWQgaW4gdGhlIGV2YWx1YXRpb24uIEFmdGVyXG4gICAgICogY3JlYXRpbmcgYW4gZXZhbHVhdGlvbiwgeW91IGNhbiBydW4gaXQgb24gZGlmZmVyZW50IG1vZGVscyBhbmQgbW9kZWwgcGFyYW1ldGVycy5cbiAgICAgKiBXZSBzdXBwb3J0IHNldmVyYWwgdHlwZXMgb2YgZ3JhZGVycyBhbmQgZGF0YXNvdXJjZXMuIEZvciBtb3JlIGluZm9ybWF0aW9uLCBzZWVcbiAgICAgKiB0aGUgW0V2YWxzIGd1aWRlXShodHRwczovL3BsYXRmb3JtLm9wZW5haS5jb20vZG9jcy9ndWlkZXMvZXZhbHMpLlxuICAgICAqL1xuICAgIGNyZWF0ZShib2R5LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQucG9zdCgnL2V2YWxzJywgeyBib2R5LCAuLi5vcHRpb25zIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXQgYW4gZXZhbHVhdGlvbiBieSBJRC5cbiAgICAgKi9cbiAgICByZXRyaWV2ZShldmFsSUQsIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5nZXQocGF0aCBgL2V2YWxzLyR7ZXZhbElEfWAsIG9wdGlvbnMpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBVcGRhdGUgY2VydGFpbiBwcm9wZXJ0aWVzIG9mIGFuIGV2YWx1YXRpb24uXG4gICAgICovXG4gICAgdXBkYXRlKGV2YWxJRCwgYm9keSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LnBvc3QocGF0aCBgL2V2YWxzLyR7ZXZhbElEfWAsIHsgYm9keSwgLi4ub3B0aW9ucyB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogTGlzdCBldmFsdWF0aW9ucyBmb3IgYSBwcm9qZWN0LlxuICAgICAqL1xuICAgIGxpc3QocXVlcnkgPSB7fSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmdldEFQSUxpc3QoJy9ldmFscycsIChDdXJzb3JQYWdlKSwgeyBxdWVyeSwgLi4ub3B0aW9ucyB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogRGVsZXRlIGFuIGV2YWx1YXRpb24uXG4gICAgICovXG4gICAgZGVsZXRlKGV2YWxJRCwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmRlbGV0ZShwYXRoIGAvZXZhbHMvJHtldmFsSUR9YCwgb3B0aW9ucyk7XG4gICAgfVxufVxuRXZhbHMuUnVucyA9IFJ1bnM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ldmFscy5tanMubWFwIl0sIm5hbWVzIjpbIkFQSVJlc291cmNlIiwiUnVuc0FQSSIsIlJ1bnMiLCJDdXJzb3JQYWdlIiwicGF0aCIsIkV2YWxzIiwiY29uc3RydWN0b3IiLCJhcmd1bWVudHMiLCJydW5zIiwiX2NsaWVudCIsImNyZWF0ZSIsImJvZHkiLCJvcHRpb25zIiwicG9zdCIsInJldHJpZXZlIiwiZXZhbElEIiwiZ2V0IiwidXBkYXRlIiwibGlzdCIsInF1ZXJ5IiwiZ2V0QVBJTGlzdCIsImRlbGV0ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/resources/evals/evals.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/resources/evals/runs/output-items.mjs":
/*!*******************************************************************!*\
  !*** ./node_modules/openai/resources/evals/runs/output-items.mjs ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OutputItems: () => (/* binding */ OutputItems)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/resource.mjs */ \"(rsc)/./node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../core/pagination.mjs */ \"(rsc)/./node_modules/openai/core/pagination.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../internal/utils/path.mjs */ \"(rsc)/./node_modules/openai/internal/utils/path.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\nclass OutputItems extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * Get an evaluation run output item by ID.\n     */ retrieve(outputItemID, params, options) {\n        const { eval_id, run_id } = params;\n        return this._client.get(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__.path`/evals/${eval_id}/runs/${run_id}/output_items/${outputItemID}`, options);\n    }\n    /**\n     * Get a list of output items for an evaluation run.\n     */ list(runID, params, options) {\n        const { eval_id, ...query } = params;\n        return this._client.getAPIList(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__.path`/evals/${eval_id}/runs/${runID}/output_items`, _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__.CursorPage, {\n            query,\n            ...options\n        });\n    }\n} //# sourceMappingURL=output-items.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9ldmFscy9ydW5zL291dHB1dC1pdGVtcy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBLHNGQUFzRjtBQUM3QjtBQUNDO0FBQ0Y7QUFDakQsTUFBTUcsb0JBQW9CSCwyREFBV0E7SUFDeEM7O0tBRUMsR0FDREksU0FBU0MsWUFBWSxFQUFFQyxNQUFNLEVBQUVDLE9BQU8sRUFBRTtRQUNwQyxNQUFNLEVBQUVDLE9BQU8sRUFBRUMsTUFBTSxFQUFFLEdBQUdIO1FBQzVCLE9BQU8sSUFBSSxDQUFDSSxPQUFPLENBQUNDLEdBQUcsQ0FBQ1QsMERBQUssQ0FBQyxPQUFPLEVBQUVNLFFBQVEsTUFBTSxFQUFFQyxPQUFPLGNBQWMsRUFBRUosYUFBYSxDQUFDLEVBQUVFO0lBQ2xHO0lBQ0E7O0tBRUMsR0FDREssS0FBS0MsS0FBSyxFQUFFUCxNQUFNLEVBQUVDLE9BQU8sRUFBRTtRQUN6QixNQUFNLEVBQUVDLE9BQU8sRUFBRSxHQUFHTSxPQUFPLEdBQUdSO1FBQzlCLE9BQU8sSUFBSSxDQUFDSSxPQUFPLENBQUNLLFVBQVUsQ0FBQ2IsMERBQUssQ0FBQyxPQUFPLEVBQUVNLFFBQVEsTUFBTSxFQUFFSyxNQUFNLGFBQWEsQ0FBQyxFQUFHWiw0REFBVUEsRUFBRztZQUFFYTtZQUFPLEdBQUdQLE9BQU87UUFBQztJQUMxSDtBQUNKLEVBQ0EseUNBQXlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3lzdGVtLXByb21wdC10b29sLXdlYi8uL25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2V2YWxzL3J1bnMvb3V0cHV0LWl0ZW1zLm1qcz83ODc1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG5pbXBvcnQgeyBBUElSZXNvdXJjZSB9IGZyb20gXCIuLi8uLi8uLi9jb3JlL3Jlc291cmNlLm1qc1wiO1xuaW1wb3J0IHsgQ3Vyc29yUGFnZSB9IGZyb20gXCIuLi8uLi8uLi9jb3JlL3BhZ2luYXRpb24ubWpzXCI7XG5pbXBvcnQgeyBwYXRoIH0gZnJvbSBcIi4uLy4uLy4uL2ludGVybmFsL3V0aWxzL3BhdGgubWpzXCI7XG5leHBvcnQgY2xhc3MgT3V0cHV0SXRlbXMgZXh0ZW5kcyBBUElSZXNvdXJjZSB7XG4gICAgLyoqXG4gICAgICogR2V0IGFuIGV2YWx1YXRpb24gcnVuIG91dHB1dCBpdGVtIGJ5IElELlxuICAgICAqL1xuICAgIHJldHJpZXZlKG91dHB1dEl0ZW1JRCwgcGFyYW1zLCBvcHRpb25zKSB7XG4gICAgICAgIGNvbnN0IHsgZXZhbF9pZCwgcnVuX2lkIH0gPSBwYXJhbXM7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZ2V0KHBhdGggYC9ldmFscy8ke2V2YWxfaWR9L3J1bnMvJHtydW5faWR9L291dHB1dF9pdGVtcy8ke291dHB1dEl0ZW1JRH1gLCBvcHRpb25zKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogR2V0IGEgbGlzdCBvZiBvdXRwdXQgaXRlbXMgZm9yIGFuIGV2YWx1YXRpb24gcnVuLlxuICAgICAqL1xuICAgIGxpc3QocnVuSUQsIHBhcmFtcywgb3B0aW9ucykge1xuICAgICAgICBjb25zdCB7IGV2YWxfaWQsIC4uLnF1ZXJ5IH0gPSBwYXJhbXM7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZ2V0QVBJTGlzdChwYXRoIGAvZXZhbHMvJHtldmFsX2lkfS9ydW5zLyR7cnVuSUR9L291dHB1dF9pdGVtc2AsIChDdXJzb3JQYWdlKSwgeyBxdWVyeSwgLi4ub3B0aW9ucyB9KTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1vdXRwdXQtaXRlbXMubWpzLm1hcCJdLCJuYW1lcyI6WyJBUElSZXNvdXJjZSIsIkN1cnNvclBhZ2UiLCJwYXRoIiwiT3V0cHV0SXRlbXMiLCJyZXRyaWV2ZSIsIm91dHB1dEl0ZW1JRCIsInBhcmFtcyIsIm9wdGlvbnMiLCJldmFsX2lkIiwicnVuX2lkIiwiX2NsaWVudCIsImdldCIsImxpc3QiLCJydW5JRCIsInF1ZXJ5IiwiZ2V0QVBJTGlzdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/resources/evals/runs/output-items.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/resources/evals/runs/runs.mjs":
/*!***********************************************************!*\
  !*** ./node_modules/openai/resources/evals/runs/runs.mjs ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Runs: () => (/* binding */ Runs)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/resource.mjs */ \"(rsc)/./node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _output_items_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./output-items.mjs */ \"(rsc)/./node_modules/openai/resources/evals/runs/output-items.mjs\");\n/* harmony import */ var _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../core/pagination.mjs */ \"(rsc)/./node_modules/openai/core/pagination.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../internal/utils/path.mjs */ \"(rsc)/./node_modules/openai/internal/utils/path.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\n\n\nclass Runs extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    constructor(){\n        super(...arguments);\n        this.outputItems = new _output_items_mjs__WEBPACK_IMPORTED_MODULE_1__.OutputItems(this._client);\n    }\n    /**\n     * Kicks off a new run for a given evaluation, specifying the data source, and what\n     * model configuration to use to test. The datasource will be validated against the\n     * schema specified in the config of the evaluation.\n     */ create(evalID, body, options) {\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__.path`/evals/${evalID}/runs`, {\n            body,\n            ...options\n        });\n    }\n    /**\n     * Get an evaluation run by ID.\n     */ retrieve(runID, params, options) {\n        const { eval_id } = params;\n        return this._client.get(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__.path`/evals/${eval_id}/runs/${runID}`, options);\n    }\n    /**\n     * Get a list of runs for an evaluation.\n     */ list(evalID, query = {}, options) {\n        return this._client.getAPIList(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__.path`/evals/${evalID}/runs`, _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_2__.CursorPage, {\n            query,\n            ...options\n        });\n    }\n    /**\n     * Delete an eval run.\n     */ delete(runID, params, options) {\n        const { eval_id } = params;\n        return this._client.delete(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__.path`/evals/${eval_id}/runs/${runID}`, options);\n    }\n    /**\n     * Cancel an ongoing evaluation run.\n     */ cancel(runID, params, options) {\n        const { eval_id } = params;\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__.path`/evals/${eval_id}/runs/${runID}`, options);\n    }\n}\nRuns.OutputItems = _output_items_mjs__WEBPACK_IMPORTED_MODULE_1__.OutputItems; //# sourceMappingURL=runs.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9ldmFscy9ydW5zL3J1bnMubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUEsc0ZBQXNGO0FBQzdCO0FBQ0o7QUFDSDtBQUNRO0FBQ0Y7QUFDakQsTUFBTUssYUFBYUwsMkRBQVdBO0lBQ2pDTSxhQUFjO1FBQ1YsS0FBSyxJQUFJQztRQUNULElBQUksQ0FBQ0MsV0FBVyxHQUFHLElBQUlQLDBEQUEwQixDQUFDLElBQUksQ0FBQ1EsT0FBTztJQUNsRTtJQUNBOzs7O0tBSUMsR0FDREMsT0FBT0MsTUFBTSxFQUFFQyxJQUFJLEVBQUVDLE9BQU8sRUFBRTtRQUMxQixPQUFPLElBQUksQ0FBQ0osT0FBTyxDQUFDSyxJQUFJLENBQUNWLDBEQUFLLENBQUMsT0FBTyxFQUFFTyxPQUFPLEtBQUssQ0FBQyxFQUFFO1lBQUVDO1lBQU0sR0FBR0MsT0FBTztRQUFDO0lBQzlFO0lBQ0E7O0tBRUMsR0FDREUsU0FBU0MsS0FBSyxFQUFFQyxNQUFNLEVBQUVKLE9BQU8sRUFBRTtRQUM3QixNQUFNLEVBQUVLLE9BQU8sRUFBRSxHQUFHRDtRQUNwQixPQUFPLElBQUksQ0FBQ1IsT0FBTyxDQUFDVSxHQUFHLENBQUNmLDBEQUFLLENBQUMsT0FBTyxFQUFFYyxRQUFRLE1BQU0sRUFBRUYsTUFBTSxDQUFDLEVBQUVIO0lBQ3BFO0lBQ0E7O0tBRUMsR0FDRE8sS0FBS1QsTUFBTSxFQUFFVSxRQUFRLENBQUMsQ0FBQyxFQUFFUixPQUFPLEVBQUU7UUFDOUIsT0FBTyxJQUFJLENBQUNKLE9BQU8sQ0FBQ2EsVUFBVSxDQUFDbEIsMERBQUssQ0FBQyxPQUFPLEVBQUVPLE9BQU8sS0FBSyxDQUFDLEVBQUdSLDREQUFVQSxFQUFHO1lBQ3ZFa0I7WUFDQSxHQUFHUixPQUFPO1FBQ2Q7SUFDSjtJQUNBOztLQUVDLEdBQ0RVLE9BQU9QLEtBQUssRUFBRUMsTUFBTSxFQUFFSixPQUFPLEVBQUU7UUFDM0IsTUFBTSxFQUFFSyxPQUFPLEVBQUUsR0FBR0Q7UUFDcEIsT0FBTyxJQUFJLENBQUNSLE9BQU8sQ0FBQ2MsTUFBTSxDQUFDbkIsMERBQUssQ0FBQyxPQUFPLEVBQUVjLFFBQVEsTUFBTSxFQUFFRixNQUFNLENBQUMsRUFBRUg7SUFDdkU7SUFDQTs7S0FFQyxHQUNEVyxPQUFPUixLQUFLLEVBQUVDLE1BQU0sRUFBRUosT0FBTyxFQUFFO1FBQzNCLE1BQU0sRUFBRUssT0FBTyxFQUFFLEdBQUdEO1FBQ3BCLE9BQU8sSUFBSSxDQUFDUixPQUFPLENBQUNLLElBQUksQ0FBQ1YsMERBQUssQ0FBQyxPQUFPLEVBQUVjLFFBQVEsTUFBTSxFQUFFRixNQUFNLENBQUMsRUFBRUg7SUFDckU7QUFDSjtBQUNBUixLQUFLSCxXQUFXLEdBQUdBLDBEQUFXQSxFQUM5QixpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zeXN0ZW0tcHJvbXB0LXRvb2wtd2ViLy4vbm9kZV9tb2R1bGVzL29wZW5haS9yZXNvdXJjZXMvZXZhbHMvcnVucy9ydW5zLm1qcz83ZDNiIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG5pbXBvcnQgeyBBUElSZXNvdXJjZSB9IGZyb20gXCIuLi8uLi8uLi9jb3JlL3Jlc291cmNlLm1qc1wiO1xuaW1wb3J0ICogYXMgT3V0cHV0SXRlbXNBUEkgZnJvbSBcIi4vb3V0cHV0LWl0ZW1zLm1qc1wiO1xuaW1wb3J0IHsgT3V0cHV0SXRlbXMsIH0gZnJvbSBcIi4vb3V0cHV0LWl0ZW1zLm1qc1wiO1xuaW1wb3J0IHsgQ3Vyc29yUGFnZSB9IGZyb20gXCIuLi8uLi8uLi9jb3JlL3BhZ2luYXRpb24ubWpzXCI7XG5pbXBvcnQgeyBwYXRoIH0gZnJvbSBcIi4uLy4uLy4uL2ludGVybmFsL3V0aWxzL3BhdGgubWpzXCI7XG5leHBvcnQgY2xhc3MgUnVucyBleHRlbmRzIEFQSVJlc291cmNlIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgdGhpcy5vdXRwdXRJdGVtcyA9IG5ldyBPdXRwdXRJdGVtc0FQSS5PdXRwdXRJdGVtcyh0aGlzLl9jbGllbnQpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBLaWNrcyBvZmYgYSBuZXcgcnVuIGZvciBhIGdpdmVuIGV2YWx1YXRpb24sIHNwZWNpZnlpbmcgdGhlIGRhdGEgc291cmNlLCBhbmQgd2hhdFxuICAgICAqIG1vZGVsIGNvbmZpZ3VyYXRpb24gdG8gdXNlIHRvIHRlc3QuIFRoZSBkYXRhc291cmNlIHdpbGwgYmUgdmFsaWRhdGVkIGFnYWluc3QgdGhlXG4gICAgICogc2NoZW1hIHNwZWNpZmllZCBpbiB0aGUgY29uZmlnIG9mIHRoZSBldmFsdWF0aW9uLlxuICAgICAqL1xuICAgIGNyZWF0ZShldmFsSUQsIGJvZHksIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5wb3N0KHBhdGggYC9ldmFscy8ke2V2YWxJRH0vcnVuc2AsIHsgYm9keSwgLi4ub3B0aW9ucyB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogR2V0IGFuIGV2YWx1YXRpb24gcnVuIGJ5IElELlxuICAgICAqL1xuICAgIHJldHJpZXZlKHJ1bklELCBwYXJhbXMsIG9wdGlvbnMpIHtcbiAgICAgICAgY29uc3QgeyBldmFsX2lkIH0gPSBwYXJhbXM7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZ2V0KHBhdGggYC9ldmFscy8ke2V2YWxfaWR9L3J1bnMvJHtydW5JRH1gLCBvcHRpb25zKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogR2V0IGEgbGlzdCBvZiBydW5zIGZvciBhbiBldmFsdWF0aW9uLlxuICAgICAqL1xuICAgIGxpc3QoZXZhbElELCBxdWVyeSA9IHt9LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZ2V0QVBJTGlzdChwYXRoIGAvZXZhbHMvJHtldmFsSUR9L3J1bnNgLCAoQ3Vyc29yUGFnZSksIHtcbiAgICAgICAgICAgIHF1ZXJ5LFxuICAgICAgICAgICAgLi4ub3B0aW9ucyxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIERlbGV0ZSBhbiBldmFsIHJ1bi5cbiAgICAgKi9cbiAgICBkZWxldGUocnVuSUQsIHBhcmFtcywgb3B0aW9ucykge1xuICAgICAgICBjb25zdCB7IGV2YWxfaWQgfSA9IHBhcmFtcztcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5kZWxldGUocGF0aCBgL2V2YWxzLyR7ZXZhbF9pZH0vcnVucy8ke3J1bklEfWAsIG9wdGlvbnMpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDYW5jZWwgYW4gb25nb2luZyBldmFsdWF0aW9uIHJ1bi5cbiAgICAgKi9cbiAgICBjYW5jZWwocnVuSUQsIHBhcmFtcywgb3B0aW9ucykge1xuICAgICAgICBjb25zdCB7IGV2YWxfaWQgfSA9IHBhcmFtcztcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5wb3N0KHBhdGggYC9ldmFscy8ke2V2YWxfaWR9L3J1bnMvJHtydW5JRH1gLCBvcHRpb25zKTtcbiAgICB9XG59XG5SdW5zLk91dHB1dEl0ZW1zID0gT3V0cHV0SXRlbXM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ydW5zLm1qcy5tYXAiXSwibmFtZXMiOlsiQVBJUmVzb3VyY2UiLCJPdXRwdXRJdGVtc0FQSSIsIk91dHB1dEl0ZW1zIiwiQ3Vyc29yUGFnZSIsInBhdGgiLCJSdW5zIiwiY29uc3RydWN0b3IiLCJhcmd1bWVudHMiLCJvdXRwdXRJdGVtcyIsIl9jbGllbnQiLCJjcmVhdGUiLCJldmFsSUQiLCJib2R5Iiwib3B0aW9ucyIsInBvc3QiLCJyZXRyaWV2ZSIsInJ1bklEIiwicGFyYW1zIiwiZXZhbF9pZCIsImdldCIsImxpc3QiLCJxdWVyeSIsImdldEFQSUxpc3QiLCJkZWxldGUiLCJjYW5jZWwiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/resources/evals/runs/runs.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/resources/files.mjs":
/*!*************************************************!*\
  !*** ./node_modules/openai/resources/files.mjs ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Files: () => (/* binding */ Files)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/resource.mjs */ \"(rsc)/./node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/pagination.mjs */ \"(rsc)/./node_modules/openai/core/pagination.mjs\");\n/* harmony import */ var _internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../internal/headers.mjs */ \"(rsc)/./node_modules/openai/internal/headers.mjs\");\n/* harmony import */ var _internal_utils_sleep_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../internal/utils/sleep.mjs */ \"(rsc)/./node_modules/openai/internal/utils/sleep.mjs\");\n/* harmony import */ var _error_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../error.mjs */ \"(rsc)/./node_modules/openai/error.mjs\");\n/* harmony import */ var _internal_uploads_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../internal/uploads.mjs */ \"(rsc)/./node_modules/openai/internal/uploads.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../internal/utils/path.mjs */ \"(rsc)/./node_modules/openai/internal/utils/path.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\n\n\n\n\nclass Files extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * Upload a file that can be used across various endpoints. Individual files can be\n     * up to 512 MB, and the size of all files uploaded by one organization can be up\n     * to 1 TB.\n     *\n     * The Assistants API supports files up to 2 million tokens and of specific file\n     * types. See the\n     * [Assistants Tools guide](https://platform.openai.com/docs/assistants/tools) for\n     * details.\n     *\n     * The Fine-tuning API only supports `.jsonl` files. The input also has certain\n     * required formats for fine-tuning\n     * [chat](https://platform.openai.com/docs/api-reference/fine-tuning/chat-input) or\n     * [completions](https://platform.openai.com/docs/api-reference/fine-tuning/completions-input)\n     * models.\n     *\n     * The Batch API only supports `.jsonl` files up to 200 MB in size. The input also\n     * has a specific required\n     * [format](https://platform.openai.com/docs/api-reference/batch/request-input).\n     *\n     * Please [contact us](https://help.openai.com/) if you need to increase these\n     * storage limits.\n     */ create(body, options) {\n        return this._client.post(\"/files\", (0,_internal_uploads_mjs__WEBPACK_IMPORTED_MODULE_5__.multipartFormRequestOptions)({\n            body,\n            ...options\n        }, this._client));\n    }\n    /**\n     * Returns information about a specific file.\n     */ retrieve(fileID, options) {\n        return this._client.get(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_6__.path`/files/${fileID}`, options);\n    }\n    /**\n     * Returns a list of files.\n     */ list(query = {}, options) {\n        return this._client.getAPIList(\"/files\", _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__.CursorPage, {\n            query,\n            ...options\n        });\n    }\n    /**\n     * Delete a file.\n     */ delete(fileID, options) {\n        return this._client.delete(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_6__.path`/files/${fileID}`, options);\n    }\n    /**\n     * Returns the contents of the specified file.\n     */ content(fileID, options) {\n        return this._client.get(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_6__.path`/files/${fileID}/content`, {\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__.buildHeaders)([\n                {\n                    Accept: \"application/binary\"\n                },\n                options?.headers\n            ]),\n            __binaryResponse: true\n        });\n    }\n    /**\n     * Waits for the given file to be processed, default timeout is 30 mins.\n     */ async waitForProcessing(id, { pollInterval = 5000, maxWait = 30 * 60 * 1000 } = {}) {\n        const TERMINAL_STATES = new Set([\n            \"processed\",\n            \"error\",\n            \"deleted\"\n        ]);\n        const start = Date.now();\n        let file = await this.retrieve(id);\n        while(!file.status || !TERMINAL_STATES.has(file.status)){\n            await (0,_internal_utils_sleep_mjs__WEBPACK_IMPORTED_MODULE_3__.sleep)(pollInterval);\n            file = await this.retrieve(id);\n            if (Date.now() - start > maxWait) {\n                throw new _error_mjs__WEBPACK_IMPORTED_MODULE_4__.APIConnectionTimeoutError({\n                    message: `Giving up on waiting for file ${id} to finish processing after ${maxWait} milliseconds.`\n                });\n            }\n        }\n        return file;\n    }\n} //# sourceMappingURL=files.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9maWxlcy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQSxzRkFBc0Y7QUFDbkM7QUFDQztBQUNHO0FBQ0g7QUFDSztBQUNhO0FBQ3BCO0FBQzNDLE1BQU1PLGNBQWNQLDJEQUFXQTtJQUNsQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztLQXNCQyxHQUNEUSxPQUFPQyxJQUFJLEVBQUVDLE9BQU8sRUFBRTtRQUNsQixPQUFPLElBQUksQ0FBQ0MsT0FBTyxDQUFDQyxJQUFJLENBQUMsVUFBVVAsa0ZBQTJCQSxDQUFDO1lBQUVJO1lBQU0sR0FBR0MsT0FBTztRQUFDLEdBQUcsSUFBSSxDQUFDQyxPQUFPO0lBQ3JHO0lBQ0E7O0tBRUMsR0FDREUsU0FBU0MsTUFBTSxFQUFFSixPQUFPLEVBQUU7UUFDdEIsT0FBTyxJQUFJLENBQUNDLE9BQU8sQ0FBQ0ksR0FBRyxDQUFDVCwwREFBSyxDQUFDLE9BQU8sRUFBRVEsT0FBTyxDQUFDLEVBQUVKO0lBQ3JEO0lBQ0E7O0tBRUMsR0FDRE0sS0FBS0MsUUFBUSxDQUFDLENBQUMsRUFBRVAsT0FBTyxFQUFFO1FBQ3RCLE9BQU8sSUFBSSxDQUFDQyxPQUFPLENBQUNPLFVBQVUsQ0FBQyxVQUFXakIsNERBQVVBLEVBQUc7WUFBRWdCO1lBQU8sR0FBR1AsT0FBTztRQUFDO0lBQy9FO0lBQ0E7O0tBRUMsR0FDRFMsT0FBT0wsTUFBTSxFQUFFSixPQUFPLEVBQUU7UUFDcEIsT0FBTyxJQUFJLENBQUNDLE9BQU8sQ0FBQ1EsTUFBTSxDQUFDYiwwREFBSyxDQUFDLE9BQU8sRUFBRVEsT0FBTyxDQUFDLEVBQUVKO0lBQ3hEO0lBQ0E7O0tBRUMsR0FDRFUsUUFBUU4sTUFBTSxFQUFFSixPQUFPLEVBQUU7UUFDckIsT0FBTyxJQUFJLENBQUNDLE9BQU8sQ0FBQ0ksR0FBRyxDQUFDVCwwREFBSyxDQUFDLE9BQU8sRUFBRVEsT0FBTyxRQUFRLENBQUMsRUFBRTtZQUNyRCxHQUFHSixPQUFPO1lBQ1ZXLFNBQVNuQixtRUFBWUEsQ0FBQztnQkFBQztvQkFBRW9CLFFBQVE7Z0JBQXFCO2dCQUFHWixTQUFTVzthQUFRO1lBQzFFRSxrQkFBa0I7UUFDdEI7SUFDSjtJQUNBOztLQUVDLEdBQ0QsTUFBTUMsa0JBQWtCQyxFQUFFLEVBQUUsRUFBRUMsZUFBZSxJQUFJLEVBQUVDLFVBQVUsS0FBSyxLQUFLLElBQUksRUFBRSxHQUFHLENBQUMsQ0FBQyxFQUFFO1FBQ2hGLE1BQU1DLGtCQUFrQixJQUFJQyxJQUFJO1lBQUM7WUFBYTtZQUFTO1NBQVU7UUFDakUsTUFBTUMsUUFBUUMsS0FBS0MsR0FBRztRQUN0QixJQUFJQyxPQUFPLE1BQU0sSUFBSSxDQUFDcEIsUUFBUSxDQUFDWTtRQUMvQixNQUFPLENBQUNRLEtBQUtDLE1BQU0sSUFBSSxDQUFDTixnQkFBZ0JPLEdBQUcsQ0FBQ0YsS0FBS0MsTUFBTSxFQUFHO1lBQ3RELE1BQU0vQixnRUFBS0EsQ0FBQ3VCO1lBQ1pPLE9BQU8sTUFBTSxJQUFJLENBQUNwQixRQUFRLENBQUNZO1lBQzNCLElBQUlNLEtBQUtDLEdBQUcsS0FBS0YsUUFBUUgsU0FBUztnQkFDOUIsTUFBTSxJQUFJdkIsaUVBQXlCQSxDQUFDO29CQUNoQ2dDLFNBQVMsQ0FBQyw4QkFBOEIsRUFBRVgsR0FBRyw0QkFBNEIsRUFBRUUsUUFBUSxjQUFjLENBQUM7Z0JBQ3RHO1lBQ0o7UUFDSjtRQUNBLE9BQU9NO0lBQ1g7QUFDSixFQUNBLGtDQUFrQyIsInNvdXJjZXMiOlsid2VicGFjazovL3N5c3RlbS1wcm9tcHQtdG9vbC13ZWIvLi9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9maWxlcy5tanM/MmU0MiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlIGdlbmVyYXRlZCBmcm9tIG91ciBPcGVuQVBJIHNwZWMgYnkgU3RhaW5sZXNzLiBTZWUgQ09OVFJJQlVUSU5HLm1kIGZvciBkZXRhaWxzLlxuaW1wb3J0IHsgQVBJUmVzb3VyY2UgfSBmcm9tIFwiLi4vY29yZS9yZXNvdXJjZS5tanNcIjtcbmltcG9ydCB7IEN1cnNvclBhZ2UgfSBmcm9tIFwiLi4vY29yZS9wYWdpbmF0aW9uLm1qc1wiO1xuaW1wb3J0IHsgYnVpbGRIZWFkZXJzIH0gZnJvbSBcIi4uL2ludGVybmFsL2hlYWRlcnMubWpzXCI7XG5pbXBvcnQgeyBzbGVlcCB9IGZyb20gXCIuLi9pbnRlcm5hbC91dGlscy9zbGVlcC5tanNcIjtcbmltcG9ydCB7IEFQSUNvbm5lY3Rpb25UaW1lb3V0RXJyb3IgfSBmcm9tIFwiLi4vZXJyb3IubWpzXCI7XG5pbXBvcnQgeyBtdWx0aXBhcnRGb3JtUmVxdWVzdE9wdGlvbnMgfSBmcm9tIFwiLi4vaW50ZXJuYWwvdXBsb2Fkcy5tanNcIjtcbmltcG9ydCB7IHBhdGggfSBmcm9tIFwiLi4vaW50ZXJuYWwvdXRpbHMvcGF0aC5tanNcIjtcbmV4cG9ydCBjbGFzcyBGaWxlcyBleHRlbmRzIEFQSVJlc291cmNlIHtcbiAgICAvKipcbiAgICAgKiBVcGxvYWQgYSBmaWxlIHRoYXQgY2FuIGJlIHVzZWQgYWNyb3NzIHZhcmlvdXMgZW5kcG9pbnRzLiBJbmRpdmlkdWFsIGZpbGVzIGNhbiBiZVxuICAgICAqIHVwIHRvIDUxMiBNQiwgYW5kIHRoZSBzaXplIG9mIGFsbCBmaWxlcyB1cGxvYWRlZCBieSBvbmUgb3JnYW5pemF0aW9uIGNhbiBiZSB1cFxuICAgICAqIHRvIDEgVEIuXG4gICAgICpcbiAgICAgKiBUaGUgQXNzaXN0YW50cyBBUEkgc3VwcG9ydHMgZmlsZXMgdXAgdG8gMiBtaWxsaW9uIHRva2VucyBhbmQgb2Ygc3BlY2lmaWMgZmlsZVxuICAgICAqIHR5cGVzLiBTZWUgdGhlXG4gICAgICogW0Fzc2lzdGFudHMgVG9vbHMgZ3VpZGVdKGh0dHBzOi8vcGxhdGZvcm0ub3BlbmFpLmNvbS9kb2NzL2Fzc2lzdGFudHMvdG9vbHMpIGZvclxuICAgICAqIGRldGFpbHMuXG4gICAgICpcbiAgICAgKiBUaGUgRmluZS10dW5pbmcgQVBJIG9ubHkgc3VwcG9ydHMgYC5qc29ubGAgZmlsZXMuIFRoZSBpbnB1dCBhbHNvIGhhcyBjZXJ0YWluXG4gICAgICogcmVxdWlyZWQgZm9ybWF0cyBmb3IgZmluZS10dW5pbmdcbiAgICAgKiBbY2hhdF0oaHR0cHM6Ly9wbGF0Zm9ybS5vcGVuYWkuY29tL2RvY3MvYXBpLXJlZmVyZW5jZS9maW5lLXR1bmluZy9jaGF0LWlucHV0KSBvclxuICAgICAqIFtjb21wbGV0aW9uc10oaHR0cHM6Ly9wbGF0Zm9ybS5vcGVuYWkuY29tL2RvY3MvYXBpLXJlZmVyZW5jZS9maW5lLXR1bmluZy9jb21wbGV0aW9ucy1pbnB1dClcbiAgICAgKiBtb2RlbHMuXG4gICAgICpcbiAgICAgKiBUaGUgQmF0Y2ggQVBJIG9ubHkgc3VwcG9ydHMgYC5qc29ubGAgZmlsZXMgdXAgdG8gMjAwIE1CIGluIHNpemUuIFRoZSBpbnB1dCBhbHNvXG4gICAgICogaGFzIGEgc3BlY2lmaWMgcmVxdWlyZWRcbiAgICAgKiBbZm9ybWF0XShodHRwczovL3BsYXRmb3JtLm9wZW5haS5jb20vZG9jcy9hcGktcmVmZXJlbmNlL2JhdGNoL3JlcXVlc3QtaW5wdXQpLlxuICAgICAqXG4gICAgICogUGxlYXNlIFtjb250YWN0IHVzXShodHRwczovL2hlbHAub3BlbmFpLmNvbS8pIGlmIHlvdSBuZWVkIHRvIGluY3JlYXNlIHRoZXNlXG4gICAgICogc3RvcmFnZSBsaW1pdHMuXG4gICAgICovXG4gICAgY3JlYXRlKGJvZHksIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5wb3N0KCcvZmlsZXMnLCBtdWx0aXBhcnRGb3JtUmVxdWVzdE9wdGlvbnMoeyBib2R5LCAuLi5vcHRpb25zIH0sIHRoaXMuX2NsaWVudCkpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIGluZm9ybWF0aW9uIGFib3V0IGEgc3BlY2lmaWMgZmlsZS5cbiAgICAgKi9cbiAgICByZXRyaWV2ZShmaWxlSUQsIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5nZXQocGF0aCBgL2ZpbGVzLyR7ZmlsZUlEfWAsIG9wdGlvbnMpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIGEgbGlzdCBvZiBmaWxlcy5cbiAgICAgKi9cbiAgICBsaXN0KHF1ZXJ5ID0ge30sIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5nZXRBUElMaXN0KCcvZmlsZXMnLCAoQ3Vyc29yUGFnZSksIHsgcXVlcnksIC4uLm9wdGlvbnMgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIERlbGV0ZSBhIGZpbGUuXG4gICAgICovXG4gICAgZGVsZXRlKGZpbGVJRCwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmRlbGV0ZShwYXRoIGAvZmlsZXMvJHtmaWxlSUR9YCwgb3B0aW9ucyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHVybnMgdGhlIGNvbnRlbnRzIG9mIHRoZSBzcGVjaWZpZWQgZmlsZS5cbiAgICAgKi9cbiAgICBjb250ZW50KGZpbGVJRCwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmdldChwYXRoIGAvZmlsZXMvJHtmaWxlSUR9L2NvbnRlbnRgLCB7XG4gICAgICAgICAgICAuLi5vcHRpb25zLFxuICAgICAgICAgICAgaGVhZGVyczogYnVpbGRIZWFkZXJzKFt7IEFjY2VwdDogJ2FwcGxpY2F0aW9uL2JpbmFyeScgfSwgb3B0aW9ucz8uaGVhZGVyc10pLFxuICAgICAgICAgICAgX19iaW5hcnlSZXNwb25zZTogdHJ1ZSxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFdhaXRzIGZvciB0aGUgZ2l2ZW4gZmlsZSB0byBiZSBwcm9jZXNzZWQsIGRlZmF1bHQgdGltZW91dCBpcyAzMCBtaW5zLlxuICAgICAqL1xuICAgIGFzeW5jIHdhaXRGb3JQcm9jZXNzaW5nKGlkLCB7IHBvbGxJbnRlcnZhbCA9IDUwMDAsIG1heFdhaXQgPSAzMCAqIDYwICogMTAwMCB9ID0ge30pIHtcbiAgICAgICAgY29uc3QgVEVSTUlOQUxfU1RBVEVTID0gbmV3IFNldChbJ3Byb2Nlc3NlZCcsICdlcnJvcicsICdkZWxldGVkJ10pO1xuICAgICAgICBjb25zdCBzdGFydCA9IERhdGUubm93KCk7XG4gICAgICAgIGxldCBmaWxlID0gYXdhaXQgdGhpcy5yZXRyaWV2ZShpZCk7XG4gICAgICAgIHdoaWxlICghZmlsZS5zdGF0dXMgfHwgIVRFUk1JTkFMX1NUQVRFUy5oYXMoZmlsZS5zdGF0dXMpKSB7XG4gICAgICAgICAgICBhd2FpdCBzbGVlcChwb2xsSW50ZXJ2YWwpO1xuICAgICAgICAgICAgZmlsZSA9IGF3YWl0IHRoaXMucmV0cmlldmUoaWQpO1xuICAgICAgICAgICAgaWYgKERhdGUubm93KCkgLSBzdGFydCA+IG1heFdhaXQpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgQVBJQ29ubmVjdGlvblRpbWVvdXRFcnJvcih7XG4gICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6IGBHaXZpbmcgdXAgb24gd2FpdGluZyBmb3IgZmlsZSAke2lkfSB0byBmaW5pc2ggcHJvY2Vzc2luZyBhZnRlciAke21heFdhaXR9IG1pbGxpc2Vjb25kcy5gLFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmaWxlO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWZpbGVzLm1qcy5tYXAiXSwibmFtZXMiOlsiQVBJUmVzb3VyY2UiLCJDdXJzb3JQYWdlIiwiYnVpbGRIZWFkZXJzIiwic2xlZXAiLCJBUElDb25uZWN0aW9uVGltZW91dEVycm9yIiwibXVsdGlwYXJ0Rm9ybVJlcXVlc3RPcHRpb25zIiwicGF0aCIsIkZpbGVzIiwiY3JlYXRlIiwiYm9keSIsIm9wdGlvbnMiLCJfY2xpZW50IiwicG9zdCIsInJldHJpZXZlIiwiZmlsZUlEIiwiZ2V0IiwibGlzdCIsInF1ZXJ5IiwiZ2V0QVBJTGlzdCIsImRlbGV0ZSIsImNvbnRlbnQiLCJoZWFkZXJzIiwiQWNjZXB0IiwiX19iaW5hcnlSZXNwb25zZSIsIndhaXRGb3JQcm9jZXNzaW5nIiwiaWQiLCJwb2xsSW50ZXJ2YWwiLCJtYXhXYWl0IiwiVEVSTUlOQUxfU1RBVEVTIiwiU2V0Iiwic3RhcnQiLCJEYXRlIiwibm93IiwiZmlsZSIsInN0YXR1cyIsImhhcyIsIm1lc3NhZ2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/resources/files.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/resources/fine-tuning/alpha/alpha.mjs":
/*!*******************************************************************!*\
  !*** ./node_modules/openai/resources/fine-tuning/alpha/alpha.mjs ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Alpha: () => (/* binding */ Alpha)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/resource.mjs */ \"(rsc)/./node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _graders_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./graders.mjs */ \"(rsc)/./node_modules/openai/resources/fine-tuning/alpha/graders.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\nclass Alpha extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    constructor(){\n        super(...arguments);\n        this.graders = new _graders_mjs__WEBPACK_IMPORTED_MODULE_1__.Graders(this._client);\n    }\n}\nAlpha.Graders = _graders_mjs__WEBPACK_IMPORTED_MODULE_1__.Graders; //# sourceMappingURL=alpha.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9maW5lLXR1bmluZy9hbHBoYS9hbHBoYS5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsc0ZBQXNGO0FBQzdCO0FBQ2I7QUFDSDtBQUNsQyxNQUFNRyxjQUFjSCwyREFBV0E7SUFDbENJLGFBQWM7UUFDVixLQUFLLElBQUlDO1FBQ1QsSUFBSSxDQUFDQyxPQUFPLEdBQUcsSUFBSUwsaURBQWtCLENBQUMsSUFBSSxDQUFDTSxPQUFPO0lBQ3REO0FBQ0o7QUFDQUosTUFBTUQsT0FBTyxHQUFHQSxpREFBT0EsRUFDdkIsa0NBQWtDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3lzdGVtLXByb21wdC10b29sLXdlYi8uL25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2ZpbmUtdHVuaW5nL2FscGhhL2FscGhhLm1qcz9hM2E0Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG5pbXBvcnQgeyBBUElSZXNvdXJjZSB9IGZyb20gXCIuLi8uLi8uLi9jb3JlL3Jlc291cmNlLm1qc1wiO1xuaW1wb3J0ICogYXMgR3JhZGVyc0FQSSBmcm9tIFwiLi9ncmFkZXJzLm1qc1wiO1xuaW1wb3J0IHsgR3JhZGVycywgfSBmcm9tIFwiLi9ncmFkZXJzLm1qc1wiO1xuZXhwb3J0IGNsYXNzIEFscGhhIGV4dGVuZHMgQVBJUmVzb3VyY2Uge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgICAgICB0aGlzLmdyYWRlcnMgPSBuZXcgR3JhZGVyc0FQSS5HcmFkZXJzKHRoaXMuX2NsaWVudCk7XG4gICAgfVxufVxuQWxwaGEuR3JhZGVycyA9IEdyYWRlcnM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hbHBoYS5tanMubWFwIl0sIm5hbWVzIjpbIkFQSVJlc291cmNlIiwiR3JhZGVyc0FQSSIsIkdyYWRlcnMiLCJBbHBoYSIsImNvbnN0cnVjdG9yIiwiYXJndW1lbnRzIiwiZ3JhZGVycyIsIl9jbGllbnQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/resources/fine-tuning/alpha/alpha.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/resources/fine-tuning/alpha/graders.mjs":
/*!*********************************************************************!*\
  !*** ./node_modules/openai/resources/fine-tuning/alpha/graders.mjs ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Graders: () => (/* binding */ Graders)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/resource.mjs */ \"(rsc)/./node_modules/openai/core/resource.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nclass Graders extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * Run a grader.\n     *\n     * @example\n     * ```ts\n     * const response = await client.fineTuning.alpha.graders.run({\n     *   grader: {\n     *     input: 'input',\n     *     name: 'name',\n     *     operation: 'eq',\n     *     reference: 'reference',\n     *     type: 'string_check',\n     *   },\n     *   model_sample: 'model_sample',\n     * });\n     * ```\n     */ run(body, options) {\n        return this._client.post(\"/fine_tuning/alpha/graders/run\", {\n            body,\n            ...options\n        });\n    }\n    /**\n     * Validate a grader.\n     *\n     * @example\n     * ```ts\n     * const response =\n     *   await client.fineTuning.alpha.graders.validate({\n     *     grader: {\n     *       input: 'input',\n     *       name: 'name',\n     *       operation: 'eq',\n     *       reference: 'reference',\n     *       type: 'string_check',\n     *     },\n     *   });\n     * ```\n     */ validate(body, options) {\n        return this._client.post(\"/fine_tuning/alpha/graders/validate\", {\n            body,\n            ...options\n        });\n    }\n} //# sourceMappingURL=graders.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9maW5lLXR1bmluZy9hbHBoYS9ncmFkZXJzLm1qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLHNGQUFzRjtBQUM3QjtBQUNsRCxNQUFNQyxnQkFBZ0JELDJEQUFXQTtJQUNwQzs7Ozs7Ozs7Ozs7Ozs7OztLQWdCQyxHQUNERSxJQUFJQyxJQUFJLEVBQUVDLE9BQU8sRUFBRTtRQUNmLE9BQU8sSUFBSSxDQUFDQyxPQUFPLENBQUNDLElBQUksQ0FBQyxrQ0FBa0M7WUFBRUg7WUFBTSxHQUFHQyxPQUFPO1FBQUM7SUFDbEY7SUFDQTs7Ozs7Ozs7Ozs7Ozs7OztLQWdCQyxHQUNERyxTQUFTSixJQUFJLEVBQUVDLE9BQU8sRUFBRTtRQUNwQixPQUFPLElBQUksQ0FBQ0MsT0FBTyxDQUFDQyxJQUFJLENBQUMsdUNBQXVDO1lBQUVIO1lBQU0sR0FBR0MsT0FBTztRQUFDO0lBQ3ZGO0FBQ0osRUFDQSxvQ0FBb0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zeXN0ZW0tcHJvbXB0LXRvb2wtd2ViLy4vbm9kZV9tb2R1bGVzL29wZW5haS9yZXNvdXJjZXMvZmluZS10dW5pbmcvYWxwaGEvZ3JhZGVycy5tanM/NzdhMiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlIGdlbmVyYXRlZCBmcm9tIG91ciBPcGVuQVBJIHNwZWMgYnkgU3RhaW5sZXNzLiBTZWUgQ09OVFJJQlVUSU5HLm1kIGZvciBkZXRhaWxzLlxuaW1wb3J0IHsgQVBJUmVzb3VyY2UgfSBmcm9tIFwiLi4vLi4vLi4vY29yZS9yZXNvdXJjZS5tanNcIjtcbmV4cG9ydCBjbGFzcyBHcmFkZXJzIGV4dGVuZHMgQVBJUmVzb3VyY2Uge1xuICAgIC8qKlxuICAgICAqIFJ1biBhIGdyYWRlci5cbiAgICAgKlxuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgdHNcbiAgICAgKiBjb25zdCByZXNwb25zZSA9IGF3YWl0IGNsaWVudC5maW5lVHVuaW5nLmFscGhhLmdyYWRlcnMucnVuKHtcbiAgICAgKiAgIGdyYWRlcjoge1xuICAgICAqICAgICBpbnB1dDogJ2lucHV0JyxcbiAgICAgKiAgICAgbmFtZTogJ25hbWUnLFxuICAgICAqICAgICBvcGVyYXRpb246ICdlcScsXG4gICAgICogICAgIHJlZmVyZW5jZTogJ3JlZmVyZW5jZScsXG4gICAgICogICAgIHR5cGU6ICdzdHJpbmdfY2hlY2snLFxuICAgICAqICAgfSxcbiAgICAgKiAgIG1vZGVsX3NhbXBsZTogJ21vZGVsX3NhbXBsZScsXG4gICAgICogfSk7XG4gICAgICogYGBgXG4gICAgICovXG4gICAgcnVuKGJvZHksIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5wb3N0KCcvZmluZV90dW5pbmcvYWxwaGEvZ3JhZGVycy9ydW4nLCB7IGJvZHksIC4uLm9wdGlvbnMgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFZhbGlkYXRlIGEgZ3JhZGVyLlxuICAgICAqXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBgYGB0c1xuICAgICAqIGNvbnN0IHJlc3BvbnNlID1cbiAgICAgKiAgIGF3YWl0IGNsaWVudC5maW5lVHVuaW5nLmFscGhhLmdyYWRlcnMudmFsaWRhdGUoe1xuICAgICAqICAgICBncmFkZXI6IHtcbiAgICAgKiAgICAgICBpbnB1dDogJ2lucHV0JyxcbiAgICAgKiAgICAgICBuYW1lOiAnbmFtZScsXG4gICAgICogICAgICAgb3BlcmF0aW9uOiAnZXEnLFxuICAgICAqICAgICAgIHJlZmVyZW5jZTogJ3JlZmVyZW5jZScsXG4gICAgICogICAgICAgdHlwZTogJ3N0cmluZ19jaGVjaycsXG4gICAgICogICAgIH0sXG4gICAgICogICB9KTtcbiAgICAgKiBgYGBcbiAgICAgKi9cbiAgICB2YWxpZGF0ZShib2R5LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQucG9zdCgnL2ZpbmVfdHVuaW5nL2FscGhhL2dyYWRlcnMvdmFsaWRhdGUnLCB7IGJvZHksIC4uLm9wdGlvbnMgfSk7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z3JhZGVycy5tanMubWFwIl0sIm5hbWVzIjpbIkFQSVJlc291cmNlIiwiR3JhZGVycyIsInJ1biIsImJvZHkiLCJvcHRpb25zIiwiX2NsaWVudCIsInBvc3QiLCJ2YWxpZGF0ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/resources/fine-tuning/alpha/graders.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/resources/fine-tuning/checkpoints/checkpoints.mjs":
/*!*******************************************************************************!*\
  !*** ./node_modules/openai/resources/fine-tuning/checkpoints/checkpoints.mjs ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Checkpoints: () => (/* binding */ Checkpoints)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/resource.mjs */ \"(rsc)/./node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _permissions_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./permissions.mjs */ \"(rsc)/./node_modules/openai/resources/fine-tuning/checkpoints/permissions.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\nclass Checkpoints extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    constructor(){\n        super(...arguments);\n        this.permissions = new _permissions_mjs__WEBPACK_IMPORTED_MODULE_1__.Permissions(this._client);\n    }\n}\nCheckpoints.Permissions = _permissions_mjs__WEBPACK_IMPORTED_MODULE_1__.Permissions; //# sourceMappingURL=checkpoints.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9maW5lLXR1bmluZy9jaGVja3BvaW50cy9jaGVja3BvaW50cy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsc0ZBQXNGO0FBQzdCO0FBQ0w7QUFDSDtBQUMxQyxNQUFNRyxvQkFBb0JILDJEQUFXQTtJQUN4Q0ksYUFBYztRQUNWLEtBQUssSUFBSUM7UUFDVCxJQUFJLENBQUNDLFdBQVcsR0FBRyxJQUFJTCx5REFBMEIsQ0FBQyxJQUFJLENBQUNNLE9BQU87SUFDbEU7QUFDSjtBQUNBSixZQUFZRCxXQUFXLEdBQUdBLHlEQUFXQSxFQUNyQyx3Q0FBd0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zeXN0ZW0tcHJvbXB0LXRvb2wtd2ViLy4vbm9kZV9tb2R1bGVzL29wZW5haS9yZXNvdXJjZXMvZmluZS10dW5pbmcvY2hlY2twb2ludHMvY2hlY2twb2ludHMubWpzPzM4ZjciXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZSBnZW5lcmF0ZWQgZnJvbSBvdXIgT3BlbkFQSSBzcGVjIGJ5IFN0YWlubGVzcy4gU2VlIENPTlRSSUJVVElORy5tZCBmb3IgZGV0YWlscy5cbmltcG9ydCB7IEFQSVJlc291cmNlIH0gZnJvbSBcIi4uLy4uLy4uL2NvcmUvcmVzb3VyY2UubWpzXCI7XG5pbXBvcnQgKiBhcyBQZXJtaXNzaW9uc0FQSSBmcm9tIFwiLi9wZXJtaXNzaW9ucy5tanNcIjtcbmltcG9ydCB7IFBlcm1pc3Npb25zLCB9IGZyb20gXCIuL3Blcm1pc3Npb25zLm1qc1wiO1xuZXhwb3J0IGNsYXNzIENoZWNrcG9pbnRzIGV4dGVuZHMgQVBJUmVzb3VyY2Uge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgICAgICB0aGlzLnBlcm1pc3Npb25zID0gbmV3IFBlcm1pc3Npb25zQVBJLlBlcm1pc3Npb25zKHRoaXMuX2NsaWVudCk7XG4gICAgfVxufVxuQ2hlY2twb2ludHMuUGVybWlzc2lvbnMgPSBQZXJtaXNzaW9ucztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNoZWNrcG9pbnRzLm1qcy5tYXAiXSwibmFtZXMiOlsiQVBJUmVzb3VyY2UiLCJQZXJtaXNzaW9uc0FQSSIsIlBlcm1pc3Npb25zIiwiQ2hlY2twb2ludHMiLCJjb25zdHJ1Y3RvciIsImFyZ3VtZW50cyIsInBlcm1pc3Npb25zIiwiX2NsaWVudCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/resources/fine-tuning/checkpoints/checkpoints.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/resources/fine-tuning/checkpoints/permissions.mjs":
/*!*******************************************************************************!*\
  !*** ./node_modules/openai/resources/fine-tuning/checkpoints/permissions.mjs ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Permissions: () => (/* binding */ Permissions)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/resource.mjs */ \"(rsc)/./node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../core/pagination.mjs */ \"(rsc)/./node_modules/openai/core/pagination.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../internal/utils/path.mjs */ \"(rsc)/./node_modules/openai/internal/utils/path.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\nclass Permissions extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * **NOTE:** Calling this endpoint requires an [admin API key](../admin-api-keys).\n     *\n     * This enables organization owners to share fine-tuned models with other projects\n     * in their organization.\n     *\n     * @example\n     * ```ts\n     * // Automatically fetches more pages as needed.\n     * for await (const permissionCreateResponse of client.fineTuning.checkpoints.permissions.create(\n     *   'ft:gpt-4o-mini-2024-07-18:org:weather:B7R9VjQd',\n     *   { project_ids: ['string'] },\n     * )) {\n     *   // ...\n     * }\n     * ```\n     */ create(fineTunedModelCheckpoint, body, options) {\n        return this._client.getAPIList(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__.path`/fine_tuning/checkpoints/${fineTunedModelCheckpoint}/permissions`, _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__.Page, {\n            body,\n            method: \"post\",\n            ...options\n        });\n    }\n    /**\n     * **NOTE:** This endpoint requires an [admin API key](../admin-api-keys).\n     *\n     * Organization owners can use this endpoint to view all permissions for a\n     * fine-tuned model checkpoint.\n     *\n     * @example\n     * ```ts\n     * const permission =\n     *   await client.fineTuning.checkpoints.permissions.retrieve(\n     *     'ft-AF1WoRqd3aJAHsqc9NY7iL8F',\n     *   );\n     * ```\n     */ retrieve(fineTunedModelCheckpoint, query = {}, options) {\n        return this._client.get(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__.path`/fine_tuning/checkpoints/${fineTunedModelCheckpoint}/permissions`, {\n            query,\n            ...options\n        });\n    }\n    /**\n     * **NOTE:** This endpoint requires an [admin API key](../admin-api-keys).\n     *\n     * Organization owners can use this endpoint to delete a permission for a\n     * fine-tuned model checkpoint.\n     *\n     * @example\n     * ```ts\n     * const permission =\n     *   await client.fineTuning.checkpoints.permissions.delete(\n     *     'cp_zc4Q7MP6XxulcVzj4MZdwsAB',\n     *     {\n     *       fine_tuned_model_checkpoint:\n     *         'ft:gpt-4o-mini-2024-07-18:org:weather:B7R9VjQd',\n     *     },\n     *   );\n     * ```\n     */ delete(permissionID, params, options) {\n        const { fine_tuned_model_checkpoint } = params;\n        return this._client.delete(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__.path`/fine_tuning/checkpoints/${fine_tuned_model_checkpoint}/permissions/${permissionID}`, options);\n    }\n} //# sourceMappingURL=permissions.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9maW5lLXR1bmluZy9jaGVja3BvaW50cy9wZXJtaXNzaW9ucy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBLHNGQUFzRjtBQUM3QjtBQUNMO0FBQ0k7QUFDakQsTUFBTUcsb0JBQW9CSCwyREFBV0E7SUFDeEM7Ozs7Ozs7Ozs7Ozs7Ozs7S0FnQkMsR0FDREksT0FBT0Msd0JBQXdCLEVBQUVDLElBQUksRUFBRUMsT0FBTyxFQUFFO1FBQzVDLE9BQU8sSUFBSSxDQUFDQyxPQUFPLENBQUNDLFVBQVUsQ0FBQ1AsMERBQUssQ0FBQyx5QkFBeUIsRUFBRUcseUJBQXlCLFlBQVksQ0FBQyxFQUFHSixzREFBSUEsRUFBRztZQUFFSztZQUFNSSxRQUFRO1lBQVEsR0FBR0gsT0FBTztRQUFDO0lBQ3ZKO0lBQ0E7Ozs7Ozs7Ozs7Ozs7S0FhQyxHQUNESSxTQUFTTix3QkFBd0IsRUFBRU8sUUFBUSxDQUFDLENBQUMsRUFBRUwsT0FBTyxFQUFFO1FBQ3BELE9BQU8sSUFBSSxDQUFDQyxPQUFPLENBQUNLLEdBQUcsQ0FBQ1gsMERBQUssQ0FBQyx5QkFBeUIsRUFBRUcseUJBQXlCLFlBQVksQ0FBQyxFQUFFO1lBQzdGTztZQUNBLEdBQUdMLE9BQU87UUFDZDtJQUNKO0lBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7O0tBaUJDLEdBQ0RPLE9BQU9DLFlBQVksRUFBRUMsTUFBTSxFQUFFVCxPQUFPLEVBQUU7UUFDbEMsTUFBTSxFQUFFVSwyQkFBMkIsRUFBRSxHQUFHRDtRQUN4QyxPQUFPLElBQUksQ0FBQ1IsT0FBTyxDQUFDTSxNQUFNLENBQUNaLDBEQUFLLENBQUMseUJBQXlCLEVBQUVlLDRCQUE0QixhQUFhLEVBQUVGLGFBQWEsQ0FBQyxFQUFFUjtJQUMzSDtBQUNKLEVBQ0Esd0NBQXdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3lzdGVtLXByb21wdC10b29sLXdlYi8uL25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2ZpbmUtdHVuaW5nL2NoZWNrcG9pbnRzL3Blcm1pc3Npb25zLm1qcz8zNWQ2Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG5pbXBvcnQgeyBBUElSZXNvdXJjZSB9IGZyb20gXCIuLi8uLi8uLi9jb3JlL3Jlc291cmNlLm1qc1wiO1xuaW1wb3J0IHsgUGFnZSB9IGZyb20gXCIuLi8uLi8uLi9jb3JlL3BhZ2luYXRpb24ubWpzXCI7XG5pbXBvcnQgeyBwYXRoIH0gZnJvbSBcIi4uLy4uLy4uL2ludGVybmFsL3V0aWxzL3BhdGgubWpzXCI7XG5leHBvcnQgY2xhc3MgUGVybWlzc2lvbnMgZXh0ZW5kcyBBUElSZXNvdXJjZSB7XG4gICAgLyoqXG4gICAgICogKipOT1RFOioqIENhbGxpbmcgdGhpcyBlbmRwb2ludCByZXF1aXJlcyBhbiBbYWRtaW4gQVBJIGtleV0oLi4vYWRtaW4tYXBpLWtleXMpLlxuICAgICAqXG4gICAgICogVGhpcyBlbmFibGVzIG9yZ2FuaXphdGlvbiBvd25lcnMgdG8gc2hhcmUgZmluZS10dW5lZCBtb2RlbHMgd2l0aCBvdGhlciBwcm9qZWN0c1xuICAgICAqIGluIHRoZWlyIG9yZ2FuaXphdGlvbi5cbiAgICAgKlxuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgdHNcbiAgICAgKiAvLyBBdXRvbWF0aWNhbGx5IGZldGNoZXMgbW9yZSBwYWdlcyBhcyBuZWVkZWQuXG4gICAgICogZm9yIGF3YWl0IChjb25zdCBwZXJtaXNzaW9uQ3JlYXRlUmVzcG9uc2Ugb2YgY2xpZW50LmZpbmVUdW5pbmcuY2hlY2twb2ludHMucGVybWlzc2lvbnMuY3JlYXRlKFxuICAgICAqICAgJ2Z0OmdwdC00by1taW5pLTIwMjQtMDctMTg6b3JnOndlYXRoZXI6QjdSOVZqUWQnLFxuICAgICAqICAgeyBwcm9qZWN0X2lkczogWydzdHJpbmcnXSB9LFxuICAgICAqICkpIHtcbiAgICAgKiAgIC8vIC4uLlxuICAgICAqIH1cbiAgICAgKiBgYGBcbiAgICAgKi9cbiAgICBjcmVhdGUoZmluZVR1bmVkTW9kZWxDaGVja3BvaW50LCBib2R5LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZ2V0QVBJTGlzdChwYXRoIGAvZmluZV90dW5pbmcvY2hlY2twb2ludHMvJHtmaW5lVHVuZWRNb2RlbENoZWNrcG9pbnR9L3Blcm1pc3Npb25zYCwgKFBhZ2UpLCB7IGJvZHksIG1ldGhvZDogJ3Bvc3QnLCAuLi5vcHRpb25zIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiAqKk5PVEU6KiogVGhpcyBlbmRwb2ludCByZXF1aXJlcyBhbiBbYWRtaW4gQVBJIGtleV0oLi4vYWRtaW4tYXBpLWtleXMpLlxuICAgICAqXG4gICAgICogT3JnYW5pemF0aW9uIG93bmVycyBjYW4gdXNlIHRoaXMgZW5kcG9pbnQgdG8gdmlldyBhbGwgcGVybWlzc2lvbnMgZm9yIGFcbiAgICAgKiBmaW5lLXR1bmVkIG1vZGVsIGNoZWNrcG9pbnQuXG4gICAgICpcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYHRzXG4gICAgICogY29uc3QgcGVybWlzc2lvbiA9XG4gICAgICogICBhd2FpdCBjbGllbnQuZmluZVR1bmluZy5jaGVja3BvaW50cy5wZXJtaXNzaW9ucy5yZXRyaWV2ZShcbiAgICAgKiAgICAgJ2Z0LUFGMVdvUnFkM2FKQUhzcWM5Tlk3aUw4RicsXG4gICAgICogICApO1xuICAgICAqIGBgYFxuICAgICAqL1xuICAgIHJldHJpZXZlKGZpbmVUdW5lZE1vZGVsQ2hlY2twb2ludCwgcXVlcnkgPSB7fSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmdldChwYXRoIGAvZmluZV90dW5pbmcvY2hlY2twb2ludHMvJHtmaW5lVHVuZWRNb2RlbENoZWNrcG9pbnR9L3Blcm1pc3Npb25zYCwge1xuICAgICAgICAgICAgcXVlcnksXG4gICAgICAgICAgICAuLi5vcHRpb25zLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogKipOT1RFOioqIFRoaXMgZW5kcG9pbnQgcmVxdWlyZXMgYW4gW2FkbWluIEFQSSBrZXldKC4uL2FkbWluLWFwaS1rZXlzKS5cbiAgICAgKlxuICAgICAqIE9yZ2FuaXphdGlvbiBvd25lcnMgY2FuIHVzZSB0aGlzIGVuZHBvaW50IHRvIGRlbGV0ZSBhIHBlcm1pc3Npb24gZm9yIGFcbiAgICAgKiBmaW5lLXR1bmVkIG1vZGVsIGNoZWNrcG9pbnQuXG4gICAgICpcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYHRzXG4gICAgICogY29uc3QgcGVybWlzc2lvbiA9XG4gICAgICogICBhd2FpdCBjbGllbnQuZmluZVR1bmluZy5jaGVja3BvaW50cy5wZXJtaXNzaW9ucy5kZWxldGUoXG4gICAgICogICAgICdjcF96YzRRN01QNlh4dWxjVnpqNE1aZHdzQUInLFxuICAgICAqICAgICB7XG4gICAgICogICAgICAgZmluZV90dW5lZF9tb2RlbF9jaGVja3BvaW50OlxuICAgICAqICAgICAgICAgJ2Z0OmdwdC00by1taW5pLTIwMjQtMDctMTg6b3JnOndlYXRoZXI6QjdSOVZqUWQnLFxuICAgICAqICAgICB9LFxuICAgICAqICAgKTtcbiAgICAgKiBgYGBcbiAgICAgKi9cbiAgICBkZWxldGUocGVybWlzc2lvbklELCBwYXJhbXMsIG9wdGlvbnMpIHtcbiAgICAgICAgY29uc3QgeyBmaW5lX3R1bmVkX21vZGVsX2NoZWNrcG9pbnQgfSA9IHBhcmFtcztcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5kZWxldGUocGF0aCBgL2ZpbmVfdHVuaW5nL2NoZWNrcG9pbnRzLyR7ZmluZV90dW5lZF9tb2RlbF9jaGVja3BvaW50fS9wZXJtaXNzaW9ucy8ke3Blcm1pc3Npb25JRH1gLCBvcHRpb25zKTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wZXJtaXNzaW9ucy5tanMubWFwIl0sIm5hbWVzIjpbIkFQSVJlc291cmNlIiwiUGFnZSIsInBhdGgiLCJQZXJtaXNzaW9ucyIsImNyZWF0ZSIsImZpbmVUdW5lZE1vZGVsQ2hlY2twb2ludCIsImJvZHkiLCJvcHRpb25zIiwiX2NsaWVudCIsImdldEFQSUxpc3QiLCJtZXRob2QiLCJyZXRyaWV2ZSIsInF1ZXJ5IiwiZ2V0IiwiZGVsZXRlIiwicGVybWlzc2lvbklEIiwicGFyYW1zIiwiZmluZV90dW5lZF9tb2RlbF9jaGVja3BvaW50Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/resources/fine-tuning/checkpoints/permissions.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/resources/fine-tuning/fine-tuning.mjs":
/*!*******************************************************************!*\
  !*** ./node_modules/openai/resources/fine-tuning/fine-tuning.mjs ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FineTuning: () => (/* binding */ FineTuning)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/resource.mjs */ \"(rsc)/./node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _methods_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./methods.mjs */ \"(rsc)/./node_modules/openai/resources/fine-tuning/methods.mjs\");\n/* harmony import */ var _alpha_alpha_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./alpha/alpha.mjs */ \"(rsc)/./node_modules/openai/resources/fine-tuning/alpha/alpha.mjs\");\n/* harmony import */ var _checkpoints_checkpoints_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./checkpoints/checkpoints.mjs */ \"(rsc)/./node_modules/openai/resources/fine-tuning/checkpoints/checkpoints.mjs\");\n/* harmony import */ var _jobs_jobs_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./jobs/jobs.mjs */ \"(rsc)/./node_modules/openai/resources/fine-tuning/jobs/jobs.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\n\n\n\n\n\n\nclass FineTuning extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    constructor(){\n        super(...arguments);\n        this.methods = new _methods_mjs__WEBPACK_IMPORTED_MODULE_1__.Methods(this._client);\n        this.jobs = new _jobs_jobs_mjs__WEBPACK_IMPORTED_MODULE_4__.Jobs(this._client);\n        this.checkpoints = new _checkpoints_checkpoints_mjs__WEBPACK_IMPORTED_MODULE_3__.Checkpoints(this._client);\n        this.alpha = new _alpha_alpha_mjs__WEBPACK_IMPORTED_MODULE_2__.Alpha(this._client);\n    }\n}\nFineTuning.Methods = _methods_mjs__WEBPACK_IMPORTED_MODULE_1__.Methods;\nFineTuning.Jobs = _jobs_jobs_mjs__WEBPACK_IMPORTED_MODULE_4__.Jobs;\nFineTuning.Checkpoints = _checkpoints_checkpoints_mjs__WEBPACK_IMPORTED_MODULE_3__.Checkpoints;\nFineTuning.Alpha = _alpha_alpha_mjs__WEBPACK_IMPORTED_MODULE_2__.Alpha; //# sourceMappingURL=fine-tuning.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9maW5lLXR1bmluZy9maW5lLXR1bmluZy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUEsc0ZBQXNGO0FBQ2hDO0FBQ1Y7QUFDSDtBQUNLO0FBQ0o7QUFDc0I7QUFDSjtBQUNqQjtBQUNIO0FBQ2pDLE1BQU1TLG1CQUFtQlQsMkRBQVdBO0lBQ3ZDVSxhQUFjO1FBQ1YsS0FBSyxJQUFJQztRQUNULElBQUksQ0FBQ0MsT0FBTyxHQUFHLElBQUlYLGlEQUFrQixDQUFDLElBQUksQ0FBQ1ksT0FBTztRQUNsRCxJQUFJLENBQUNDLElBQUksR0FBRyxJQUFJUCxnREFBWSxDQUFDLElBQUksQ0FBQ00sT0FBTztRQUN6QyxJQUFJLENBQUNFLFdBQVcsR0FBRyxJQUFJVixxRUFBMEIsQ0FBQyxJQUFJLENBQUNRLE9BQU87UUFDOUQsSUFBSSxDQUFDRyxLQUFLLEdBQUcsSUFBSWIsbURBQWMsQ0FBQyxJQUFJLENBQUNVLE9BQU87SUFDaEQ7QUFDSjtBQUNBSixXQUFXUCxPQUFPLEdBQUdBLGlEQUFPQTtBQUM1Qk8sV0FBV0QsSUFBSSxHQUFHQSxnREFBSUE7QUFDdEJDLFdBQVdILFdBQVcsR0FBR0EscUVBQVdBO0FBQ3BDRyxXQUFXTCxLQUFLLEdBQUdBLG1EQUFLQSxFQUN4Qix3Q0FBd0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zeXN0ZW0tcHJvbXB0LXRvb2wtd2ViLy4vbm9kZV9tb2R1bGVzL29wZW5haS9yZXNvdXJjZXMvZmluZS10dW5pbmcvZmluZS10dW5pbmcubWpzPzI2NzciXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZSBnZW5lcmF0ZWQgZnJvbSBvdXIgT3BlbkFQSSBzcGVjIGJ5IFN0YWlubGVzcy4gU2VlIENPTlRSSUJVVElORy5tZCBmb3IgZGV0YWlscy5cbmltcG9ydCB7IEFQSVJlc291cmNlIH0gZnJvbSBcIi4uLy4uL2NvcmUvcmVzb3VyY2UubWpzXCI7XG5pbXBvcnQgKiBhcyBNZXRob2RzQVBJIGZyb20gXCIuL21ldGhvZHMubWpzXCI7XG5pbXBvcnQgeyBNZXRob2RzLCB9IGZyb20gXCIuL21ldGhvZHMubWpzXCI7XG5pbXBvcnQgKiBhcyBBbHBoYUFQSSBmcm9tIFwiLi9hbHBoYS9hbHBoYS5tanNcIjtcbmltcG9ydCB7IEFscGhhIH0gZnJvbSBcIi4vYWxwaGEvYWxwaGEubWpzXCI7XG5pbXBvcnQgKiBhcyBDaGVja3BvaW50c0FQSSBmcm9tIFwiLi9jaGVja3BvaW50cy9jaGVja3BvaW50cy5tanNcIjtcbmltcG9ydCB7IENoZWNrcG9pbnRzIH0gZnJvbSBcIi4vY2hlY2twb2ludHMvY2hlY2twb2ludHMubWpzXCI7XG5pbXBvcnQgKiBhcyBKb2JzQVBJIGZyb20gXCIuL2pvYnMvam9icy5tanNcIjtcbmltcG9ydCB7IEpvYnMsIH0gZnJvbSBcIi4vam9icy9qb2JzLm1qc1wiO1xuZXhwb3J0IGNsYXNzIEZpbmVUdW5pbmcgZXh0ZW5kcyBBUElSZXNvdXJjZSB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XG4gICAgICAgIHRoaXMubWV0aG9kcyA9IG5ldyBNZXRob2RzQVBJLk1ldGhvZHModGhpcy5fY2xpZW50KTtcbiAgICAgICAgdGhpcy5qb2JzID0gbmV3IEpvYnNBUEkuSm9icyh0aGlzLl9jbGllbnQpO1xuICAgICAgICB0aGlzLmNoZWNrcG9pbnRzID0gbmV3IENoZWNrcG9pbnRzQVBJLkNoZWNrcG9pbnRzKHRoaXMuX2NsaWVudCk7XG4gICAgICAgIHRoaXMuYWxwaGEgPSBuZXcgQWxwaGFBUEkuQWxwaGEodGhpcy5fY2xpZW50KTtcbiAgICB9XG59XG5GaW5lVHVuaW5nLk1ldGhvZHMgPSBNZXRob2RzO1xuRmluZVR1bmluZy5Kb2JzID0gSm9icztcbkZpbmVUdW5pbmcuQ2hlY2twb2ludHMgPSBDaGVja3BvaW50cztcbkZpbmVUdW5pbmcuQWxwaGEgPSBBbHBoYTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWZpbmUtdHVuaW5nLm1qcy5tYXAiXSwibmFtZXMiOlsiQVBJUmVzb3VyY2UiLCJNZXRob2RzQVBJIiwiTWV0aG9kcyIsIkFscGhhQVBJIiwiQWxwaGEiLCJDaGVja3BvaW50c0FQSSIsIkNoZWNrcG9pbnRzIiwiSm9ic0FQSSIsIkpvYnMiLCJGaW5lVHVuaW5nIiwiY29uc3RydWN0b3IiLCJhcmd1bWVudHMiLCJtZXRob2RzIiwiX2NsaWVudCIsImpvYnMiLCJjaGVja3BvaW50cyIsImFscGhhIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/resources/fine-tuning/fine-tuning.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/resources/fine-tuning/jobs/checkpoints.mjs":
/*!************************************************************************!*\
  !*** ./node_modules/openai/resources/fine-tuning/jobs/checkpoints.mjs ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Checkpoints: () => (/* binding */ Checkpoints)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/resource.mjs */ \"(rsc)/./node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../core/pagination.mjs */ \"(rsc)/./node_modules/openai/core/pagination.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../internal/utils/path.mjs */ \"(rsc)/./node_modules/openai/internal/utils/path.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\nclass Checkpoints extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * List checkpoints for a fine-tuning job.\n     *\n     * @example\n     * ```ts\n     * // Automatically fetches more pages as needed.\n     * for await (const fineTuningJobCheckpoint of client.fineTuning.jobs.checkpoints.list(\n     *   'ft-AF1WoRqd3aJAHsqc9NY7iL8F',\n     * )) {\n     *   // ...\n     * }\n     * ```\n     */ list(fineTuningJobID, query = {}, options) {\n        return this._client.getAPIList(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__.path`/fine_tuning/jobs/${fineTuningJobID}/checkpoints`, _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__.CursorPage, {\n            query,\n            ...options\n        });\n    }\n} //# sourceMappingURL=checkpoints.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9maW5lLXR1bmluZy9qb2JzL2NoZWNrcG9pbnRzLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUEsc0ZBQXNGO0FBQzdCO0FBQ0M7QUFDRjtBQUNqRCxNQUFNRyxvQkFBb0JILDJEQUFXQTtJQUN4Qzs7Ozs7Ozs7Ozs7O0tBWUMsR0FDREksS0FBS0MsZUFBZSxFQUFFQyxRQUFRLENBQUMsQ0FBQyxFQUFFQyxPQUFPLEVBQUU7UUFDdkMsT0FBTyxJQUFJLENBQUNDLE9BQU8sQ0FBQ0MsVUFBVSxDQUFDUCwwREFBSyxDQUFDLGtCQUFrQixFQUFFRyxnQkFBZ0IsWUFBWSxDQUFDLEVBQUdKLDREQUFVQSxFQUFHO1lBQUVLO1lBQU8sR0FBR0MsT0FBTztRQUFDO0lBQzlIO0FBQ0osRUFDQSx3Q0FBd0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zeXN0ZW0tcHJvbXB0LXRvb2wtd2ViLy4vbm9kZV9tb2R1bGVzL29wZW5haS9yZXNvdXJjZXMvZmluZS10dW5pbmcvam9icy9jaGVja3BvaW50cy5tanM/NDY0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlIGdlbmVyYXRlZCBmcm9tIG91ciBPcGVuQVBJIHNwZWMgYnkgU3RhaW5sZXNzLiBTZWUgQ09OVFJJQlVUSU5HLm1kIGZvciBkZXRhaWxzLlxuaW1wb3J0IHsgQVBJUmVzb3VyY2UgfSBmcm9tIFwiLi4vLi4vLi4vY29yZS9yZXNvdXJjZS5tanNcIjtcbmltcG9ydCB7IEN1cnNvclBhZ2UgfSBmcm9tIFwiLi4vLi4vLi4vY29yZS9wYWdpbmF0aW9uLm1qc1wiO1xuaW1wb3J0IHsgcGF0aCB9IGZyb20gXCIuLi8uLi8uLi9pbnRlcm5hbC91dGlscy9wYXRoLm1qc1wiO1xuZXhwb3J0IGNsYXNzIENoZWNrcG9pbnRzIGV4dGVuZHMgQVBJUmVzb3VyY2Uge1xuICAgIC8qKlxuICAgICAqIExpc3QgY2hlY2twb2ludHMgZm9yIGEgZmluZS10dW5pbmcgam9iLlxuICAgICAqXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBgYGB0c1xuICAgICAqIC8vIEF1dG9tYXRpY2FsbHkgZmV0Y2hlcyBtb3JlIHBhZ2VzIGFzIG5lZWRlZC5cbiAgICAgKiBmb3IgYXdhaXQgKGNvbnN0IGZpbmVUdW5pbmdKb2JDaGVja3BvaW50IG9mIGNsaWVudC5maW5lVHVuaW5nLmpvYnMuY2hlY2twb2ludHMubGlzdChcbiAgICAgKiAgICdmdC1BRjFXb1JxZDNhSkFIc3FjOU5ZN2lMOEYnLFxuICAgICAqICkpIHtcbiAgICAgKiAgIC8vIC4uLlxuICAgICAqIH1cbiAgICAgKiBgYGBcbiAgICAgKi9cbiAgICBsaXN0KGZpbmVUdW5pbmdKb2JJRCwgcXVlcnkgPSB7fSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmdldEFQSUxpc3QocGF0aCBgL2ZpbmVfdHVuaW5nL2pvYnMvJHtmaW5lVHVuaW5nSm9iSUR9L2NoZWNrcG9pbnRzYCwgKEN1cnNvclBhZ2UpLCB7IHF1ZXJ5LCAuLi5vcHRpb25zIH0pO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNoZWNrcG9pbnRzLm1qcy5tYXAiXSwibmFtZXMiOlsiQVBJUmVzb3VyY2UiLCJDdXJzb3JQYWdlIiwicGF0aCIsIkNoZWNrcG9pbnRzIiwibGlzdCIsImZpbmVUdW5pbmdKb2JJRCIsInF1ZXJ5Iiwib3B0aW9ucyIsIl9jbGllbnQiLCJnZXRBUElMaXN0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/resources/fine-tuning/jobs/checkpoints.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/resources/fine-tuning/jobs/jobs.mjs":
/*!*****************************************************************!*\
  !*** ./node_modules/openai/resources/fine-tuning/jobs/jobs.mjs ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Jobs: () => (/* binding */ Jobs)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/resource.mjs */ \"(rsc)/./node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _checkpoints_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./checkpoints.mjs */ \"(rsc)/./node_modules/openai/resources/fine-tuning/jobs/checkpoints.mjs\");\n/* harmony import */ var _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../core/pagination.mjs */ \"(rsc)/./node_modules/openai/core/pagination.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../internal/utils/path.mjs */ \"(rsc)/./node_modules/openai/internal/utils/path.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\n\n\nclass Jobs extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    constructor(){\n        super(...arguments);\n        this.checkpoints = new _checkpoints_mjs__WEBPACK_IMPORTED_MODULE_1__.Checkpoints(this._client);\n    }\n    /**\n     * Creates a fine-tuning job which begins the process of creating a new model from\n     * a given dataset.\n     *\n     * Response includes details of the enqueued job including job status and the name\n     * of the fine-tuned models once complete.\n     *\n     * [Learn more about fine-tuning](https://platform.openai.com/docs/guides/model-optimization)\n     *\n     * @example\n     * ```ts\n     * const fineTuningJob = await client.fineTuning.jobs.create({\n     *   model: 'gpt-4o-mini',\n     *   training_file: 'file-abc123',\n     * });\n     * ```\n     */ create(body, options) {\n        return this._client.post(\"/fine_tuning/jobs\", {\n            body,\n            ...options\n        });\n    }\n    /**\n     * Get info about a fine-tuning job.\n     *\n     * [Learn more about fine-tuning](https://platform.openai.com/docs/guides/model-optimization)\n     *\n     * @example\n     * ```ts\n     * const fineTuningJob = await client.fineTuning.jobs.retrieve(\n     *   'ft-AF1WoRqd3aJAHsqc9NY7iL8F',\n     * );\n     * ```\n     */ retrieve(fineTuningJobID, options) {\n        return this._client.get(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__.path`/fine_tuning/jobs/${fineTuningJobID}`, options);\n    }\n    /**\n     * List your organization's fine-tuning jobs\n     *\n     * @example\n     * ```ts\n     * // Automatically fetches more pages as needed.\n     * for await (const fineTuningJob of client.fineTuning.jobs.list()) {\n     *   // ...\n     * }\n     * ```\n     */ list(query = {}, options) {\n        return this._client.getAPIList(\"/fine_tuning/jobs\", _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_2__.CursorPage, {\n            query,\n            ...options\n        });\n    }\n    /**\n     * Immediately cancel a fine-tune job.\n     *\n     * @example\n     * ```ts\n     * const fineTuningJob = await client.fineTuning.jobs.cancel(\n     *   'ft-AF1WoRqd3aJAHsqc9NY7iL8F',\n     * );\n     * ```\n     */ cancel(fineTuningJobID, options) {\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__.path`/fine_tuning/jobs/${fineTuningJobID}/cancel`, options);\n    }\n    /**\n     * Get status updates for a fine-tuning job.\n     *\n     * @example\n     * ```ts\n     * // Automatically fetches more pages as needed.\n     * for await (const fineTuningJobEvent of client.fineTuning.jobs.listEvents(\n     *   'ft-AF1WoRqd3aJAHsqc9NY7iL8F',\n     * )) {\n     *   // ...\n     * }\n     * ```\n     */ listEvents(fineTuningJobID, query = {}, options) {\n        return this._client.getAPIList(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__.path`/fine_tuning/jobs/${fineTuningJobID}/events`, _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_2__.CursorPage, {\n            query,\n            ...options\n        });\n    }\n    /**\n     * Pause a fine-tune job.\n     *\n     * @example\n     * ```ts\n     * const fineTuningJob = await client.fineTuning.jobs.pause(\n     *   'ft-AF1WoRqd3aJAHsqc9NY7iL8F',\n     * );\n     * ```\n     */ pause(fineTuningJobID, options) {\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__.path`/fine_tuning/jobs/${fineTuningJobID}/pause`, options);\n    }\n    /**\n     * Resume a fine-tune job.\n     *\n     * @example\n     * ```ts\n     * const fineTuningJob = await client.fineTuning.jobs.resume(\n     *   'ft-AF1WoRqd3aJAHsqc9NY7iL8F',\n     * );\n     * ```\n     */ resume(fineTuningJobID, options) {\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__.path`/fine_tuning/jobs/${fineTuningJobID}/resume`, options);\n    }\n}\nJobs.Checkpoints = _checkpoints_mjs__WEBPACK_IMPORTED_MODULE_1__.Checkpoints; //# sourceMappingURL=jobs.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9maW5lLXR1bmluZy9qb2JzL2pvYnMubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUEsc0ZBQXNGO0FBQzdCO0FBQ0w7QUFDSDtBQUNTO0FBQ0Y7QUFDakQsTUFBTUssYUFBYUwsMkRBQVdBO0lBQ2pDTSxhQUFjO1FBQ1YsS0FBSyxJQUFJQztRQUNULElBQUksQ0FBQ0MsV0FBVyxHQUFHLElBQUlQLHlEQUEwQixDQUFDLElBQUksQ0FBQ1EsT0FBTztJQUNsRTtJQUNBOzs7Ozs7Ozs7Ozs7Ozs7O0tBZ0JDLEdBQ0RDLE9BQU9DLElBQUksRUFBRUMsT0FBTyxFQUFFO1FBQ2xCLE9BQU8sSUFBSSxDQUFDSCxPQUFPLENBQUNJLElBQUksQ0FBQyxxQkFBcUI7WUFBRUY7WUFBTSxHQUFHQyxPQUFPO1FBQUM7SUFDckU7SUFDQTs7Ozs7Ozs7Ozs7S0FXQyxHQUNERSxTQUFTQyxlQUFlLEVBQUVILE9BQU8sRUFBRTtRQUMvQixPQUFPLElBQUksQ0FBQ0gsT0FBTyxDQUFDTyxHQUFHLENBQUNaLDBEQUFLLENBQUMsa0JBQWtCLEVBQUVXLGdCQUFnQixDQUFDLEVBQUVIO0lBQ3pFO0lBQ0E7Ozs7Ozs7Ozs7S0FVQyxHQUNESyxLQUFLQyxRQUFRLENBQUMsQ0FBQyxFQUFFTixPQUFPLEVBQUU7UUFDdEIsT0FBTyxJQUFJLENBQUNILE9BQU8sQ0FBQ1UsVUFBVSxDQUFDLHFCQUFzQmhCLDREQUFVQSxFQUFHO1lBQUVlO1lBQU8sR0FBR04sT0FBTztRQUFDO0lBQzFGO0lBQ0E7Ozs7Ozs7OztLQVNDLEdBQ0RRLE9BQU9MLGVBQWUsRUFBRUgsT0FBTyxFQUFFO1FBQzdCLE9BQU8sSUFBSSxDQUFDSCxPQUFPLENBQUNJLElBQUksQ0FBQ1QsMERBQUssQ0FBQyxrQkFBa0IsRUFBRVcsZ0JBQWdCLE9BQU8sQ0FBQyxFQUFFSDtJQUNqRjtJQUNBOzs7Ozs7Ozs7Ozs7S0FZQyxHQUNEUyxXQUFXTixlQUFlLEVBQUVHLFFBQVEsQ0FBQyxDQUFDLEVBQUVOLE9BQU8sRUFBRTtRQUM3QyxPQUFPLElBQUksQ0FBQ0gsT0FBTyxDQUFDVSxVQUFVLENBQUNmLDBEQUFLLENBQUMsa0JBQWtCLEVBQUVXLGdCQUFnQixPQUFPLENBQUMsRUFBR1osNERBQVVBLEVBQUc7WUFBRWU7WUFBTyxHQUFHTixPQUFPO1FBQUM7SUFDekg7SUFDQTs7Ozs7Ozs7O0tBU0MsR0FDRFUsTUFBTVAsZUFBZSxFQUFFSCxPQUFPLEVBQUU7UUFDNUIsT0FBTyxJQUFJLENBQUNILE9BQU8sQ0FBQ0ksSUFBSSxDQUFDVCwwREFBSyxDQUFDLGtCQUFrQixFQUFFVyxnQkFBZ0IsTUFBTSxDQUFDLEVBQUVIO0lBQ2hGO0lBQ0E7Ozs7Ozs7OztLQVNDLEdBQ0RXLE9BQU9SLGVBQWUsRUFBRUgsT0FBTyxFQUFFO1FBQzdCLE9BQU8sSUFBSSxDQUFDSCxPQUFPLENBQUNJLElBQUksQ0FBQ1QsMERBQUssQ0FBQyxrQkFBa0IsRUFBRVcsZ0JBQWdCLE9BQU8sQ0FBQyxFQUFFSDtJQUNqRjtBQUNKO0FBQ0FQLEtBQUtILFdBQVcsR0FBR0EseURBQVdBLEVBQzlCLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL3N5c3RlbS1wcm9tcHQtdG9vbC13ZWIvLi9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9maW5lLXR1bmluZy9qb2JzL2pvYnMubWpzPzk4MTciXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZSBnZW5lcmF0ZWQgZnJvbSBvdXIgT3BlbkFQSSBzcGVjIGJ5IFN0YWlubGVzcy4gU2VlIENPTlRSSUJVVElORy5tZCBmb3IgZGV0YWlscy5cbmltcG9ydCB7IEFQSVJlc291cmNlIH0gZnJvbSBcIi4uLy4uLy4uL2NvcmUvcmVzb3VyY2UubWpzXCI7XG5pbXBvcnQgKiBhcyBDaGVja3BvaW50c0FQSSBmcm9tIFwiLi9jaGVja3BvaW50cy5tanNcIjtcbmltcG9ydCB7IENoZWNrcG9pbnRzLCB9IGZyb20gXCIuL2NoZWNrcG9pbnRzLm1qc1wiO1xuaW1wb3J0IHsgQ3Vyc29yUGFnZSB9IGZyb20gXCIuLi8uLi8uLi9jb3JlL3BhZ2luYXRpb24ubWpzXCI7XG5pbXBvcnQgeyBwYXRoIH0gZnJvbSBcIi4uLy4uLy4uL2ludGVybmFsL3V0aWxzL3BhdGgubWpzXCI7XG5leHBvcnQgY2xhc3MgSm9icyBleHRlbmRzIEFQSVJlc291cmNlIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgdGhpcy5jaGVja3BvaW50cyA9IG5ldyBDaGVja3BvaW50c0FQSS5DaGVja3BvaW50cyh0aGlzLl9jbGllbnQpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGEgZmluZS10dW5pbmcgam9iIHdoaWNoIGJlZ2lucyB0aGUgcHJvY2VzcyBvZiBjcmVhdGluZyBhIG5ldyBtb2RlbCBmcm9tXG4gICAgICogYSBnaXZlbiBkYXRhc2V0LlxuICAgICAqXG4gICAgICogUmVzcG9uc2UgaW5jbHVkZXMgZGV0YWlscyBvZiB0aGUgZW5xdWV1ZWQgam9iIGluY2x1ZGluZyBqb2Igc3RhdHVzIGFuZCB0aGUgbmFtZVxuICAgICAqIG9mIHRoZSBmaW5lLXR1bmVkIG1vZGVscyBvbmNlIGNvbXBsZXRlLlxuICAgICAqXG4gICAgICogW0xlYXJuIG1vcmUgYWJvdXQgZmluZS10dW5pbmddKGh0dHBzOi8vcGxhdGZvcm0ub3BlbmFpLmNvbS9kb2NzL2d1aWRlcy9tb2RlbC1vcHRpbWl6YXRpb24pXG4gICAgICpcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYHRzXG4gICAgICogY29uc3QgZmluZVR1bmluZ0pvYiA9IGF3YWl0IGNsaWVudC5maW5lVHVuaW5nLmpvYnMuY3JlYXRlKHtcbiAgICAgKiAgIG1vZGVsOiAnZ3B0LTRvLW1pbmknLFxuICAgICAqICAgdHJhaW5pbmdfZmlsZTogJ2ZpbGUtYWJjMTIzJyxcbiAgICAgKiB9KTtcbiAgICAgKiBgYGBcbiAgICAgKi9cbiAgICBjcmVhdGUoYm9keSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LnBvc3QoJy9maW5lX3R1bmluZy9qb2JzJywgeyBib2R5LCAuLi5vcHRpb25zIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXQgaW5mbyBhYm91dCBhIGZpbmUtdHVuaW5nIGpvYi5cbiAgICAgKlxuICAgICAqIFtMZWFybiBtb3JlIGFib3V0IGZpbmUtdHVuaW5nXShodHRwczovL3BsYXRmb3JtLm9wZW5haS5jb20vZG9jcy9ndWlkZXMvbW9kZWwtb3B0aW1pemF0aW9uKVxuICAgICAqXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBgYGB0c1xuICAgICAqIGNvbnN0IGZpbmVUdW5pbmdKb2IgPSBhd2FpdCBjbGllbnQuZmluZVR1bmluZy5qb2JzLnJldHJpZXZlKFxuICAgICAqICAgJ2Z0LUFGMVdvUnFkM2FKQUhzcWM5Tlk3aUw4RicsXG4gICAgICogKTtcbiAgICAgKiBgYGBcbiAgICAgKi9cbiAgICByZXRyaWV2ZShmaW5lVHVuaW5nSm9iSUQsIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5nZXQocGF0aCBgL2ZpbmVfdHVuaW5nL2pvYnMvJHtmaW5lVHVuaW5nSm9iSUR9YCwgb3B0aW9ucyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIExpc3QgeW91ciBvcmdhbml6YXRpb24ncyBmaW5lLXR1bmluZyBqb2JzXG4gICAgICpcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYHRzXG4gICAgICogLy8gQXV0b21hdGljYWxseSBmZXRjaGVzIG1vcmUgcGFnZXMgYXMgbmVlZGVkLlxuICAgICAqIGZvciBhd2FpdCAoY29uc3QgZmluZVR1bmluZ0pvYiBvZiBjbGllbnQuZmluZVR1bmluZy5qb2JzLmxpc3QoKSkge1xuICAgICAqICAgLy8gLi4uXG4gICAgICogfVxuICAgICAqIGBgYFxuICAgICAqL1xuICAgIGxpc3QocXVlcnkgPSB7fSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmdldEFQSUxpc3QoJy9maW5lX3R1bmluZy9qb2JzJywgKEN1cnNvclBhZ2UpLCB7IHF1ZXJ5LCAuLi5vcHRpb25zIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBJbW1lZGlhdGVseSBjYW5jZWwgYSBmaW5lLXR1bmUgam9iLlxuICAgICAqXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBgYGB0c1xuICAgICAqIGNvbnN0IGZpbmVUdW5pbmdKb2IgPSBhd2FpdCBjbGllbnQuZmluZVR1bmluZy5qb2JzLmNhbmNlbChcbiAgICAgKiAgICdmdC1BRjFXb1JxZDNhSkFIc3FjOU5ZN2lMOEYnLFxuICAgICAqICk7XG4gICAgICogYGBgXG4gICAgICovXG4gICAgY2FuY2VsKGZpbmVUdW5pbmdKb2JJRCwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LnBvc3QocGF0aCBgL2ZpbmVfdHVuaW5nL2pvYnMvJHtmaW5lVHVuaW5nSm9iSUR9L2NhbmNlbGAsIG9wdGlvbnMpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXQgc3RhdHVzIHVwZGF0ZXMgZm9yIGEgZmluZS10dW5pbmcgam9iLlxuICAgICAqXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBgYGB0c1xuICAgICAqIC8vIEF1dG9tYXRpY2FsbHkgZmV0Y2hlcyBtb3JlIHBhZ2VzIGFzIG5lZWRlZC5cbiAgICAgKiBmb3IgYXdhaXQgKGNvbnN0IGZpbmVUdW5pbmdKb2JFdmVudCBvZiBjbGllbnQuZmluZVR1bmluZy5qb2JzLmxpc3RFdmVudHMoXG4gICAgICogICAnZnQtQUYxV29ScWQzYUpBSHNxYzlOWTdpTDhGJyxcbiAgICAgKiApKSB7XG4gICAgICogICAvLyAuLi5cbiAgICAgKiB9XG4gICAgICogYGBgXG4gICAgICovXG4gICAgbGlzdEV2ZW50cyhmaW5lVHVuaW5nSm9iSUQsIHF1ZXJ5ID0ge30sIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5nZXRBUElMaXN0KHBhdGggYC9maW5lX3R1bmluZy9qb2JzLyR7ZmluZVR1bmluZ0pvYklEfS9ldmVudHNgLCAoQ3Vyc29yUGFnZSksIHsgcXVlcnksIC4uLm9wdGlvbnMgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFBhdXNlIGEgZmluZS10dW5lIGpvYi5cbiAgICAgKlxuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgdHNcbiAgICAgKiBjb25zdCBmaW5lVHVuaW5nSm9iID0gYXdhaXQgY2xpZW50LmZpbmVUdW5pbmcuam9icy5wYXVzZShcbiAgICAgKiAgICdmdC1BRjFXb1JxZDNhSkFIc3FjOU5ZN2lMOEYnLFxuICAgICAqICk7XG4gICAgICogYGBgXG4gICAgICovXG4gICAgcGF1c2UoZmluZVR1bmluZ0pvYklELCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQucG9zdChwYXRoIGAvZmluZV90dW5pbmcvam9icy8ke2ZpbmVUdW5pbmdKb2JJRH0vcGF1c2VgLCBvcHRpb25zKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmVzdW1lIGEgZmluZS10dW5lIGpvYi5cbiAgICAgKlxuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgdHNcbiAgICAgKiBjb25zdCBmaW5lVHVuaW5nSm9iID0gYXdhaXQgY2xpZW50LmZpbmVUdW5pbmcuam9icy5yZXN1bWUoXG4gICAgICogICAnZnQtQUYxV29ScWQzYUpBSHNxYzlOWTdpTDhGJyxcbiAgICAgKiApO1xuICAgICAqIGBgYFxuICAgICAqL1xuICAgIHJlc3VtZShmaW5lVHVuaW5nSm9iSUQsIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5wb3N0KHBhdGggYC9maW5lX3R1bmluZy9qb2JzLyR7ZmluZVR1bmluZ0pvYklEfS9yZXN1bWVgLCBvcHRpb25zKTtcbiAgICB9XG59XG5Kb2JzLkNoZWNrcG9pbnRzID0gQ2hlY2twb2ludHM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1qb2JzLm1qcy5tYXAiXSwibmFtZXMiOlsiQVBJUmVzb3VyY2UiLCJDaGVja3BvaW50c0FQSSIsIkNoZWNrcG9pbnRzIiwiQ3Vyc29yUGFnZSIsInBhdGgiLCJKb2JzIiwiY29uc3RydWN0b3IiLCJhcmd1bWVudHMiLCJjaGVja3BvaW50cyIsIl9jbGllbnQiLCJjcmVhdGUiLCJib2R5Iiwib3B0aW9ucyIsInBvc3QiLCJyZXRyaWV2ZSIsImZpbmVUdW5pbmdKb2JJRCIsImdldCIsImxpc3QiLCJxdWVyeSIsImdldEFQSUxpc3QiLCJjYW5jZWwiLCJsaXN0RXZlbnRzIiwicGF1c2UiLCJyZXN1bWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/resources/fine-tuning/jobs/jobs.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/resources/fine-tuning/methods.mjs":
/*!***************************************************************!*\
  !*** ./node_modules/openai/resources/fine-tuning/methods.mjs ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Methods: () => (/* binding */ Methods)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/resource.mjs */ \"(rsc)/./node_modules/openai/core/resource.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nclass Methods extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n} //# sourceMappingURL=methods.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9maW5lLXR1bmluZy9tZXRob2RzLm1qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLHNGQUFzRjtBQUNoQztBQUMvQyxNQUFNQyxnQkFBZ0JELDJEQUFXQTtBQUN4QyxFQUNBLG9DQUFvQyIsInNvdXJjZXMiOlsid2VicGFjazovL3N5c3RlbS1wcm9tcHQtdG9vbC13ZWIvLi9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9maW5lLXR1bmluZy9tZXRob2RzLm1qcz9hOWIyIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG5pbXBvcnQgeyBBUElSZXNvdXJjZSB9IGZyb20gXCIuLi8uLi9jb3JlL3Jlc291cmNlLm1qc1wiO1xuZXhwb3J0IGNsYXNzIE1ldGhvZHMgZXh0ZW5kcyBBUElSZXNvdXJjZSB7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1tZXRob2RzLm1qcy5tYXAiXSwibmFtZXMiOlsiQVBJUmVzb3VyY2UiLCJNZXRob2RzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/resources/fine-tuning/methods.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/resources/graders/grader-models.mjs":
/*!*****************************************************************!*\
  !*** ./node_modules/openai/resources/graders/grader-models.mjs ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GraderModels: () => (/* binding */ GraderModels)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/resource.mjs */ \"(rsc)/./node_modules/openai/core/resource.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nclass GraderModels extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n} //# sourceMappingURL=grader-models.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9ncmFkZXJzL2dyYWRlci1tb2RlbHMubWpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsc0ZBQXNGO0FBQ2hDO0FBQy9DLE1BQU1DLHFCQUFxQkQsMkRBQVdBO0FBQzdDLEVBQ0EsMENBQTBDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3lzdGVtLXByb21wdC10b29sLXdlYi8uL25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2dyYWRlcnMvZ3JhZGVyLW1vZGVscy5tanM/M2NlMiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlIGdlbmVyYXRlZCBmcm9tIG91ciBPcGVuQVBJIHNwZWMgYnkgU3RhaW5sZXNzLiBTZWUgQ09OVFJJQlVUSU5HLm1kIGZvciBkZXRhaWxzLlxuaW1wb3J0IHsgQVBJUmVzb3VyY2UgfSBmcm9tIFwiLi4vLi4vY29yZS9yZXNvdXJjZS5tanNcIjtcbmV4cG9ydCBjbGFzcyBHcmFkZXJNb2RlbHMgZXh0ZW5kcyBBUElSZXNvdXJjZSB7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ncmFkZXItbW9kZWxzLm1qcy5tYXAiXSwibmFtZXMiOlsiQVBJUmVzb3VyY2UiLCJHcmFkZXJNb2RlbHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/resources/graders/grader-models.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/resources/graders/graders.mjs":
/*!***********************************************************!*\
  !*** ./node_modules/openai/resources/graders/graders.mjs ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Graders: () => (/* binding */ Graders)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/resource.mjs */ \"(rsc)/./node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _grader_models_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./grader-models.mjs */ \"(rsc)/./node_modules/openai/resources/graders/grader-models.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\nclass Graders extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    constructor(){\n        super(...arguments);\n        this.graderModels = new _grader_models_mjs__WEBPACK_IMPORTED_MODULE_1__.GraderModels(this._client);\n    }\n}\nGraders.GraderModels = _grader_models_mjs__WEBPACK_IMPORTED_MODULE_1__.GraderModels; //# sourceMappingURL=graders.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9ncmFkZXJzL2dyYWRlcnMubWpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLHNGQUFzRjtBQUNoQztBQUNDO0FBQ0g7QUFDN0MsTUFBTUcsZ0JBQWdCSCwyREFBV0E7SUFDcENJLGFBQWM7UUFDVixLQUFLLElBQUlDO1FBQ1QsSUFBSSxDQUFDQyxZQUFZLEdBQUcsSUFBSUwsNERBQTRCLENBQUMsSUFBSSxDQUFDTSxPQUFPO0lBQ3JFO0FBQ0o7QUFDQUosUUFBUUQsWUFBWSxHQUFHQSw0REFBWUEsRUFDbkMsb0NBQW9DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3lzdGVtLXByb21wdC10b29sLXdlYi8uL25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2dyYWRlcnMvZ3JhZGVycy5tanM/ZTMwYiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlIGdlbmVyYXRlZCBmcm9tIG91ciBPcGVuQVBJIHNwZWMgYnkgU3RhaW5sZXNzLiBTZWUgQ09OVFJJQlVUSU5HLm1kIGZvciBkZXRhaWxzLlxuaW1wb3J0IHsgQVBJUmVzb3VyY2UgfSBmcm9tIFwiLi4vLi4vY29yZS9yZXNvdXJjZS5tanNcIjtcbmltcG9ydCAqIGFzIEdyYWRlck1vZGVsc0FQSSBmcm9tIFwiLi9ncmFkZXItbW9kZWxzLm1qc1wiO1xuaW1wb3J0IHsgR3JhZGVyTW9kZWxzLCB9IGZyb20gXCIuL2dyYWRlci1tb2RlbHMubWpzXCI7XG5leHBvcnQgY2xhc3MgR3JhZGVycyBleHRlbmRzIEFQSVJlc291cmNlIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgdGhpcy5ncmFkZXJNb2RlbHMgPSBuZXcgR3JhZGVyTW9kZWxzQVBJLkdyYWRlck1vZGVscyh0aGlzLl9jbGllbnQpO1xuICAgIH1cbn1cbkdyYWRlcnMuR3JhZGVyTW9kZWxzID0gR3JhZGVyTW9kZWxzO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z3JhZGVycy5tanMubWFwIl0sIm5hbWVzIjpbIkFQSVJlc291cmNlIiwiR3JhZGVyTW9kZWxzQVBJIiwiR3JhZGVyTW9kZWxzIiwiR3JhZGVycyIsImNvbnN0cnVjdG9yIiwiYXJndW1lbnRzIiwiZ3JhZGVyTW9kZWxzIiwiX2NsaWVudCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/resources/graders/graders.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/resources/images.mjs":
/*!**************************************************!*\
  !*** ./node_modules/openai/resources/images.mjs ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Images: () => (/* binding */ Images)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/resource.mjs */ \"(rsc)/./node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _internal_uploads_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../internal/uploads.mjs */ \"(rsc)/./node_modules/openai/internal/uploads.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\nclass Images extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * Creates a variation of a given image. This endpoint only supports `dall-e-2`.\n     *\n     * @example\n     * ```ts\n     * const imagesResponse = await client.images.createVariation({\n     *   image: fs.createReadStream('otter.png'),\n     * });\n     * ```\n     */ createVariation(body, options) {\n        return this._client.post(\"/images/variations\", (0,_internal_uploads_mjs__WEBPACK_IMPORTED_MODULE_1__.multipartFormRequestOptions)({\n            body,\n            ...options\n        }, this._client));\n    }\n    edit(body, options) {\n        return this._client.post(\"/images/edits\", (0,_internal_uploads_mjs__WEBPACK_IMPORTED_MODULE_1__.multipartFormRequestOptions)({\n            body,\n            ...options,\n            stream: body.stream ?? false\n        }, this._client));\n    }\n    generate(body, options) {\n        return this._client.post(\"/images/generations\", {\n            body,\n            ...options,\n            stream: body.stream ?? false\n        });\n    }\n} //# sourceMappingURL=images.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9pbWFnZXMubWpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLHNGQUFzRjtBQUNuQztBQUNtQjtBQUMvRCxNQUFNRSxlQUFlRiwyREFBV0E7SUFDbkM7Ozs7Ozs7OztLQVNDLEdBQ0RHLGdCQUFnQkMsSUFBSSxFQUFFQyxPQUFPLEVBQUU7UUFDM0IsT0FBTyxJQUFJLENBQUNDLE9BQU8sQ0FBQ0MsSUFBSSxDQUFDLHNCQUFzQk4sa0ZBQTJCQSxDQUFDO1lBQUVHO1lBQU0sR0FBR0MsT0FBTztRQUFDLEdBQUcsSUFBSSxDQUFDQyxPQUFPO0lBQ2pIO0lBQ0FFLEtBQUtKLElBQUksRUFBRUMsT0FBTyxFQUFFO1FBQ2hCLE9BQU8sSUFBSSxDQUFDQyxPQUFPLENBQUNDLElBQUksQ0FBQyxpQkFBaUJOLGtGQUEyQkEsQ0FBQztZQUFFRztZQUFNLEdBQUdDLE9BQU87WUFBRUksUUFBUUwsS0FBS0ssTUFBTSxJQUFJO1FBQU0sR0FBRyxJQUFJLENBQUNILE9BQU87SUFDMUk7SUFDQUksU0FBU04sSUFBSSxFQUFFQyxPQUFPLEVBQUU7UUFDcEIsT0FBTyxJQUFJLENBQUNDLE9BQU8sQ0FBQ0MsSUFBSSxDQUFDLHVCQUF1QjtZQUFFSDtZQUFNLEdBQUdDLE9BQU87WUFBRUksUUFBUUwsS0FBS0ssTUFBTSxJQUFJO1FBQU07SUFDckc7QUFDSixFQUNBLG1DQUFtQyIsInNvdXJjZXMiOlsid2VicGFjazovL3N5c3RlbS1wcm9tcHQtdG9vbC13ZWIvLi9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9pbWFnZXMubWpzPzZmN2UiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZSBnZW5lcmF0ZWQgZnJvbSBvdXIgT3BlbkFQSSBzcGVjIGJ5IFN0YWlubGVzcy4gU2VlIENPTlRSSUJVVElORy5tZCBmb3IgZGV0YWlscy5cbmltcG9ydCB7IEFQSVJlc291cmNlIH0gZnJvbSBcIi4uL2NvcmUvcmVzb3VyY2UubWpzXCI7XG5pbXBvcnQgeyBtdWx0aXBhcnRGb3JtUmVxdWVzdE9wdGlvbnMgfSBmcm9tIFwiLi4vaW50ZXJuYWwvdXBsb2Fkcy5tanNcIjtcbmV4cG9ydCBjbGFzcyBJbWFnZXMgZXh0ZW5kcyBBUElSZXNvdXJjZSB7XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhIHZhcmlhdGlvbiBvZiBhIGdpdmVuIGltYWdlLiBUaGlzIGVuZHBvaW50IG9ubHkgc3VwcG9ydHMgYGRhbGwtZS0yYC5cbiAgICAgKlxuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgdHNcbiAgICAgKiBjb25zdCBpbWFnZXNSZXNwb25zZSA9IGF3YWl0IGNsaWVudC5pbWFnZXMuY3JlYXRlVmFyaWF0aW9uKHtcbiAgICAgKiAgIGltYWdlOiBmcy5jcmVhdGVSZWFkU3RyZWFtKCdvdHRlci5wbmcnKSxcbiAgICAgKiB9KTtcbiAgICAgKiBgYGBcbiAgICAgKi9cbiAgICBjcmVhdGVWYXJpYXRpb24oYm9keSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LnBvc3QoJy9pbWFnZXMvdmFyaWF0aW9ucycsIG11bHRpcGFydEZvcm1SZXF1ZXN0T3B0aW9ucyh7IGJvZHksIC4uLm9wdGlvbnMgfSwgdGhpcy5fY2xpZW50KSk7XG4gICAgfVxuICAgIGVkaXQoYm9keSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LnBvc3QoJy9pbWFnZXMvZWRpdHMnLCBtdWx0aXBhcnRGb3JtUmVxdWVzdE9wdGlvbnMoeyBib2R5LCAuLi5vcHRpb25zLCBzdHJlYW06IGJvZHkuc3RyZWFtID8/IGZhbHNlIH0sIHRoaXMuX2NsaWVudCkpO1xuICAgIH1cbiAgICBnZW5lcmF0ZShib2R5LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQucG9zdCgnL2ltYWdlcy9nZW5lcmF0aW9ucycsIHsgYm9keSwgLi4ub3B0aW9ucywgc3RyZWFtOiBib2R5LnN0cmVhbSA/PyBmYWxzZSB9KTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbWFnZXMubWpzLm1hcCJdLCJuYW1lcyI6WyJBUElSZXNvdXJjZSIsIm11bHRpcGFydEZvcm1SZXF1ZXN0T3B0aW9ucyIsIkltYWdlcyIsImNyZWF0ZVZhcmlhdGlvbiIsImJvZHkiLCJvcHRpb25zIiwiX2NsaWVudCIsInBvc3QiLCJlZGl0Iiwic3RyZWFtIiwiZ2VuZXJhdGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/resources/images.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/resources/index.mjs":
/*!*************************************************!*\
  !*** ./node_modules/openai/resources/index.mjs ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Audio: () => (/* reexport safe */ _audio_audio_mjs__WEBPACK_IMPORTED_MODULE_2__.Audio),\n/* harmony export */   Batches: () => (/* reexport safe */ _batches_mjs__WEBPACK_IMPORTED_MODULE_3__.Batches),\n/* harmony export */   Beta: () => (/* reexport safe */ _beta_beta_mjs__WEBPACK_IMPORTED_MODULE_4__.Beta),\n/* harmony export */   Chat: () => (/* reexport safe */ _chat_index_mjs__WEBPACK_IMPORTED_MODULE_0__.Chat),\n/* harmony export */   Completions: () => (/* reexport safe */ _completions_mjs__WEBPACK_IMPORTED_MODULE_5__.Completions),\n/* harmony export */   Containers: () => (/* reexport safe */ _containers_containers_mjs__WEBPACK_IMPORTED_MODULE_6__.Containers),\n/* harmony export */   Conversations: () => (/* reexport safe */ _conversations_conversations_mjs__WEBPACK_IMPORTED_MODULE_7__.Conversations),\n/* harmony export */   Embeddings: () => (/* reexport safe */ _embeddings_mjs__WEBPACK_IMPORTED_MODULE_8__.Embeddings),\n/* harmony export */   Evals: () => (/* reexport safe */ _evals_evals_mjs__WEBPACK_IMPORTED_MODULE_9__.Evals),\n/* harmony export */   Files: () => (/* reexport safe */ _files_mjs__WEBPACK_IMPORTED_MODULE_10__.Files),\n/* harmony export */   FineTuning: () => (/* reexport safe */ _fine_tuning_fine_tuning_mjs__WEBPACK_IMPORTED_MODULE_11__.FineTuning),\n/* harmony export */   Graders: () => (/* reexport safe */ _graders_graders_mjs__WEBPACK_IMPORTED_MODULE_12__.Graders),\n/* harmony export */   Images: () => (/* reexport safe */ _images_mjs__WEBPACK_IMPORTED_MODULE_13__.Images),\n/* harmony export */   Models: () => (/* reexport safe */ _models_mjs__WEBPACK_IMPORTED_MODULE_14__.Models),\n/* harmony export */   Moderations: () => (/* reexport safe */ _moderations_mjs__WEBPACK_IMPORTED_MODULE_15__.Moderations),\n/* harmony export */   Realtime: () => (/* reexport safe */ _realtime_realtime_mjs__WEBPACK_IMPORTED_MODULE_16__.Realtime),\n/* harmony export */   Responses: () => (/* reexport safe */ _responses_responses_mjs__WEBPACK_IMPORTED_MODULE_17__.Responses),\n/* harmony export */   Uploads: () => (/* reexport safe */ _uploads_uploads_mjs__WEBPACK_IMPORTED_MODULE_18__.Uploads),\n/* harmony export */   VectorStores: () => (/* reexport safe */ _vector_stores_vector_stores_mjs__WEBPACK_IMPORTED_MODULE_19__.VectorStores),\n/* harmony export */   Webhooks: () => (/* reexport safe */ _webhooks_mjs__WEBPACK_IMPORTED_MODULE_20__.Webhooks)\n/* harmony export */ });\n/* harmony import */ var _chat_index_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chat/index.mjs */ \"(rsc)/./node_modules/openai/resources/chat/index.mjs\");\n/* harmony import */ var _shared_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./shared.mjs */ \"(rsc)/./node_modules/openai/resources/shared.mjs\");\n/* harmony import */ var _audio_audio_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./audio/audio.mjs */ \"(rsc)/./node_modules/openai/resources/audio/audio.mjs\");\n/* harmony import */ var _batches_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./batches.mjs */ \"(rsc)/./node_modules/openai/resources/batches.mjs\");\n/* harmony import */ var _beta_beta_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./beta/beta.mjs */ \"(rsc)/./node_modules/openai/resources/beta/beta.mjs\");\n/* harmony import */ var _completions_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./completions.mjs */ \"(rsc)/./node_modules/openai/resources/completions.mjs\");\n/* harmony import */ var _containers_containers_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./containers/containers.mjs */ \"(rsc)/./node_modules/openai/resources/containers/containers.mjs\");\n/* harmony import */ var _conversations_conversations_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./conversations/conversations.mjs */ \"(rsc)/./node_modules/openai/resources/conversations/conversations.mjs\");\n/* harmony import */ var _embeddings_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./embeddings.mjs */ \"(rsc)/./node_modules/openai/resources/embeddings.mjs\");\n/* harmony import */ var _evals_evals_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./evals/evals.mjs */ \"(rsc)/./node_modules/openai/resources/evals/evals.mjs\");\n/* harmony import */ var _files_mjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./files.mjs */ \"(rsc)/./node_modules/openai/resources/files.mjs\");\n/* harmony import */ var _fine_tuning_fine_tuning_mjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./fine-tuning/fine-tuning.mjs */ \"(rsc)/./node_modules/openai/resources/fine-tuning/fine-tuning.mjs\");\n/* harmony import */ var _graders_graders_mjs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./graders/graders.mjs */ \"(rsc)/./node_modules/openai/resources/graders/graders.mjs\");\n/* harmony import */ var _images_mjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./images.mjs */ \"(rsc)/./node_modules/openai/resources/images.mjs\");\n/* harmony import */ var _models_mjs__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./models.mjs */ \"(rsc)/./node_modules/openai/resources/models.mjs\");\n/* harmony import */ var _moderations_mjs__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./moderations.mjs */ \"(rsc)/./node_modules/openai/resources/moderations.mjs\");\n/* harmony import */ var _realtime_realtime_mjs__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./realtime/realtime.mjs */ \"(rsc)/./node_modules/openai/resources/realtime/realtime.mjs\");\n/* harmony import */ var _responses_responses_mjs__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./responses/responses.mjs */ \"(rsc)/./node_modules/openai/resources/responses/responses.mjs\");\n/* harmony import */ var _uploads_uploads_mjs__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./uploads/uploads.mjs */ \"(rsc)/./node_modules/openai/resources/uploads/uploads.mjs\");\n/* harmony import */ var _vector_stores_vector_stores_mjs__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./vector-stores/vector-stores.mjs */ \"(rsc)/./node_modules/openai/resources/vector-stores/vector-stores.mjs\");\n/* harmony import */ var _webhooks_mjs__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./webhooks.mjs */ \"(rsc)/./node_modules/openai/resources/webhooks.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n //# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9pbmRleC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxzRkFBc0Y7QUFDckQ7QUFDSjtBQUNhO0FBQ0Q7QUFDRjtBQUNVO0FBQ1M7QUFDUTtBQUNuQjtBQUNKO0FBQ047QUFDc0I7QUFDWDtBQUNUO0FBQ0Q7QUFDVztBQUNFO0FBQ0c7QUFDTjtBQUNrQjtBQUN4QixDQUMxQyxrQ0FBa0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zeXN0ZW0tcHJvbXB0LXRvb2wtd2ViLy4vbm9kZV9tb2R1bGVzL29wZW5haS9yZXNvdXJjZXMvaW5kZXgubWpzP2ZkMTQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZSBnZW5lcmF0ZWQgZnJvbSBvdXIgT3BlbkFQSSBzcGVjIGJ5IFN0YWlubGVzcy4gU2VlIENPTlRSSUJVVElORy5tZCBmb3IgZGV0YWlscy5cbmV4cG9ydCAqIGZyb20gXCIuL2NoYXQvaW5kZXgubWpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9zaGFyZWQubWpzXCI7XG5leHBvcnQgeyBBdWRpbyB9IGZyb20gXCIuL2F1ZGlvL2F1ZGlvLm1qc1wiO1xuZXhwb3J0IHsgQmF0Y2hlcywgfSBmcm9tIFwiLi9iYXRjaGVzLm1qc1wiO1xuZXhwb3J0IHsgQmV0YSB9IGZyb20gXCIuL2JldGEvYmV0YS5tanNcIjtcbmV4cG9ydCB7IENvbXBsZXRpb25zLCB9IGZyb20gXCIuL2NvbXBsZXRpb25zLm1qc1wiO1xuZXhwb3J0IHsgQ29udGFpbmVycywgfSBmcm9tIFwiLi9jb250YWluZXJzL2NvbnRhaW5lcnMubWpzXCI7XG5leHBvcnQgeyBDb252ZXJzYXRpb25zIH0gZnJvbSBcIi4vY29udmVyc2F0aW9ucy9jb252ZXJzYXRpb25zLm1qc1wiO1xuZXhwb3J0IHsgRW1iZWRkaW5ncywgfSBmcm9tIFwiLi9lbWJlZGRpbmdzLm1qc1wiO1xuZXhwb3J0IHsgRXZhbHMsIH0gZnJvbSBcIi4vZXZhbHMvZXZhbHMubWpzXCI7XG5leHBvcnQgeyBGaWxlcywgfSBmcm9tIFwiLi9maWxlcy5tanNcIjtcbmV4cG9ydCB7IEZpbmVUdW5pbmcgfSBmcm9tIFwiLi9maW5lLXR1bmluZy9maW5lLXR1bmluZy5tanNcIjtcbmV4cG9ydCB7IEdyYWRlcnMgfSBmcm9tIFwiLi9ncmFkZXJzL2dyYWRlcnMubWpzXCI7XG5leHBvcnQgeyBJbWFnZXMsIH0gZnJvbSBcIi4vaW1hZ2VzLm1qc1wiO1xuZXhwb3J0IHsgTW9kZWxzIH0gZnJvbSBcIi4vbW9kZWxzLm1qc1wiO1xuZXhwb3J0IHsgTW9kZXJhdGlvbnMsIH0gZnJvbSBcIi4vbW9kZXJhdGlvbnMubWpzXCI7XG5leHBvcnQgeyBSZWFsdGltZSB9IGZyb20gXCIuL3JlYWx0aW1lL3JlYWx0aW1lLm1qc1wiO1xuZXhwb3J0IHsgUmVzcG9uc2VzIH0gZnJvbSBcIi4vcmVzcG9uc2VzL3Jlc3BvbnNlcy5tanNcIjtcbmV4cG9ydCB7IFVwbG9hZHMgfSBmcm9tIFwiLi91cGxvYWRzL3VwbG9hZHMubWpzXCI7XG5leHBvcnQgeyBWZWN0b3JTdG9yZXMsIH0gZnJvbSBcIi4vdmVjdG9yLXN0b3Jlcy92ZWN0b3Itc3RvcmVzLm1qc1wiO1xuZXhwb3J0IHsgV2ViaG9va3MgfSBmcm9tIFwiLi93ZWJob29rcy5tanNcIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4Lm1qcy5tYXAiXSwibmFtZXMiOlsiQXVkaW8iLCJCYXRjaGVzIiwiQmV0YSIsIkNvbXBsZXRpb25zIiwiQ29udGFpbmVycyIsIkNvbnZlcnNhdGlvbnMiLCJFbWJlZGRpbmdzIiwiRXZhbHMiLCJGaWxlcyIsIkZpbmVUdW5pbmciLCJHcmFkZXJzIiwiSW1hZ2VzIiwiTW9kZWxzIiwiTW9kZXJhdGlvbnMiLCJSZWFsdGltZSIsIlJlc3BvbnNlcyIsIlVwbG9hZHMiLCJWZWN0b3JTdG9yZXMiLCJXZWJob29rcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/resources/index.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/resources/models.mjs":
/*!**************************************************!*\
  !*** ./node_modules/openai/resources/models.mjs ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Models: () => (/* binding */ Models)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/resource.mjs */ \"(rsc)/./node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/pagination.mjs */ \"(rsc)/./node_modules/openai/core/pagination.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../internal/utils/path.mjs */ \"(rsc)/./node_modules/openai/internal/utils/path.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\nclass Models extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * Retrieves a model instance, providing basic information about the model such as\n     * the owner and permissioning.\n     */ retrieve(model, options) {\n        return this._client.get(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__.path`/models/${model}`, options);\n    }\n    /**\n     * Lists the currently available models, and provides basic information about each\n     * one such as the owner and availability.\n     */ list(options) {\n        return this._client.getAPIList(\"/models\", _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__.Page, options);\n    }\n    /**\n     * Delete a fine-tuned model. You must have the Owner role in your organization to\n     * delete a model.\n     */ delete(model, options) {\n        return this._client.delete(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__.path`/models/${model}`, options);\n    }\n} //# sourceMappingURL=models.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9tb2RlbHMubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSxzRkFBc0Y7QUFDbkM7QUFDTDtBQUNJO0FBQzNDLE1BQU1HLGVBQWVILDJEQUFXQTtJQUNuQzs7O0tBR0MsR0FDREksU0FBU0MsS0FBSyxFQUFFQyxPQUFPLEVBQUU7UUFDckIsT0FBTyxJQUFJLENBQUNDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDTiwwREFBSyxDQUFDLFFBQVEsRUFBRUcsTUFBTSxDQUFDLEVBQUVDO0lBQ3JEO0lBQ0E7OztLQUdDLEdBQ0RHLEtBQUtILE9BQU8sRUFBRTtRQUNWLE9BQU8sSUFBSSxDQUFDQyxPQUFPLENBQUNHLFVBQVUsQ0FBQyxXQUFZVCxzREFBSUEsRUFBR0s7SUFDdEQ7SUFDQTs7O0tBR0MsR0FDREssT0FBT04sS0FBSyxFQUFFQyxPQUFPLEVBQUU7UUFDbkIsT0FBTyxJQUFJLENBQUNDLE9BQU8sQ0FBQ0ksTUFBTSxDQUFDVCwwREFBSyxDQUFDLFFBQVEsRUFBRUcsTUFBTSxDQUFDLEVBQUVDO0lBQ3hEO0FBQ0osRUFDQSxtQ0FBbUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zeXN0ZW0tcHJvbXB0LXRvb2wtd2ViLy4vbm9kZV9tb2R1bGVzL29wZW5haS9yZXNvdXJjZXMvbW9kZWxzLm1qcz9mN2EyIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG5pbXBvcnQgeyBBUElSZXNvdXJjZSB9IGZyb20gXCIuLi9jb3JlL3Jlc291cmNlLm1qc1wiO1xuaW1wb3J0IHsgUGFnZSB9IGZyb20gXCIuLi9jb3JlL3BhZ2luYXRpb24ubWpzXCI7XG5pbXBvcnQgeyBwYXRoIH0gZnJvbSBcIi4uL2ludGVybmFsL3V0aWxzL3BhdGgubWpzXCI7XG5leHBvcnQgY2xhc3MgTW9kZWxzIGV4dGVuZHMgQVBJUmVzb3VyY2Uge1xuICAgIC8qKlxuICAgICAqIFJldHJpZXZlcyBhIG1vZGVsIGluc3RhbmNlLCBwcm92aWRpbmcgYmFzaWMgaW5mb3JtYXRpb24gYWJvdXQgdGhlIG1vZGVsIHN1Y2ggYXNcbiAgICAgKiB0aGUgb3duZXIgYW5kIHBlcm1pc3Npb25pbmcuXG4gICAgICovXG4gICAgcmV0cmlldmUobW9kZWwsIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5nZXQocGF0aCBgL21vZGVscy8ke21vZGVsfWAsIG9wdGlvbnMpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBMaXN0cyB0aGUgY3VycmVudGx5IGF2YWlsYWJsZSBtb2RlbHMsIGFuZCBwcm92aWRlcyBiYXNpYyBpbmZvcm1hdGlvbiBhYm91dCBlYWNoXG4gICAgICogb25lIHN1Y2ggYXMgdGhlIG93bmVyIGFuZCBhdmFpbGFiaWxpdHkuXG4gICAgICovXG4gICAgbGlzdChvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZ2V0QVBJTGlzdCgnL21vZGVscycsIChQYWdlKSwgb3B0aW9ucyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIERlbGV0ZSBhIGZpbmUtdHVuZWQgbW9kZWwuIFlvdSBtdXN0IGhhdmUgdGhlIE93bmVyIHJvbGUgaW4geW91ciBvcmdhbml6YXRpb24gdG9cbiAgICAgKiBkZWxldGUgYSBtb2RlbC5cbiAgICAgKi9cbiAgICBkZWxldGUobW9kZWwsIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5kZWxldGUocGF0aCBgL21vZGVscy8ke21vZGVsfWAsIG9wdGlvbnMpO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW1vZGVscy5tanMubWFwIl0sIm5hbWVzIjpbIkFQSVJlc291cmNlIiwiUGFnZSIsInBhdGgiLCJNb2RlbHMiLCJyZXRyaWV2ZSIsIm1vZGVsIiwib3B0aW9ucyIsIl9jbGllbnQiLCJnZXQiLCJsaXN0IiwiZ2V0QVBJTGlzdCIsImRlbGV0ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/resources/models.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/resources/moderations.mjs":
/*!*******************************************************!*\
  !*** ./node_modules/openai/resources/moderations.mjs ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Moderations: () => (/* binding */ Moderations)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/resource.mjs */ \"(rsc)/./node_modules/openai/core/resource.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nclass Moderations extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * Classifies if text and/or image inputs are potentially harmful. Learn more in\n     * the [moderation guide](https://platform.openai.com/docs/guides/moderation).\n     */ create(body, options) {\n        return this._client.post(\"/moderations\", {\n            body,\n            ...options\n        });\n    }\n} //# sourceMappingURL=moderations.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9tb2RlcmF0aW9ucy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxzRkFBc0Y7QUFDbkM7QUFDNUMsTUFBTUMsb0JBQW9CRCwyREFBV0E7SUFDeEM7OztLQUdDLEdBQ0RFLE9BQU9DLElBQUksRUFBRUMsT0FBTyxFQUFFO1FBQ2xCLE9BQU8sSUFBSSxDQUFDQyxPQUFPLENBQUNDLElBQUksQ0FBQyxnQkFBZ0I7WUFBRUg7WUFBTSxHQUFHQyxPQUFPO1FBQUM7SUFDaEU7QUFDSixFQUNBLHdDQUF3QyIsInNvdXJjZXMiOlsid2VicGFjazovL3N5c3RlbS1wcm9tcHQtdG9vbC13ZWIvLi9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9tb2RlcmF0aW9ucy5tanM/YWZlNiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlIGdlbmVyYXRlZCBmcm9tIG91ciBPcGVuQVBJIHNwZWMgYnkgU3RhaW5sZXNzLiBTZWUgQ09OVFJJQlVUSU5HLm1kIGZvciBkZXRhaWxzLlxuaW1wb3J0IHsgQVBJUmVzb3VyY2UgfSBmcm9tIFwiLi4vY29yZS9yZXNvdXJjZS5tanNcIjtcbmV4cG9ydCBjbGFzcyBNb2RlcmF0aW9ucyBleHRlbmRzIEFQSVJlc291cmNlIHtcbiAgICAvKipcbiAgICAgKiBDbGFzc2lmaWVzIGlmIHRleHQgYW5kL29yIGltYWdlIGlucHV0cyBhcmUgcG90ZW50aWFsbHkgaGFybWZ1bC4gTGVhcm4gbW9yZSBpblxuICAgICAqIHRoZSBbbW9kZXJhdGlvbiBndWlkZV0oaHR0cHM6Ly9wbGF0Zm9ybS5vcGVuYWkuY29tL2RvY3MvZ3VpZGVzL21vZGVyYXRpb24pLlxuICAgICAqL1xuICAgIGNyZWF0ZShib2R5LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQucG9zdCgnL21vZGVyYXRpb25zJywgeyBib2R5LCAuLi5vcHRpb25zIH0pO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW1vZGVyYXRpb25zLm1qcy5tYXAiXSwibmFtZXMiOlsiQVBJUmVzb3VyY2UiLCJNb2RlcmF0aW9ucyIsImNyZWF0ZSIsImJvZHkiLCJvcHRpb25zIiwiX2NsaWVudCIsInBvc3QiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/resources/moderations.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/resources/realtime/client-secrets.mjs":
/*!*******************************************************************!*\
  !*** ./node_modules/openai/resources/realtime/client-secrets.mjs ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ClientSecrets: () => (/* binding */ ClientSecrets)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/resource.mjs */ \"(rsc)/./node_modules/openai/core/resource.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nclass ClientSecrets extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * Create a Realtime session and client secret for either realtime or\n     * transcription.\n     */ create(body, options) {\n        return this._client.post(\"/realtime/client_secrets\", {\n            body,\n            ...options\n        });\n    }\n} //# sourceMappingURL=client-secrets.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9yZWFsdGltZS9jbGllbnQtc2VjcmV0cy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxzRkFBc0Y7QUFDaEM7QUFDL0MsTUFBTUMsc0JBQXNCRCwyREFBV0E7SUFDMUM7OztLQUdDLEdBQ0RFLE9BQU9DLElBQUksRUFBRUMsT0FBTyxFQUFFO1FBQ2xCLE9BQU8sSUFBSSxDQUFDQyxPQUFPLENBQUNDLElBQUksQ0FBQyw0QkFBNEI7WUFBRUg7WUFBTSxHQUFHQyxPQUFPO1FBQUM7SUFDNUU7QUFDSixFQUNBLDJDQUEyQyIsInNvdXJjZXMiOlsid2VicGFjazovL3N5c3RlbS1wcm9tcHQtdG9vbC13ZWIvLi9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9yZWFsdGltZS9jbGllbnQtc2VjcmV0cy5tanM/YjlhMSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlIGdlbmVyYXRlZCBmcm9tIG91ciBPcGVuQVBJIHNwZWMgYnkgU3RhaW5sZXNzLiBTZWUgQ09OVFJJQlVUSU5HLm1kIGZvciBkZXRhaWxzLlxuaW1wb3J0IHsgQVBJUmVzb3VyY2UgfSBmcm9tIFwiLi4vLi4vY29yZS9yZXNvdXJjZS5tanNcIjtcbmV4cG9ydCBjbGFzcyBDbGllbnRTZWNyZXRzIGV4dGVuZHMgQVBJUmVzb3VyY2Uge1xuICAgIC8qKlxuICAgICAqIENyZWF0ZSBhIFJlYWx0aW1lIHNlc3Npb24gYW5kIGNsaWVudCBzZWNyZXQgZm9yIGVpdGhlciByZWFsdGltZSBvclxuICAgICAqIHRyYW5zY3JpcHRpb24uXG4gICAgICovXG4gICAgY3JlYXRlKGJvZHksIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5wb3N0KCcvcmVhbHRpbWUvY2xpZW50X3NlY3JldHMnLCB7IGJvZHksIC4uLm9wdGlvbnMgfSk7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2xpZW50LXNlY3JldHMubWpzLm1hcCJdLCJuYW1lcyI6WyJBUElSZXNvdXJjZSIsIkNsaWVudFNlY3JldHMiLCJjcmVhdGUiLCJib2R5Iiwib3B0aW9ucyIsIl9jbGllbnQiLCJwb3N0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/resources/realtime/client-secrets.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/resources/realtime/realtime.mjs":
/*!*************************************************************!*\
  !*** ./node_modules/openai/resources/realtime/realtime.mjs ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Realtime: () => (/* binding */ Realtime)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/resource.mjs */ \"(rsc)/./node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _client_secrets_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./client-secrets.mjs */ \"(rsc)/./node_modules/openai/resources/realtime/client-secrets.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\nclass Realtime extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    constructor(){\n        super(...arguments);\n        this.clientSecrets = new _client_secrets_mjs__WEBPACK_IMPORTED_MODULE_1__.ClientSecrets(this._client);\n    }\n}\nRealtime.ClientSecrets = _client_secrets_mjs__WEBPACK_IMPORTED_MODULE_1__.ClientSecrets; //# sourceMappingURL=realtime.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9yZWFsdGltZS9yZWFsdGltZS5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsc0ZBQXNGO0FBQ2hDO0FBQ0c7QUFDSDtBQUMvQyxNQUFNRyxpQkFBaUJILDJEQUFXQTtJQUNyQ0ksYUFBYztRQUNWLEtBQUssSUFBSUM7UUFDVCxJQUFJLENBQUNDLGFBQWEsR0FBRyxJQUFJTCw4REFBOEIsQ0FBQyxJQUFJLENBQUNNLE9BQU87SUFDeEU7QUFDSjtBQUNBSixTQUFTRCxhQUFhLEdBQUdBLDhEQUFhQSxFQUN0QyxxQ0FBcUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zeXN0ZW0tcHJvbXB0LXRvb2wtd2ViLy4vbm9kZV9tb2R1bGVzL29wZW5haS9yZXNvdXJjZXMvcmVhbHRpbWUvcmVhbHRpbWUubWpzP2FjMWEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZSBnZW5lcmF0ZWQgZnJvbSBvdXIgT3BlbkFQSSBzcGVjIGJ5IFN0YWlubGVzcy4gU2VlIENPTlRSSUJVVElORy5tZCBmb3IgZGV0YWlscy5cbmltcG9ydCB7IEFQSVJlc291cmNlIH0gZnJvbSBcIi4uLy4uL2NvcmUvcmVzb3VyY2UubWpzXCI7XG5pbXBvcnQgKiBhcyBDbGllbnRTZWNyZXRzQVBJIGZyb20gXCIuL2NsaWVudC1zZWNyZXRzLm1qc1wiO1xuaW1wb3J0IHsgQ2xpZW50U2VjcmV0cywgfSBmcm9tIFwiLi9jbGllbnQtc2VjcmV0cy5tanNcIjtcbmV4cG9ydCBjbGFzcyBSZWFsdGltZSBleHRlbmRzIEFQSVJlc291cmNlIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgdGhpcy5jbGllbnRTZWNyZXRzID0gbmV3IENsaWVudFNlY3JldHNBUEkuQ2xpZW50U2VjcmV0cyh0aGlzLl9jbGllbnQpO1xuICAgIH1cbn1cblJlYWx0aW1lLkNsaWVudFNlY3JldHMgPSBDbGllbnRTZWNyZXRzO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVhbHRpbWUubWpzLm1hcCJdLCJuYW1lcyI6WyJBUElSZXNvdXJjZSIsIkNsaWVudFNlY3JldHNBUEkiLCJDbGllbnRTZWNyZXRzIiwiUmVhbHRpbWUiLCJjb25zdHJ1Y3RvciIsImFyZ3VtZW50cyIsImNsaWVudFNlY3JldHMiLCJfY2xpZW50Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/resources/realtime/realtime.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/resources/responses/input-items.mjs":
/*!*****************************************************************!*\
  !*** ./node_modules/openai/resources/responses/input-items.mjs ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InputItems: () => (/* binding */ InputItems)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/resource.mjs */ \"(rsc)/./node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/pagination.mjs */ \"(rsc)/./node_modules/openai/core/pagination.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../internal/utils/path.mjs */ \"(rsc)/./node_modules/openai/internal/utils/path.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\nclass InputItems extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * Returns a list of input items for a given response.\n     *\n     * @example\n     * ```ts\n     * // Automatically fetches more pages as needed.\n     * for await (const responseItem of client.responses.inputItems.list(\n     *   'response_id',\n     * )) {\n     *   // ...\n     * }\n     * ```\n     */ list(responseID, query = {}, options) {\n        return this._client.getAPIList(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__.path`/responses/${responseID}/input_items`, _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__.CursorPage, {\n            query,\n            ...options\n        });\n    }\n} //# sourceMappingURL=input-items.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9yZXNwb25zZXMvaW5wdXQtaXRlbXMubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSxzRkFBc0Y7QUFDaEM7QUFDQztBQUNGO0FBQzlDLE1BQU1HLG1CQUFtQkgsMkRBQVdBO0lBQ3ZDOzs7Ozs7Ozs7Ozs7S0FZQyxHQUNESSxLQUFLQyxVQUFVLEVBQUVDLFFBQVEsQ0FBQyxDQUFDLEVBQUVDLE9BQU8sRUFBRTtRQUNsQyxPQUFPLElBQUksQ0FBQ0MsT0FBTyxDQUFDQyxVQUFVLENBQUNQLDBEQUFLLENBQUMsV0FBVyxFQUFFRyxXQUFXLFlBQVksQ0FBQyxFQUFHSiw0REFBVUEsRUFBRztZQUFFSztZQUFPLEdBQUdDLE9BQU87UUFBQztJQUNsSDtBQUNKLEVBQ0Esd0NBQXdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3lzdGVtLXByb21wdC10b29sLXdlYi8uL25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL3Jlc3BvbnNlcy9pbnB1dC1pdGVtcy5tanM/Yzc3YiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlIGdlbmVyYXRlZCBmcm9tIG91ciBPcGVuQVBJIHNwZWMgYnkgU3RhaW5sZXNzLiBTZWUgQ09OVFJJQlVUSU5HLm1kIGZvciBkZXRhaWxzLlxuaW1wb3J0IHsgQVBJUmVzb3VyY2UgfSBmcm9tIFwiLi4vLi4vY29yZS9yZXNvdXJjZS5tanNcIjtcbmltcG9ydCB7IEN1cnNvclBhZ2UgfSBmcm9tIFwiLi4vLi4vY29yZS9wYWdpbmF0aW9uLm1qc1wiO1xuaW1wb3J0IHsgcGF0aCB9IGZyb20gXCIuLi8uLi9pbnRlcm5hbC91dGlscy9wYXRoLm1qc1wiO1xuZXhwb3J0IGNsYXNzIElucHV0SXRlbXMgZXh0ZW5kcyBBUElSZXNvdXJjZSB7XG4gICAgLyoqXG4gICAgICogUmV0dXJucyBhIGxpc3Qgb2YgaW5wdXQgaXRlbXMgZm9yIGEgZ2l2ZW4gcmVzcG9uc2UuXG4gICAgICpcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYHRzXG4gICAgICogLy8gQXV0b21hdGljYWxseSBmZXRjaGVzIG1vcmUgcGFnZXMgYXMgbmVlZGVkLlxuICAgICAqIGZvciBhd2FpdCAoY29uc3QgcmVzcG9uc2VJdGVtIG9mIGNsaWVudC5yZXNwb25zZXMuaW5wdXRJdGVtcy5saXN0KFxuICAgICAqICAgJ3Jlc3BvbnNlX2lkJyxcbiAgICAgKiApKSB7XG4gICAgICogICAvLyAuLi5cbiAgICAgKiB9XG4gICAgICogYGBgXG4gICAgICovXG4gICAgbGlzdChyZXNwb25zZUlELCBxdWVyeSA9IHt9LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZ2V0QVBJTGlzdChwYXRoIGAvcmVzcG9uc2VzLyR7cmVzcG9uc2VJRH0vaW5wdXRfaXRlbXNgLCAoQ3Vyc29yUGFnZSksIHsgcXVlcnksIC4uLm9wdGlvbnMgfSk7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5wdXQtaXRlbXMubWpzLm1hcCJdLCJuYW1lcyI6WyJBUElSZXNvdXJjZSIsIkN1cnNvclBhZ2UiLCJwYXRoIiwiSW5wdXRJdGVtcyIsImxpc3QiLCJyZXNwb25zZUlEIiwicXVlcnkiLCJvcHRpb25zIiwiX2NsaWVudCIsImdldEFQSUxpc3QiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/resources/responses/input-items.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/resources/responses/responses.mjs":
/*!***************************************************************!*\
  !*** ./node_modules/openai/resources/responses/responses.mjs ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Responses: () => (/* binding */ Responses)\n/* harmony export */ });\n/* harmony import */ var _lib_ResponsesParser_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../lib/ResponsesParser.mjs */ \"(rsc)/./node_modules/openai/lib/ResponsesParser.mjs\");\n/* harmony import */ var _lib_responses_ResponseStream_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../lib/responses/ResponseStream.mjs */ \"(rsc)/./node_modules/openai/lib/responses/ResponseStream.mjs\");\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/resource.mjs */ \"(rsc)/./node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _input_items_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./input-items.mjs */ \"(rsc)/./node_modules/openai/resources/responses/input-items.mjs\");\n/* harmony import */ var _internal_headers_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../internal/headers.mjs */ \"(rsc)/./node_modules/openai/internal/headers.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../internal/utils/path.mjs */ \"(rsc)/./node_modules/openai/internal/utils/path.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\n\n\n\n\nclass Responses extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_2__.APIResource {\n    constructor(){\n        super(...arguments);\n        this.inputItems = new _input_items_mjs__WEBPACK_IMPORTED_MODULE_3__.InputItems(this._client);\n    }\n    create(body, options) {\n        return this._client.post(\"/responses\", {\n            body,\n            ...options,\n            stream: body.stream ?? false\n        })._thenUnwrap((rsp)=>{\n            if (\"object\" in rsp && rsp.object === \"response\") {\n                (0,_lib_ResponsesParser_mjs__WEBPACK_IMPORTED_MODULE_0__.addOutputText)(rsp);\n            }\n            return rsp;\n        });\n    }\n    retrieve(responseID, query = {}, options) {\n        return this._client.get(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_5__.path`/responses/${responseID}`, {\n            query,\n            ...options,\n            stream: query?.stream ?? false\n        })._thenUnwrap((rsp)=>{\n            if (\"object\" in rsp && rsp.object === \"response\") {\n                (0,_lib_ResponsesParser_mjs__WEBPACK_IMPORTED_MODULE_0__.addOutputText)(rsp);\n            }\n            return rsp;\n        });\n    }\n    /**\n     * Deletes a model response with the given ID.\n     *\n     * @example\n     * ```ts\n     * await client.responses.delete(\n     *   'resp_677efb5139a88190b512bc3fef8e535d',\n     * );\n     * ```\n     */ delete(responseID, options) {\n        return this._client.delete(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_5__.path`/responses/${responseID}`, {\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_4__.buildHeaders)([\n                {\n                    Accept: \"*/*\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    parse(body, options) {\n        return this._client.responses.create(body, options)._thenUnwrap((response)=>(0,_lib_ResponsesParser_mjs__WEBPACK_IMPORTED_MODULE_0__.parseResponse)(response, body));\n    }\n    /**\n     * Creates a model response stream\n     */ stream(body, options) {\n        return _lib_responses_ResponseStream_mjs__WEBPACK_IMPORTED_MODULE_1__.ResponseStream.createResponse(this._client, body, options);\n    }\n    /**\n     * Cancels a model response with the given ID. Only responses created with the\n     * `background` parameter set to `true` can be cancelled.\n     * [Learn more](https://platform.openai.com/docs/guides/background).\n     *\n     * @example\n     * ```ts\n     * const response = await client.responses.cancel(\n     *   'resp_677efb5139a88190b512bc3fef8e535d',\n     * );\n     * ```\n     */ cancel(responseID, options) {\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_5__.path`/responses/${responseID}/cancel`, options);\n    }\n}\nResponses.InputItems = _input_items_mjs__WEBPACK_IMPORTED_MODULE_3__.InputItems; //# sourceMappingURL=responses.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9yZXNwb25zZXMvcmVzcG9uc2VzLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUEsc0ZBQXNGO0FBQ1I7QUFDTjtBQUNsQjtBQUNIO0FBQ0o7QUFDVztBQUNMO0FBQzlDLE1BQU1RLGtCQUFrQkwsMkRBQVdBO0lBQ3RDTSxhQUFjO1FBQ1YsS0FBSyxJQUFJQztRQUNULElBQUksQ0FBQ0MsVUFBVSxHQUFHLElBQUlQLHdEQUF3QixDQUFDLElBQUksQ0FBQ1EsT0FBTztJQUMvRDtJQUNBQyxPQUFPQyxJQUFJLEVBQUVDLE9BQU8sRUFBRTtRQUNsQixPQUFPLElBQUksQ0FBQ0gsT0FBTyxDQUFDSSxJQUFJLENBQUMsY0FBYztZQUFFRjtZQUFNLEdBQUdDLE9BQU87WUFBRUUsUUFBUUgsS0FBS0csTUFBTSxJQUFJO1FBQU0sR0FBR0MsV0FBVyxDQUFDLENBQUNDO1lBQ3BHLElBQUksWUFBWUEsT0FBT0EsSUFBSUMsTUFBTSxLQUFLLFlBQVk7Z0JBQzlDbkIsdUVBQWFBLENBQUNrQjtZQUNsQjtZQUNBLE9BQU9BO1FBQ1g7SUFDSjtJQUNBRSxTQUFTQyxVQUFVLEVBQUVDLFFBQVEsQ0FBQyxDQUFDLEVBQUVSLE9BQU8sRUFBRTtRQUN0QyxPQUFPLElBQUksQ0FBQ0gsT0FBTyxDQUFDWSxHQUFHLENBQUNqQiwwREFBSyxDQUFDLFdBQVcsRUFBRWUsV0FBVyxDQUFDLEVBQUU7WUFDckRDO1lBQ0EsR0FBR1IsT0FBTztZQUNWRSxRQUFRTSxPQUFPTixVQUFVO1FBQzdCLEdBQUdDLFdBQVcsQ0FBQyxDQUFDQztZQUNaLElBQUksWUFBWUEsT0FBT0EsSUFBSUMsTUFBTSxLQUFLLFlBQVk7Z0JBQzlDbkIsdUVBQWFBLENBQUNrQjtZQUNsQjtZQUNBLE9BQU9BO1FBQ1g7SUFDSjtJQUNBOzs7Ozs7Ozs7S0FTQyxHQUNETSxPQUFPSCxVQUFVLEVBQUVQLE9BQU8sRUFBRTtRQUN4QixPQUFPLElBQUksQ0FBQ0gsT0FBTyxDQUFDYSxNQUFNLENBQUNsQiwwREFBSyxDQUFDLFdBQVcsRUFBRWUsV0FBVyxDQUFDLEVBQUU7WUFDeEQsR0FBR1AsT0FBTztZQUNWVyxTQUFTcEIsbUVBQVlBLENBQUM7Z0JBQUM7b0JBQUVxQixRQUFRO2dCQUFNO2dCQUFHWixTQUFTVzthQUFRO1FBQy9EO0lBQ0o7SUFDQUUsTUFBTWQsSUFBSSxFQUFFQyxPQUFPLEVBQUU7UUFDakIsT0FBTyxJQUFJLENBQUNILE9BQU8sQ0FBQ2lCLFNBQVMsQ0FDeEJoQixNQUFNLENBQUNDLE1BQU1DLFNBQ2JHLFdBQVcsQ0FBQyxDQUFDWSxXQUFhOUIsdUVBQWFBLENBQUM4QixVQUFVaEI7SUFDM0Q7SUFDQTs7S0FFQyxHQUNERyxPQUFPSCxJQUFJLEVBQUVDLE9BQU8sRUFBRTtRQUNsQixPQUFPYiw2RUFBY0EsQ0FBQzZCLGNBQWMsQ0FBQyxJQUFJLENBQUNuQixPQUFPLEVBQUVFLE1BQU1DO0lBQzdEO0lBQ0E7Ozs7Ozs7Ozs7O0tBV0MsR0FDRGlCLE9BQU9WLFVBQVUsRUFBRVAsT0FBTyxFQUFFO1FBQ3hCLE9BQU8sSUFBSSxDQUFDSCxPQUFPLENBQUNJLElBQUksQ0FBQ1QsMERBQUssQ0FBQyxXQUFXLEVBQUVlLFdBQVcsT0FBTyxDQUFDLEVBQUVQO0lBQ3JFO0FBQ0o7QUFDQVAsVUFBVUgsVUFBVSxHQUFHQSx3REFBVUEsRUFDakMsc0NBQXNDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3lzdGVtLXByb21wdC10b29sLXdlYi8uL25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL3Jlc3BvbnNlcy9yZXNwb25zZXMubWpzPzMxODUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZSBnZW5lcmF0ZWQgZnJvbSBvdXIgT3BlbkFQSSBzcGVjIGJ5IFN0YWlubGVzcy4gU2VlIENPTlRSSUJVVElORy5tZCBmb3IgZGV0YWlscy5cbmltcG9ydCB7IHBhcnNlUmVzcG9uc2UsIGFkZE91dHB1dFRleHQsIH0gZnJvbSBcIi4uLy4uL2xpYi9SZXNwb25zZXNQYXJzZXIubWpzXCI7XG5pbXBvcnQgeyBSZXNwb25zZVN0cmVhbSB9IGZyb20gXCIuLi8uLi9saWIvcmVzcG9uc2VzL1Jlc3BvbnNlU3RyZWFtLm1qc1wiO1xuaW1wb3J0IHsgQVBJUmVzb3VyY2UgfSBmcm9tIFwiLi4vLi4vY29yZS9yZXNvdXJjZS5tanNcIjtcbmltcG9ydCAqIGFzIElucHV0SXRlbXNBUEkgZnJvbSBcIi4vaW5wdXQtaXRlbXMubWpzXCI7XG5pbXBvcnQgeyBJbnB1dEl0ZW1zIH0gZnJvbSBcIi4vaW5wdXQtaXRlbXMubWpzXCI7XG5pbXBvcnQgeyBidWlsZEhlYWRlcnMgfSBmcm9tIFwiLi4vLi4vaW50ZXJuYWwvaGVhZGVycy5tanNcIjtcbmltcG9ydCB7IHBhdGggfSBmcm9tIFwiLi4vLi4vaW50ZXJuYWwvdXRpbHMvcGF0aC5tanNcIjtcbmV4cG9ydCBjbGFzcyBSZXNwb25zZXMgZXh0ZW5kcyBBUElSZXNvdXJjZSB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XG4gICAgICAgIHRoaXMuaW5wdXRJdGVtcyA9IG5ldyBJbnB1dEl0ZW1zQVBJLklucHV0SXRlbXModGhpcy5fY2xpZW50KTtcbiAgICB9XG4gICAgY3JlYXRlKGJvZHksIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5wb3N0KCcvcmVzcG9uc2VzJywgeyBib2R5LCAuLi5vcHRpb25zLCBzdHJlYW06IGJvZHkuc3RyZWFtID8/IGZhbHNlIH0pLl90aGVuVW53cmFwKChyc3ApID0+IHtcbiAgICAgICAgICAgIGlmICgnb2JqZWN0JyBpbiByc3AgJiYgcnNwLm9iamVjdCA9PT0gJ3Jlc3BvbnNlJykge1xuICAgICAgICAgICAgICAgIGFkZE91dHB1dFRleHQocnNwKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiByc3A7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICByZXRyaWV2ZShyZXNwb25zZUlELCBxdWVyeSA9IHt9LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZ2V0KHBhdGggYC9yZXNwb25zZXMvJHtyZXNwb25zZUlEfWAsIHtcbiAgICAgICAgICAgIHF1ZXJ5LFxuICAgICAgICAgICAgLi4ub3B0aW9ucyxcbiAgICAgICAgICAgIHN0cmVhbTogcXVlcnk/LnN0cmVhbSA/PyBmYWxzZSxcbiAgICAgICAgfSkuX3RoZW5VbndyYXAoKHJzcCkgPT4ge1xuICAgICAgICAgICAgaWYgKCdvYmplY3QnIGluIHJzcCAmJiByc3Aub2JqZWN0ID09PSAncmVzcG9uc2UnKSB7XG4gICAgICAgICAgICAgICAgYWRkT3V0cHV0VGV4dChyc3ApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHJzcDtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIERlbGV0ZXMgYSBtb2RlbCByZXNwb25zZSB3aXRoIHRoZSBnaXZlbiBJRC5cbiAgICAgKlxuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgdHNcbiAgICAgKiBhd2FpdCBjbGllbnQucmVzcG9uc2VzLmRlbGV0ZShcbiAgICAgKiAgICdyZXNwXzY3N2VmYjUxMzlhODgxOTBiNTEyYmMzZmVmOGU1MzVkJyxcbiAgICAgKiApO1xuICAgICAqIGBgYFxuICAgICAqL1xuICAgIGRlbGV0ZShyZXNwb25zZUlELCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZGVsZXRlKHBhdGggYC9yZXNwb25zZXMvJHtyZXNwb25zZUlEfWAsIHtcbiAgICAgICAgICAgIC4uLm9wdGlvbnMsXG4gICAgICAgICAgICBoZWFkZXJzOiBidWlsZEhlYWRlcnMoW3sgQWNjZXB0OiAnKi8qJyB9LCBvcHRpb25zPy5oZWFkZXJzXSksXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBwYXJzZShib2R5LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQucmVzcG9uc2VzXG4gICAgICAgICAgICAuY3JlYXRlKGJvZHksIG9wdGlvbnMpXG4gICAgICAgICAgICAuX3RoZW5VbndyYXAoKHJlc3BvbnNlKSA9PiBwYXJzZVJlc3BvbnNlKHJlc3BvbnNlLCBib2R5KSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYSBtb2RlbCByZXNwb25zZSBzdHJlYW1cbiAgICAgKi9cbiAgICBzdHJlYW0oYm9keSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gUmVzcG9uc2VTdHJlYW0uY3JlYXRlUmVzcG9uc2UodGhpcy5fY2xpZW50LCBib2R5LCBvcHRpb25zKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ2FuY2VscyBhIG1vZGVsIHJlc3BvbnNlIHdpdGggdGhlIGdpdmVuIElELiBPbmx5IHJlc3BvbnNlcyBjcmVhdGVkIHdpdGggdGhlXG4gICAgICogYGJhY2tncm91bmRgIHBhcmFtZXRlciBzZXQgdG8gYHRydWVgIGNhbiBiZSBjYW5jZWxsZWQuXG4gICAgICogW0xlYXJuIG1vcmVdKGh0dHBzOi8vcGxhdGZvcm0ub3BlbmFpLmNvbS9kb2NzL2d1aWRlcy9iYWNrZ3JvdW5kKS5cbiAgICAgKlxuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgdHNcbiAgICAgKiBjb25zdCByZXNwb25zZSA9IGF3YWl0IGNsaWVudC5yZXNwb25zZXMuY2FuY2VsKFxuICAgICAqICAgJ3Jlc3BfNjc3ZWZiNTEzOWE4ODE5MGI1MTJiYzNmZWY4ZTUzNWQnLFxuICAgICAqICk7XG4gICAgICogYGBgXG4gICAgICovXG4gICAgY2FuY2VsKHJlc3BvbnNlSUQsIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5wb3N0KHBhdGggYC9yZXNwb25zZXMvJHtyZXNwb25zZUlEfS9jYW5jZWxgLCBvcHRpb25zKTtcbiAgICB9XG59XG5SZXNwb25zZXMuSW5wdXRJdGVtcyA9IElucHV0SXRlbXM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZXNwb25zZXMubWpzLm1hcCJdLCJuYW1lcyI6WyJwYXJzZVJlc3BvbnNlIiwiYWRkT3V0cHV0VGV4dCIsIlJlc3BvbnNlU3RyZWFtIiwiQVBJUmVzb3VyY2UiLCJJbnB1dEl0ZW1zQVBJIiwiSW5wdXRJdGVtcyIsImJ1aWxkSGVhZGVycyIsInBhdGgiLCJSZXNwb25zZXMiLCJjb25zdHJ1Y3RvciIsImFyZ3VtZW50cyIsImlucHV0SXRlbXMiLCJfY2xpZW50IiwiY3JlYXRlIiwiYm9keSIsIm9wdGlvbnMiLCJwb3N0Iiwic3RyZWFtIiwiX3RoZW5VbndyYXAiLCJyc3AiLCJvYmplY3QiLCJyZXRyaWV2ZSIsInJlc3BvbnNlSUQiLCJxdWVyeSIsImdldCIsImRlbGV0ZSIsImhlYWRlcnMiLCJBY2NlcHQiLCJwYXJzZSIsInJlc3BvbnNlcyIsInJlc3BvbnNlIiwiY3JlYXRlUmVzcG9uc2UiLCJjYW5jZWwiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/resources/responses/responses.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/resources/shared.mjs":
/*!**************************************************!*\
  !*** ./node_modules/openai/resources/shared.mjs ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n //# sourceMappingURL=shared.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9zaGFyZWQubWpzIiwibWFwcGluZ3MiOiI7QUFBQSxzRkFBc0Y7QUFDNUUsQ0FDVixtQ0FBbUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zeXN0ZW0tcHJvbXB0LXRvb2wtd2ViLy4vbm9kZV9tb2R1bGVzL29wZW5haS9yZXNvdXJjZXMvc2hhcmVkLm1qcz85Y2I2Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG5leHBvcnQge307XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zaGFyZWQubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/resources/shared.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/resources/uploads/parts.mjs":
/*!*********************************************************!*\
  !*** ./node_modules/openai/resources/uploads/parts.mjs ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Parts: () => (/* binding */ Parts)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/resource.mjs */ \"(rsc)/./node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _internal_uploads_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../internal/uploads.mjs */ \"(rsc)/./node_modules/openai/internal/uploads.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../internal/utils/path.mjs */ \"(rsc)/./node_modules/openai/internal/utils/path.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\nclass Parts extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * Adds a\n     * [Part](https://platform.openai.com/docs/api-reference/uploads/part-object) to an\n     * [Upload](https://platform.openai.com/docs/api-reference/uploads/object) object.\n     * A Part represents a chunk of bytes from the file you are trying to upload.\n     *\n     * Each Part can be at most 64 MB, and you can add Parts until you hit the Upload\n     * maximum of 8 GB.\n     *\n     * It is possible to add multiple Parts in parallel. You can decide the intended\n     * order of the Parts when you\n     * [complete the Upload](https://platform.openai.com/docs/api-reference/uploads/complete).\n     */ create(uploadID, body, options) {\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__.path`/uploads/${uploadID}/parts`, (0,_internal_uploads_mjs__WEBPACK_IMPORTED_MODULE_1__.multipartFormRequestOptions)({\n            body,\n            ...options\n        }, this._client));\n    }\n} //# sourceMappingURL=parts.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy91cGxvYWRzL3BhcnRzLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUEsc0ZBQXNGO0FBQ2hDO0FBQ21CO0FBQ3BCO0FBQzlDLE1BQU1HLGNBQWNILDJEQUFXQTtJQUNsQzs7Ozs7Ozs7Ozs7O0tBWUMsR0FDREksT0FBT0MsUUFBUSxFQUFFQyxJQUFJLEVBQUVDLE9BQU8sRUFBRTtRQUM1QixPQUFPLElBQUksQ0FBQ0MsT0FBTyxDQUFDQyxJQUFJLENBQUNQLDBEQUFLLENBQUMsU0FBUyxFQUFFRyxTQUFTLE1BQU0sQ0FBQyxFQUFFSixrRkFBMkJBLENBQUM7WUFBRUs7WUFBTSxHQUFHQyxPQUFPO1FBQUMsR0FBRyxJQUFJLENBQUNDLE9BQU87SUFDOUg7QUFDSixFQUNBLGtDQUFrQyIsInNvdXJjZXMiOlsid2VicGFjazovL3N5c3RlbS1wcm9tcHQtdG9vbC13ZWIvLi9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy91cGxvYWRzL3BhcnRzLm1qcz9iZDc4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG5pbXBvcnQgeyBBUElSZXNvdXJjZSB9IGZyb20gXCIuLi8uLi9jb3JlL3Jlc291cmNlLm1qc1wiO1xuaW1wb3J0IHsgbXVsdGlwYXJ0Rm9ybVJlcXVlc3RPcHRpb25zIH0gZnJvbSBcIi4uLy4uL2ludGVybmFsL3VwbG9hZHMubWpzXCI7XG5pbXBvcnQgeyBwYXRoIH0gZnJvbSBcIi4uLy4uL2ludGVybmFsL3V0aWxzL3BhdGgubWpzXCI7XG5leHBvcnQgY2xhc3MgUGFydHMgZXh0ZW5kcyBBUElSZXNvdXJjZSB7XG4gICAgLyoqXG4gICAgICogQWRkcyBhXG4gICAgICogW1BhcnRdKGh0dHBzOi8vcGxhdGZvcm0ub3BlbmFpLmNvbS9kb2NzL2FwaS1yZWZlcmVuY2UvdXBsb2Fkcy9wYXJ0LW9iamVjdCkgdG8gYW5cbiAgICAgKiBbVXBsb2FkXShodHRwczovL3BsYXRmb3JtLm9wZW5haS5jb20vZG9jcy9hcGktcmVmZXJlbmNlL3VwbG9hZHMvb2JqZWN0KSBvYmplY3QuXG4gICAgICogQSBQYXJ0IHJlcHJlc2VudHMgYSBjaHVuayBvZiBieXRlcyBmcm9tIHRoZSBmaWxlIHlvdSBhcmUgdHJ5aW5nIHRvIHVwbG9hZC5cbiAgICAgKlxuICAgICAqIEVhY2ggUGFydCBjYW4gYmUgYXQgbW9zdCA2NCBNQiwgYW5kIHlvdSBjYW4gYWRkIFBhcnRzIHVudGlsIHlvdSBoaXQgdGhlIFVwbG9hZFxuICAgICAqIG1heGltdW0gb2YgOCBHQi5cbiAgICAgKlxuICAgICAqIEl0IGlzIHBvc3NpYmxlIHRvIGFkZCBtdWx0aXBsZSBQYXJ0cyBpbiBwYXJhbGxlbC4gWW91IGNhbiBkZWNpZGUgdGhlIGludGVuZGVkXG4gICAgICogb3JkZXIgb2YgdGhlIFBhcnRzIHdoZW4geW91XG4gICAgICogW2NvbXBsZXRlIHRoZSBVcGxvYWRdKGh0dHBzOi8vcGxhdGZvcm0ub3BlbmFpLmNvbS9kb2NzL2FwaS1yZWZlcmVuY2UvdXBsb2Fkcy9jb21wbGV0ZSkuXG4gICAgICovXG4gICAgY3JlYXRlKHVwbG9hZElELCBib2R5LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQucG9zdChwYXRoIGAvdXBsb2Fkcy8ke3VwbG9hZElEfS9wYXJ0c2AsIG11bHRpcGFydEZvcm1SZXF1ZXN0T3B0aW9ucyh7IGJvZHksIC4uLm9wdGlvbnMgfSwgdGhpcy5fY2xpZW50KSk7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGFydHMubWpzLm1hcCJdLCJuYW1lcyI6WyJBUElSZXNvdXJjZSIsIm11bHRpcGFydEZvcm1SZXF1ZXN0T3B0aW9ucyIsInBhdGgiLCJQYXJ0cyIsImNyZWF0ZSIsInVwbG9hZElEIiwiYm9keSIsIm9wdGlvbnMiLCJfY2xpZW50IiwicG9zdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/resources/uploads/parts.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/resources/uploads/uploads.mjs":
/*!***********************************************************!*\
  !*** ./node_modules/openai/resources/uploads/uploads.mjs ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Uploads: () => (/* binding */ Uploads)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/resource.mjs */ \"(rsc)/./node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _parts_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./parts.mjs */ \"(rsc)/./node_modules/openai/resources/uploads/parts.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../internal/utils/path.mjs */ \"(rsc)/./node_modules/openai/internal/utils/path.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\n\nclass Uploads extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    constructor(){\n        super(...arguments);\n        this.parts = new _parts_mjs__WEBPACK_IMPORTED_MODULE_1__.Parts(this._client);\n    }\n    /**\n     * Creates an intermediate\n     * [Upload](https://platform.openai.com/docs/api-reference/uploads/object) object\n     * that you can add\n     * [Parts](https://platform.openai.com/docs/api-reference/uploads/part-object) to.\n     * Currently, an Upload can accept at most 8 GB in total and expires after an hour\n     * after you create it.\n     *\n     * Once you complete the Upload, we will create a\n     * [File](https://platform.openai.com/docs/api-reference/files/object) object that\n     * contains all the parts you uploaded. This File is usable in the rest of our\n     * platform as a regular File object.\n     *\n     * For certain `purpose` values, the correct `mime_type` must be specified. Please\n     * refer to documentation for the\n     * [supported MIME types for your use case](https://platform.openai.com/docs/assistants/tools/file-search#supported-files).\n     *\n     * For guidance on the proper filename extensions for each purpose, please follow\n     * the documentation on\n     * [creating a File](https://platform.openai.com/docs/api-reference/files/create).\n     */ create(body, options) {\n        return this._client.post(\"/uploads\", {\n            body,\n            ...options\n        });\n    }\n    /**\n     * Cancels the Upload. No Parts may be added after an Upload is cancelled.\n     */ cancel(uploadID, options) {\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__.path`/uploads/${uploadID}/cancel`, options);\n    }\n    /**\n     * Completes the\n     * [Upload](https://platform.openai.com/docs/api-reference/uploads/object).\n     *\n     * Within the returned Upload object, there is a nested\n     * [File](https://platform.openai.com/docs/api-reference/files/object) object that\n     * is ready to use in the rest of the platform.\n     *\n     * You can specify the order of the Parts by passing in an ordered list of the Part\n     * IDs.\n     *\n     * The number of bytes uploaded upon completion must match the number of bytes\n     * initially specified when creating the Upload object. No Parts may be added after\n     * an Upload is completed.\n     */ complete(uploadID, body, options) {\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__.path`/uploads/${uploadID}/complete`, {\n            body,\n            ...options\n        });\n    }\n}\nUploads.Parts = _parts_mjs__WEBPACK_IMPORTED_MODULE_1__.Parts; //# sourceMappingURL=uploads.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy91cGxvYWRzL3VwbG9hZHMubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSxzRkFBc0Y7QUFDaEM7QUFDZDtBQUNKO0FBQ2lCO0FBQzlDLE1BQU1JLGdCQUFnQkosMkRBQVdBO0lBQ3BDSyxhQUFjO1FBQ1YsS0FBSyxJQUFJQztRQUNULElBQUksQ0FBQ0MsS0FBSyxHQUFHLElBQUlOLDZDQUFjLENBQUMsSUFBSSxDQUFDTyxPQUFPO0lBQ2hEO0lBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0tBb0JDLEdBQ0RDLE9BQU9DLElBQUksRUFBRUMsT0FBTyxFQUFFO1FBQ2xCLE9BQU8sSUFBSSxDQUFDSCxPQUFPLENBQUNJLElBQUksQ0FBQyxZQUFZO1lBQUVGO1lBQU0sR0FBR0MsT0FBTztRQUFDO0lBQzVEO0lBQ0E7O0tBRUMsR0FDREUsT0FBT0MsUUFBUSxFQUFFSCxPQUFPLEVBQUU7UUFDdEIsT0FBTyxJQUFJLENBQUNILE9BQU8sQ0FBQ0ksSUFBSSxDQUFDVCwwREFBSyxDQUFDLFNBQVMsRUFBRVcsU0FBUyxPQUFPLENBQUMsRUFBRUg7SUFDakU7SUFDQTs7Ozs7Ozs7Ozs7Ozs7S0FjQyxHQUNESSxTQUFTRCxRQUFRLEVBQUVKLElBQUksRUFBRUMsT0FBTyxFQUFFO1FBQzlCLE9BQU8sSUFBSSxDQUFDSCxPQUFPLENBQUNJLElBQUksQ0FBQ1QsMERBQUssQ0FBQyxTQUFTLEVBQUVXLFNBQVMsU0FBUyxDQUFDLEVBQUU7WUFBRUo7WUFBTSxHQUFHQyxPQUFPO1FBQUM7SUFDdEY7QUFDSjtBQUNBUCxRQUFRRixLQUFLLEdBQUdBLDZDQUFLQSxFQUNyQixvQ0FBb0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zeXN0ZW0tcHJvbXB0LXRvb2wtd2ViLy4vbm9kZV9tb2R1bGVzL29wZW5haS9yZXNvdXJjZXMvdXBsb2Fkcy91cGxvYWRzLm1qcz9jMjFkIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG5pbXBvcnQgeyBBUElSZXNvdXJjZSB9IGZyb20gXCIuLi8uLi9jb3JlL3Jlc291cmNlLm1qc1wiO1xuaW1wb3J0ICogYXMgUGFydHNBUEkgZnJvbSBcIi4vcGFydHMubWpzXCI7XG5pbXBvcnQgeyBQYXJ0cyB9IGZyb20gXCIuL3BhcnRzLm1qc1wiO1xuaW1wb3J0IHsgcGF0aCB9IGZyb20gXCIuLi8uLi9pbnRlcm5hbC91dGlscy9wYXRoLm1qc1wiO1xuZXhwb3J0IGNsYXNzIFVwbG9hZHMgZXh0ZW5kcyBBUElSZXNvdXJjZSB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XG4gICAgICAgIHRoaXMucGFydHMgPSBuZXcgUGFydHNBUEkuUGFydHModGhpcy5fY2xpZW50KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhbiBpbnRlcm1lZGlhdGVcbiAgICAgKiBbVXBsb2FkXShodHRwczovL3BsYXRmb3JtLm9wZW5haS5jb20vZG9jcy9hcGktcmVmZXJlbmNlL3VwbG9hZHMvb2JqZWN0KSBvYmplY3RcbiAgICAgKiB0aGF0IHlvdSBjYW4gYWRkXG4gICAgICogW1BhcnRzXShodHRwczovL3BsYXRmb3JtLm9wZW5haS5jb20vZG9jcy9hcGktcmVmZXJlbmNlL3VwbG9hZHMvcGFydC1vYmplY3QpIHRvLlxuICAgICAqIEN1cnJlbnRseSwgYW4gVXBsb2FkIGNhbiBhY2NlcHQgYXQgbW9zdCA4IEdCIGluIHRvdGFsIGFuZCBleHBpcmVzIGFmdGVyIGFuIGhvdXJcbiAgICAgKiBhZnRlciB5b3UgY3JlYXRlIGl0LlxuICAgICAqXG4gICAgICogT25jZSB5b3UgY29tcGxldGUgdGhlIFVwbG9hZCwgd2Ugd2lsbCBjcmVhdGUgYVxuICAgICAqIFtGaWxlXShodHRwczovL3BsYXRmb3JtLm9wZW5haS5jb20vZG9jcy9hcGktcmVmZXJlbmNlL2ZpbGVzL29iamVjdCkgb2JqZWN0IHRoYXRcbiAgICAgKiBjb250YWlucyBhbGwgdGhlIHBhcnRzIHlvdSB1cGxvYWRlZC4gVGhpcyBGaWxlIGlzIHVzYWJsZSBpbiB0aGUgcmVzdCBvZiBvdXJcbiAgICAgKiBwbGF0Zm9ybSBhcyBhIHJlZ3VsYXIgRmlsZSBvYmplY3QuXG4gICAgICpcbiAgICAgKiBGb3IgY2VydGFpbiBgcHVycG9zZWAgdmFsdWVzLCB0aGUgY29ycmVjdCBgbWltZV90eXBlYCBtdXN0IGJlIHNwZWNpZmllZC4gUGxlYXNlXG4gICAgICogcmVmZXIgdG8gZG9jdW1lbnRhdGlvbiBmb3IgdGhlXG4gICAgICogW3N1cHBvcnRlZCBNSU1FIHR5cGVzIGZvciB5b3VyIHVzZSBjYXNlXShodHRwczovL3BsYXRmb3JtLm9wZW5haS5jb20vZG9jcy9hc3Npc3RhbnRzL3Rvb2xzL2ZpbGUtc2VhcmNoI3N1cHBvcnRlZC1maWxlcykuXG4gICAgICpcbiAgICAgKiBGb3IgZ3VpZGFuY2Ugb24gdGhlIHByb3BlciBmaWxlbmFtZSBleHRlbnNpb25zIGZvciBlYWNoIHB1cnBvc2UsIHBsZWFzZSBmb2xsb3dcbiAgICAgKiB0aGUgZG9jdW1lbnRhdGlvbiBvblxuICAgICAqIFtjcmVhdGluZyBhIEZpbGVdKGh0dHBzOi8vcGxhdGZvcm0ub3BlbmFpLmNvbS9kb2NzL2FwaS1yZWZlcmVuY2UvZmlsZXMvY3JlYXRlKS5cbiAgICAgKi9cbiAgICBjcmVhdGUoYm9keSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LnBvc3QoJy91cGxvYWRzJywgeyBib2R5LCAuLi5vcHRpb25zIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDYW5jZWxzIHRoZSBVcGxvYWQuIE5vIFBhcnRzIG1heSBiZSBhZGRlZCBhZnRlciBhbiBVcGxvYWQgaXMgY2FuY2VsbGVkLlxuICAgICAqL1xuICAgIGNhbmNlbCh1cGxvYWRJRCwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LnBvc3QocGF0aCBgL3VwbG9hZHMvJHt1cGxvYWRJRH0vY2FuY2VsYCwgb3B0aW9ucyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENvbXBsZXRlcyB0aGVcbiAgICAgKiBbVXBsb2FkXShodHRwczovL3BsYXRmb3JtLm9wZW5haS5jb20vZG9jcy9hcGktcmVmZXJlbmNlL3VwbG9hZHMvb2JqZWN0KS5cbiAgICAgKlxuICAgICAqIFdpdGhpbiB0aGUgcmV0dXJuZWQgVXBsb2FkIG9iamVjdCwgdGhlcmUgaXMgYSBuZXN0ZWRcbiAgICAgKiBbRmlsZV0oaHR0cHM6Ly9wbGF0Zm9ybS5vcGVuYWkuY29tL2RvY3MvYXBpLXJlZmVyZW5jZS9maWxlcy9vYmplY3QpIG9iamVjdCB0aGF0XG4gICAgICogaXMgcmVhZHkgdG8gdXNlIGluIHRoZSByZXN0IG9mIHRoZSBwbGF0Zm9ybS5cbiAgICAgKlxuICAgICAqIFlvdSBjYW4gc3BlY2lmeSB0aGUgb3JkZXIgb2YgdGhlIFBhcnRzIGJ5IHBhc3NpbmcgaW4gYW4gb3JkZXJlZCBsaXN0IG9mIHRoZSBQYXJ0XG4gICAgICogSURzLlxuICAgICAqXG4gICAgICogVGhlIG51bWJlciBvZiBieXRlcyB1cGxvYWRlZCB1cG9uIGNvbXBsZXRpb24gbXVzdCBtYXRjaCB0aGUgbnVtYmVyIG9mIGJ5dGVzXG4gICAgICogaW5pdGlhbGx5IHNwZWNpZmllZCB3aGVuIGNyZWF0aW5nIHRoZSBVcGxvYWQgb2JqZWN0LiBObyBQYXJ0cyBtYXkgYmUgYWRkZWQgYWZ0ZXJcbiAgICAgKiBhbiBVcGxvYWQgaXMgY29tcGxldGVkLlxuICAgICAqL1xuICAgIGNvbXBsZXRlKHVwbG9hZElELCBib2R5LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQucG9zdChwYXRoIGAvdXBsb2Fkcy8ke3VwbG9hZElEfS9jb21wbGV0ZWAsIHsgYm9keSwgLi4ub3B0aW9ucyB9KTtcbiAgICB9XG59XG5VcGxvYWRzLlBhcnRzID0gUGFydHM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD11cGxvYWRzLm1qcy5tYXAiXSwibmFtZXMiOlsiQVBJUmVzb3VyY2UiLCJQYXJ0c0FQSSIsIlBhcnRzIiwicGF0aCIsIlVwbG9hZHMiLCJjb25zdHJ1Y3RvciIsImFyZ3VtZW50cyIsInBhcnRzIiwiX2NsaWVudCIsImNyZWF0ZSIsImJvZHkiLCJvcHRpb25zIiwicG9zdCIsImNhbmNlbCIsInVwbG9hZElEIiwiY29tcGxldGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/resources/uploads/uploads.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/resources/vector-stores/file-batches.mjs":
/*!**********************************************************************!*\
  !*** ./node_modules/openai/resources/vector-stores/file-batches.mjs ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FileBatches: () => (/* binding */ FileBatches)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/resource.mjs */ \"(rsc)/./node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/pagination.mjs */ \"(rsc)/./node_modules/openai/core/pagination.mjs\");\n/* harmony import */ var _internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../internal/headers.mjs */ \"(rsc)/./node_modules/openai/internal/headers.mjs\");\n/* harmony import */ var _internal_utils_sleep_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../internal/utils/sleep.mjs */ \"(rsc)/./node_modules/openai/internal/utils/sleep.mjs\");\n/* harmony import */ var _lib_Util_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../lib/Util.mjs */ \"(rsc)/./node_modules/openai/lib/Util.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../internal/utils/path.mjs */ \"(rsc)/./node_modules/openai/internal/utils/path.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\n\n\n\nclass FileBatches extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * Create a vector store file batch.\n     */ create(vectorStoreID, body, options) {\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_5__.path`/vector_stores/${vectorStoreID}/file_batches`, {\n            body,\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Retrieves a vector store file batch.\n     */ retrieve(batchID, params, options) {\n        const { vector_store_id } = params;\n        return this._client.get(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_5__.path`/vector_stores/${vector_store_id}/file_batches/${batchID}`, {\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Cancel a vector store file batch. This attempts to cancel the processing of\n     * files in this batch as soon as possible.\n     */ cancel(batchID, params, options) {\n        const { vector_store_id } = params;\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_5__.path`/vector_stores/${vector_store_id}/file_batches/${batchID}/cancel`, {\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Create a vector store batch and poll until all files have been processed.\n     */ async createAndPoll(vectorStoreId, body, options) {\n        const batch = await this.create(vectorStoreId, body);\n        return await this.poll(vectorStoreId, batch.id, options);\n    }\n    /**\n     * Returns a list of vector store files in a batch.\n     */ listFiles(batchID, params, options) {\n        const { vector_store_id, ...query } = params;\n        return this._client.getAPIList(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_5__.path`/vector_stores/${vector_store_id}/file_batches/${batchID}/files`, _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__.CursorPage, {\n            query,\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Wait for the given file batch to be processed.\n     *\n     * Note: this will return even if one of the files failed to process, you need to\n     * check batch.file_counts.failed_count to handle this case.\n     */ async poll(vectorStoreID, batchID, options) {\n        const headers = (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__.buildHeaders)([\n            options?.headers,\n            {\n                \"X-Stainless-Poll-Helper\": \"true\",\n                \"X-Stainless-Custom-Poll-Interval\": options?.pollIntervalMs?.toString() ?? undefined\n            }\n        ]);\n        while(true){\n            const { data: batch, response } = await this.retrieve(batchID, {\n                vector_store_id: vectorStoreID\n            }, {\n                ...options,\n                headers\n            }).withResponse();\n            switch(batch.status){\n                case \"in_progress\":\n                    let sleepInterval = 5000;\n                    if (options?.pollIntervalMs) {\n                        sleepInterval = options.pollIntervalMs;\n                    } else {\n                        const headerInterval = response.headers.get(\"openai-poll-after-ms\");\n                        if (headerInterval) {\n                            const headerIntervalMs = parseInt(headerInterval);\n                            if (!isNaN(headerIntervalMs)) {\n                                sleepInterval = headerIntervalMs;\n                            }\n                        }\n                    }\n                    await (0,_internal_utils_sleep_mjs__WEBPACK_IMPORTED_MODULE_3__.sleep)(sleepInterval);\n                    break;\n                case \"failed\":\n                case \"cancelled\":\n                case \"completed\":\n                    return batch;\n            }\n        }\n    }\n    /**\n     * Uploads the given files concurrently and then creates a vector store file batch.\n     *\n     * The concurrency limit is configurable using the `maxConcurrency` parameter.\n     */ async uploadAndPoll(vectorStoreId, { files, fileIds = [] }, options) {\n        if (files == null || files.length == 0) {\n            throw new Error(`No \\`files\\` provided to process. If you've already uploaded files you should use \\`.createAndPoll()\\` instead`);\n        }\n        const configuredConcurrency = options?.maxConcurrency ?? 5;\n        // We cap the number of workers at the number of files (so we don't start any unnecessary workers)\n        const concurrencyLimit = Math.min(configuredConcurrency, files.length);\n        const client = this._client;\n        const fileIterator = files.values();\n        const allFileIds = [\n            ...fileIds\n        ];\n        // This code is based on this design. The libraries don't accommodate our environment limits.\n        // https://stackoverflow.com/questions/40639432/what-is-the-best-way-to-limit-concurrency-when-using-es6s-promise-all\n        async function processFiles(iterator) {\n            for (let item of iterator){\n                const fileObj = await client.files.create({\n                    file: item,\n                    purpose: \"assistants\"\n                }, options);\n                allFileIds.push(fileObj.id);\n            }\n        }\n        // Start workers to process results\n        const workers = Array(concurrencyLimit).fill(fileIterator).map(processFiles);\n        // Wait for all processing to complete.\n        await (0,_lib_Util_mjs__WEBPACK_IMPORTED_MODULE_4__.allSettledWithThrow)(workers);\n        return await this.createAndPoll(vectorStoreId, {\n            file_ids: allFileIds\n        });\n    }\n} //# sourceMappingURL=file-batches.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/resources/vector-stores/file-batches.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/resources/vector-stores/files.mjs":
/*!***************************************************************!*\
  !*** ./node_modules/openai/resources/vector-stores/files.mjs ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Files: () => (/* binding */ Files)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/resource.mjs */ \"(rsc)/./node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/pagination.mjs */ \"(rsc)/./node_modules/openai/core/pagination.mjs\");\n/* harmony import */ var _internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../internal/headers.mjs */ \"(rsc)/./node_modules/openai/internal/headers.mjs\");\n/* harmony import */ var _internal_utils_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../internal/utils.mjs */ \"(rsc)/./node_modules/openai/internal/utils.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../internal/utils/path.mjs */ \"(rsc)/./node_modules/openai/internal/utils/path.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\n\n\nclass Files extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * Create a vector store file by attaching a\n     * [File](https://platform.openai.com/docs/api-reference/files) to a\n     * [vector store](https://platform.openai.com/docs/api-reference/vector-stores/object).\n     */ create(vectorStoreID, body, options) {\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_4__.path`/vector_stores/${vectorStoreID}/files`, {\n            body,\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Retrieves a vector store file.\n     */ retrieve(fileID, params, options) {\n        const { vector_store_id } = params;\n        return this._client.get(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_4__.path`/vector_stores/${vector_store_id}/files/${fileID}`, {\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Update attributes on a vector store file.\n     */ update(fileID, params, options) {\n        const { vector_store_id, ...body } = params;\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_4__.path`/vector_stores/${vector_store_id}/files/${fileID}`, {\n            body,\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Returns a list of vector store files.\n     */ list(vectorStoreID, query = {}, options) {\n        return this._client.getAPIList(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_4__.path`/vector_stores/${vectorStoreID}/files`, _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__.CursorPage, {\n            query,\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Delete a vector store file. This will remove the file from the vector store but\n     * the file itself will not be deleted. To delete the file, use the\n     * [delete file](https://platform.openai.com/docs/api-reference/files/delete)\n     * endpoint.\n     */ delete(fileID, params, options) {\n        const { vector_store_id } = params;\n        return this._client.delete(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_4__.path`/vector_stores/${vector_store_id}/files/${fileID}`, {\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Attach a file to the given vector store and wait for it to be processed.\n     */ async createAndPoll(vectorStoreId, body, options) {\n        const file = await this.create(vectorStoreId, body, options);\n        return await this.poll(vectorStoreId, file.id, options);\n    }\n    /**\n     * Wait for the vector store file to finish processing.\n     *\n     * Note: this will return even if the file failed to process, you need to check\n     * file.last_error and file.status to handle these cases\n     */ async poll(vectorStoreID, fileID, options) {\n        const headers = (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__.buildHeaders)([\n            options?.headers,\n            {\n                \"X-Stainless-Poll-Helper\": \"true\",\n                \"X-Stainless-Custom-Poll-Interval\": options?.pollIntervalMs?.toString() ?? undefined\n            }\n        ]);\n        while(true){\n            const fileResponse = await this.retrieve(fileID, {\n                vector_store_id: vectorStoreID\n            }, {\n                ...options,\n                headers\n            }).withResponse();\n            const file = fileResponse.data;\n            switch(file.status){\n                case \"in_progress\":\n                    let sleepInterval = 5000;\n                    if (options?.pollIntervalMs) {\n                        sleepInterval = options.pollIntervalMs;\n                    } else {\n                        const headerInterval = fileResponse.response.headers.get(\"openai-poll-after-ms\");\n                        if (headerInterval) {\n                            const headerIntervalMs = parseInt(headerInterval);\n                            if (!isNaN(headerIntervalMs)) {\n                                sleepInterval = headerIntervalMs;\n                            }\n                        }\n                    }\n                    await (0,_internal_utils_mjs__WEBPACK_IMPORTED_MODULE_3__.sleep)(sleepInterval);\n                    break;\n                case \"failed\":\n                case \"completed\":\n                    return file;\n            }\n        }\n    }\n    /**\n     * Upload a file to the `files` API and then attach it to the given vector store.\n     *\n     * Note the file will be asynchronously processed (you can use the alternative\n     * polling helper method to wait for processing to complete).\n     */ async upload(vectorStoreId, file, options) {\n        const fileInfo = await this._client.files.create({\n            file: file,\n            purpose: \"assistants\"\n        }, options);\n        return this.create(vectorStoreId, {\n            file_id: fileInfo.id\n        }, options);\n    }\n    /**\n     * Add a file to a vector store and poll until processing is complete.\n     */ async uploadAndPoll(vectorStoreId, file, options) {\n        const fileInfo = await this.upload(vectorStoreId, file, options);\n        return await this.poll(vectorStoreId, fileInfo.id, options);\n    }\n    /**\n     * Retrieve the parsed contents of a vector store file.\n     */ content(fileID, params, options) {\n        const { vector_store_id } = params;\n        return this._client.getAPIList(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_4__.path`/vector_stores/${vector_store_id}/files/${fileID}/content`, _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__.Page, {\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n} //# sourceMappingURL=files.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/resources/vector-stores/files.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/resources/vector-stores/vector-stores.mjs":
/*!***********************************************************************!*\
  !*** ./node_modules/openai/resources/vector-stores/vector-stores.mjs ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   VectorStores: () => (/* binding */ VectorStores)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/resource.mjs */ \"(rsc)/./node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _file_batches_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./file-batches.mjs */ \"(rsc)/./node_modules/openai/resources/vector-stores/file-batches.mjs\");\n/* harmony import */ var _files_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./files.mjs */ \"(rsc)/./node_modules/openai/resources/vector-stores/files.mjs\");\n/* harmony import */ var _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/pagination.mjs */ \"(rsc)/./node_modules/openai/core/pagination.mjs\");\n/* harmony import */ var _internal_headers_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../internal/headers.mjs */ \"(rsc)/./node_modules/openai/internal/headers.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../internal/utils/path.mjs */ \"(rsc)/./node_modules/openai/internal/utils/path.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\n\n\n\n\n\nclass VectorStores extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    constructor(){\n        super(...arguments);\n        this.files = new _files_mjs__WEBPACK_IMPORTED_MODULE_2__.Files(this._client);\n        this.fileBatches = new _file_batches_mjs__WEBPACK_IMPORTED_MODULE_1__.FileBatches(this._client);\n    }\n    /**\n     * Create a vector store.\n     */ create(body, options) {\n        return this._client.post(\"/vector_stores\", {\n            body,\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_4__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Retrieves a vector store.\n     */ retrieve(vectorStoreID, options) {\n        return this._client.get(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_5__.path`/vector_stores/${vectorStoreID}`, {\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_4__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Modifies a vector store.\n     */ update(vectorStoreID, body, options) {\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_5__.path`/vector_stores/${vectorStoreID}`, {\n            body,\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_4__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Returns a list of vector stores.\n     */ list(query = {}, options) {\n        return this._client.getAPIList(\"/vector_stores\", _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_3__.CursorPage, {\n            query,\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_4__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Delete a vector store.\n     */ delete(vectorStoreID, options) {\n        return this._client.delete(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_5__.path`/vector_stores/${vectorStoreID}`, {\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_4__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Search a vector store for relevant chunks based on a query and file attributes\n     * filter.\n     */ search(vectorStoreID, body, options) {\n        return this._client.getAPIList(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_5__.path`/vector_stores/${vectorStoreID}/search`, _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_3__.Page, {\n            body,\n            method: \"post\",\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_4__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n}\nVectorStores.Files = _files_mjs__WEBPACK_IMPORTED_MODULE_2__.Files;\nVectorStores.FileBatches = _file_batches_mjs__WEBPACK_IMPORTED_MODULE_1__.FileBatches; //# sourceMappingURL=vector-stores.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy92ZWN0b3Itc3RvcmVzL3ZlY3Rvci1zdG9yZXMubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQSxzRkFBc0Y7QUFDaEM7QUFDRDtBQUNIO0FBQ1Y7QUFDSDtBQUN3QjtBQUNIO0FBQ0w7QUFDOUMsTUFBTVMscUJBQXFCVCwyREFBV0E7SUFDekNVLGFBQWM7UUFDVixLQUFLLElBQUlDO1FBQ1QsSUFBSSxDQUFDQyxLQUFLLEdBQUcsSUFBSVQsNkNBQWMsQ0FBQyxJQUFJLENBQUNVLE9BQU87UUFDNUMsSUFBSSxDQUFDQyxXQUFXLEdBQUcsSUFBSWIsMERBQTBCLENBQUMsSUFBSSxDQUFDWSxPQUFPO0lBQ2xFO0lBQ0E7O0tBRUMsR0FDREUsT0FBT0MsSUFBSSxFQUFFQyxPQUFPLEVBQUU7UUFDbEIsT0FBTyxJQUFJLENBQUNKLE9BQU8sQ0FBQ0ssSUFBSSxDQUFDLGtCQUFrQjtZQUN2Q0Y7WUFDQSxHQUFHQyxPQUFPO1lBQ1ZFLFNBQVNaLG1FQUFZQSxDQUFDO2dCQUFDO29CQUFFLGVBQWU7Z0JBQWdCO2dCQUFHVSxTQUFTRTthQUFRO1FBQ2hGO0lBQ0o7SUFDQTs7S0FFQyxHQUNEQyxTQUFTQyxhQUFhLEVBQUVKLE9BQU8sRUFBRTtRQUM3QixPQUFPLElBQUksQ0FBQ0osT0FBTyxDQUFDUyxHQUFHLENBQUNkLDBEQUFLLENBQUMsZUFBZSxFQUFFYSxjQUFjLENBQUMsRUFBRTtZQUM1RCxHQUFHSixPQUFPO1lBQ1ZFLFNBQVNaLG1FQUFZQSxDQUFDO2dCQUFDO29CQUFFLGVBQWU7Z0JBQWdCO2dCQUFHVSxTQUFTRTthQUFRO1FBQ2hGO0lBQ0o7SUFDQTs7S0FFQyxHQUNESSxPQUFPRixhQUFhLEVBQUVMLElBQUksRUFBRUMsT0FBTyxFQUFFO1FBQ2pDLE9BQU8sSUFBSSxDQUFDSixPQUFPLENBQUNLLElBQUksQ0FBQ1YsMERBQUssQ0FBQyxlQUFlLEVBQUVhLGNBQWMsQ0FBQyxFQUFFO1lBQzdETDtZQUNBLEdBQUdDLE9BQU87WUFDVkUsU0FBU1osbUVBQVlBLENBQUM7Z0JBQUM7b0JBQUUsZUFBZTtnQkFBZ0I7Z0JBQUdVLFNBQVNFO2FBQVE7UUFDaEY7SUFDSjtJQUNBOztLQUVDLEdBQ0RLLEtBQUtDLFFBQVEsQ0FBQyxDQUFDLEVBQUVSLE9BQU8sRUFBRTtRQUN0QixPQUFPLElBQUksQ0FBQ0osT0FBTyxDQUFDYSxVQUFVLENBQUMsa0JBQW1CckIsNERBQVVBLEVBQUc7WUFDM0RvQjtZQUNBLEdBQUdSLE9BQU87WUFDVkUsU0FBU1osbUVBQVlBLENBQUM7Z0JBQUM7b0JBQUUsZUFBZTtnQkFBZ0I7Z0JBQUdVLFNBQVNFO2FBQVE7UUFDaEY7SUFDSjtJQUNBOztLQUVDLEdBQ0RRLE9BQU9OLGFBQWEsRUFBRUosT0FBTyxFQUFFO1FBQzNCLE9BQU8sSUFBSSxDQUFDSixPQUFPLENBQUNjLE1BQU0sQ0FBQ25CLDBEQUFLLENBQUMsZUFBZSxFQUFFYSxjQUFjLENBQUMsRUFBRTtZQUMvRCxHQUFHSixPQUFPO1lBQ1ZFLFNBQVNaLG1FQUFZQSxDQUFDO2dCQUFDO29CQUFFLGVBQWU7Z0JBQWdCO2dCQUFHVSxTQUFTRTthQUFRO1FBQ2hGO0lBQ0o7SUFDQTs7O0tBR0MsR0FDRFMsT0FBT1AsYUFBYSxFQUFFTCxJQUFJLEVBQUVDLE9BQU8sRUFBRTtRQUNqQyxPQUFPLElBQUksQ0FBQ0osT0FBTyxDQUFDYSxVQUFVLENBQUNsQiwwREFBSyxDQUFDLGVBQWUsRUFBRWEsY0FBYyxPQUFPLENBQUMsRUFBR2Ysc0RBQUlBLEVBQUc7WUFDbEZVO1lBQ0FhLFFBQVE7WUFDUixHQUFHWixPQUFPO1lBQ1ZFLFNBQVNaLG1FQUFZQSxDQUFDO2dCQUFDO29CQUFFLGVBQWU7Z0JBQWdCO2dCQUFHVSxTQUFTRTthQUFRO1FBQ2hGO0lBQ0o7QUFDSjtBQUNBVixhQUFhTCxLQUFLLEdBQUdBLDZDQUFLQTtBQUMxQkssYUFBYVAsV0FBVyxHQUFHQSwwREFBV0EsRUFDdEMsMENBQTBDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3lzdGVtLXByb21wdC10b29sLXdlYi8uL25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL3ZlY3Rvci1zdG9yZXMvdmVjdG9yLXN0b3Jlcy5tanM/ZTQwNyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlIGdlbmVyYXRlZCBmcm9tIG91ciBPcGVuQVBJIHNwZWMgYnkgU3RhaW5sZXNzLiBTZWUgQ09OVFJJQlVUSU5HLm1kIGZvciBkZXRhaWxzLlxuaW1wb3J0IHsgQVBJUmVzb3VyY2UgfSBmcm9tIFwiLi4vLi4vY29yZS9yZXNvdXJjZS5tanNcIjtcbmltcG9ydCAqIGFzIEZpbGVCYXRjaGVzQVBJIGZyb20gXCIuL2ZpbGUtYmF0Y2hlcy5tanNcIjtcbmltcG9ydCB7IEZpbGVCYXRjaGVzLCB9IGZyb20gXCIuL2ZpbGUtYmF0Y2hlcy5tanNcIjtcbmltcG9ydCAqIGFzIEZpbGVzQVBJIGZyb20gXCIuL2ZpbGVzLm1qc1wiO1xuaW1wb3J0IHsgRmlsZXMsIH0gZnJvbSBcIi4vZmlsZXMubWpzXCI7XG5pbXBvcnQgeyBDdXJzb3JQYWdlLCBQYWdlIH0gZnJvbSBcIi4uLy4uL2NvcmUvcGFnaW5hdGlvbi5tanNcIjtcbmltcG9ydCB7IGJ1aWxkSGVhZGVycyB9IGZyb20gXCIuLi8uLi9pbnRlcm5hbC9oZWFkZXJzLm1qc1wiO1xuaW1wb3J0IHsgcGF0aCB9IGZyb20gXCIuLi8uLi9pbnRlcm5hbC91dGlscy9wYXRoLm1qc1wiO1xuZXhwb3J0IGNsYXNzIFZlY3RvclN0b3JlcyBleHRlbmRzIEFQSVJlc291cmNlIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgdGhpcy5maWxlcyA9IG5ldyBGaWxlc0FQSS5GaWxlcyh0aGlzLl9jbGllbnQpO1xuICAgICAgICB0aGlzLmZpbGVCYXRjaGVzID0gbmV3IEZpbGVCYXRjaGVzQVBJLkZpbGVCYXRjaGVzKHRoaXMuX2NsaWVudCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENyZWF0ZSBhIHZlY3RvciBzdG9yZS5cbiAgICAgKi9cbiAgICBjcmVhdGUoYm9keSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LnBvc3QoJy92ZWN0b3Jfc3RvcmVzJywge1xuICAgICAgICAgICAgYm9keSxcbiAgICAgICAgICAgIC4uLm9wdGlvbnMsXG4gICAgICAgICAgICBoZWFkZXJzOiBidWlsZEhlYWRlcnMoW3sgJ09wZW5BSS1CZXRhJzogJ2Fzc2lzdGFudHM9djInIH0sIG9wdGlvbnM/LmhlYWRlcnNdKSxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHJpZXZlcyBhIHZlY3RvciBzdG9yZS5cbiAgICAgKi9cbiAgICByZXRyaWV2ZSh2ZWN0b3JTdG9yZUlELCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZ2V0KHBhdGggYC92ZWN0b3Jfc3RvcmVzLyR7dmVjdG9yU3RvcmVJRH1gLCB7XG4gICAgICAgICAgICAuLi5vcHRpb25zLFxuICAgICAgICAgICAgaGVhZGVyczogYnVpbGRIZWFkZXJzKFt7ICdPcGVuQUktQmV0YSc6ICdhc3Npc3RhbnRzPXYyJyB9LCBvcHRpb25zPy5oZWFkZXJzXSksXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBNb2RpZmllcyBhIHZlY3RvciBzdG9yZS5cbiAgICAgKi9cbiAgICB1cGRhdGUodmVjdG9yU3RvcmVJRCwgYm9keSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LnBvc3QocGF0aCBgL3ZlY3Rvcl9zdG9yZXMvJHt2ZWN0b3JTdG9yZUlEfWAsIHtcbiAgICAgICAgICAgIGJvZHksXG4gICAgICAgICAgICAuLi5vcHRpb25zLFxuICAgICAgICAgICAgaGVhZGVyczogYnVpbGRIZWFkZXJzKFt7ICdPcGVuQUktQmV0YSc6ICdhc3Npc3RhbnRzPXYyJyB9LCBvcHRpb25zPy5oZWFkZXJzXSksXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIGEgbGlzdCBvZiB2ZWN0b3Igc3RvcmVzLlxuICAgICAqL1xuICAgIGxpc3QocXVlcnkgPSB7fSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmdldEFQSUxpc3QoJy92ZWN0b3Jfc3RvcmVzJywgKEN1cnNvclBhZ2UpLCB7XG4gICAgICAgICAgICBxdWVyeSxcbiAgICAgICAgICAgIC4uLm9wdGlvbnMsXG4gICAgICAgICAgICBoZWFkZXJzOiBidWlsZEhlYWRlcnMoW3sgJ09wZW5BSS1CZXRhJzogJ2Fzc2lzdGFudHM9djInIH0sIG9wdGlvbnM/LmhlYWRlcnNdKSxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIERlbGV0ZSBhIHZlY3RvciBzdG9yZS5cbiAgICAgKi9cbiAgICBkZWxldGUodmVjdG9yU3RvcmVJRCwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmRlbGV0ZShwYXRoIGAvdmVjdG9yX3N0b3Jlcy8ke3ZlY3RvclN0b3JlSUR9YCwge1xuICAgICAgICAgICAgLi4ub3B0aW9ucyxcbiAgICAgICAgICAgIGhlYWRlcnM6IGJ1aWxkSGVhZGVycyhbeyAnT3BlbkFJLUJldGEnOiAnYXNzaXN0YW50cz12MicgfSwgb3B0aW9ucz8uaGVhZGVyc10pLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogU2VhcmNoIGEgdmVjdG9yIHN0b3JlIGZvciByZWxldmFudCBjaHVua3MgYmFzZWQgb24gYSBxdWVyeSBhbmQgZmlsZSBhdHRyaWJ1dGVzXG4gICAgICogZmlsdGVyLlxuICAgICAqL1xuICAgIHNlYXJjaCh2ZWN0b3JTdG9yZUlELCBib2R5LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZ2V0QVBJTGlzdChwYXRoIGAvdmVjdG9yX3N0b3Jlcy8ke3ZlY3RvclN0b3JlSUR9L3NlYXJjaGAsIChQYWdlKSwge1xuICAgICAgICAgICAgYm9keSxcbiAgICAgICAgICAgIG1ldGhvZDogJ3Bvc3QnLFxuICAgICAgICAgICAgLi4ub3B0aW9ucyxcbiAgICAgICAgICAgIGhlYWRlcnM6IGJ1aWxkSGVhZGVycyhbeyAnT3BlbkFJLUJldGEnOiAnYXNzaXN0YW50cz12MicgfSwgb3B0aW9ucz8uaGVhZGVyc10pLFxuICAgICAgICB9KTtcbiAgICB9XG59XG5WZWN0b3JTdG9yZXMuRmlsZXMgPSBGaWxlcztcblZlY3RvclN0b3Jlcy5GaWxlQmF0Y2hlcyA9IEZpbGVCYXRjaGVzO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dmVjdG9yLXN0b3Jlcy5tanMubWFwIl0sIm5hbWVzIjpbIkFQSVJlc291cmNlIiwiRmlsZUJhdGNoZXNBUEkiLCJGaWxlQmF0Y2hlcyIsIkZpbGVzQVBJIiwiRmlsZXMiLCJDdXJzb3JQYWdlIiwiUGFnZSIsImJ1aWxkSGVhZGVycyIsInBhdGgiLCJWZWN0b3JTdG9yZXMiLCJjb25zdHJ1Y3RvciIsImFyZ3VtZW50cyIsImZpbGVzIiwiX2NsaWVudCIsImZpbGVCYXRjaGVzIiwiY3JlYXRlIiwiYm9keSIsIm9wdGlvbnMiLCJwb3N0IiwiaGVhZGVycyIsInJldHJpZXZlIiwidmVjdG9yU3RvcmVJRCIsImdldCIsInVwZGF0ZSIsImxpc3QiLCJxdWVyeSIsImdldEFQSUxpc3QiLCJkZWxldGUiLCJzZWFyY2giLCJtZXRob2QiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/resources/vector-stores/vector-stores.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/resources/webhooks.mjs":
/*!****************************************************!*\
  !*** ./node_modules/openai/resources/webhooks.mjs ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Webhooks: () => (/* binding */ Webhooks)\n/* harmony export */ });\n/* harmony import */ var _internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../internal/tslib.mjs */ \"(rsc)/./node_modules/openai/internal/tslib.mjs\");\n/* harmony import */ var _error_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error.mjs */ \"(rsc)/./node_modules/openai/error.mjs\");\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/resource.mjs */ \"(rsc)/./node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _internal_headers_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../internal/headers.mjs */ \"(rsc)/./node_modules/openai/internal/headers.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nvar _Webhooks_instances, _Webhooks_validateSecret, _Webhooks_getRequiredHeader;\n\n\n\n\nclass Webhooks extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_2__.APIResource {\n    constructor(){\n        super(...arguments);\n        _Webhooks_instances.add(this);\n    }\n    /**\n     * Validates that the given payload was sent by OpenAI and parses the payload.\n     */ async unwrap(payload, headers, secret = this._client.webhookSecret, tolerance = 300) {\n        await this.verifySignature(payload, headers, secret, tolerance);\n        return JSON.parse(payload);\n    }\n    /**\n     * Validates whether or not the webhook payload was sent by OpenAI.\n     *\n     * An error will be raised if the webhook payload was not sent by OpenAI.\n     *\n     * @param payload - The webhook payload\n     * @param headers - The webhook headers\n     * @param secret - The webhook secret (optional, will use client secret if not provided)\n     * @param tolerance - Maximum age of the webhook in seconds (default: 300 = 5 minutes)\n     */ async verifySignature(payload, headers, secret = this._client.webhookSecret, tolerance = 300) {\n        if (typeof crypto === \"undefined\" || typeof crypto.subtle.importKey !== \"function\" || typeof crypto.subtle.verify !== \"function\") {\n            throw new Error(\"Webhook signature verification is only supported when the `crypto` global is defined\");\n        }\n        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _Webhooks_instances, \"m\", _Webhooks_validateSecret).call(this, secret);\n        const headersObj = (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_3__.buildHeaders)([\n            headers\n        ]).values;\n        const signatureHeader = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _Webhooks_instances, \"m\", _Webhooks_getRequiredHeader).call(this, headersObj, \"webhook-signature\");\n        const timestamp = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _Webhooks_instances, \"m\", _Webhooks_getRequiredHeader).call(this, headersObj, \"webhook-timestamp\");\n        const webhookId = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _Webhooks_instances, \"m\", _Webhooks_getRequiredHeader).call(this, headersObj, \"webhook-id\");\n        // Validate timestamp to prevent replay attacks\n        const timestampSeconds = parseInt(timestamp, 10);\n        if (isNaN(timestampSeconds)) {\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.InvalidWebhookSignatureError(\"Invalid webhook timestamp format\");\n        }\n        const nowSeconds = Math.floor(Date.now() / 1000);\n        if (nowSeconds - timestampSeconds > tolerance) {\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.InvalidWebhookSignatureError(\"Webhook timestamp is too old\");\n        }\n        if (timestampSeconds > nowSeconds + tolerance) {\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.InvalidWebhookSignatureError(\"Webhook timestamp is too new\");\n        }\n        // Extract signatures from v1,<base64> format\n        // The signature header can have multiple values, separated by spaces.\n        // Each value is in the format v1,<base64>. We should accept if any match.\n        const signatures = signatureHeader.split(\" \").map((part)=>part.startsWith(\"v1,\") ? part.substring(3) : part);\n        // Decode the secret if it starts with whsec_\n        const decodedSecret = secret.startsWith(\"whsec_\") ? Buffer.from(secret.replace(\"whsec_\", \"\"), \"base64\") : Buffer.from(secret, \"utf-8\");\n        // Create the signed payload: {webhook_id}.{timestamp}.{payload}\n        const signedPayload = webhookId ? `${webhookId}.${timestamp}.${payload}` : `${timestamp}.${payload}`;\n        // Import the secret as a cryptographic key for HMAC\n        const key = await crypto.subtle.importKey(\"raw\", decodedSecret, {\n            name: \"HMAC\",\n            hash: \"SHA-256\"\n        }, false, [\n            \"verify\"\n        ]);\n        // Check if any signature matches using timing-safe WebCrypto verify\n        for (const signature of signatures){\n            try {\n                const signatureBytes = Buffer.from(signature, \"base64\");\n                const isValid = await crypto.subtle.verify(\"HMAC\", key, signatureBytes, new TextEncoder().encode(signedPayload));\n                if (isValid) {\n                    return; // Valid signature found\n                }\n            } catch  {\n                continue;\n            }\n        }\n        throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.InvalidWebhookSignatureError(\"The given webhook signature does not match the expected signature\");\n    }\n}\n_Webhooks_instances = new WeakSet(), _Webhooks_validateSecret = function _Webhooks_validateSecret(secret) {\n    if (typeof secret !== \"string\" || secret.length === 0) {\n        throw new Error(`The webhook secret must either be set using the env var, OPENAI_WEBHOOK_SECRET, on the client class, OpenAI({ webhookSecret: '123' }), or passed to this function`);\n    }\n}, _Webhooks_getRequiredHeader = function _Webhooks_getRequiredHeader(headers, name) {\n    if (!headers) {\n        throw new Error(`Headers are required`);\n    }\n    const value = headers.get(name);\n    if (value === null || value === undefined) {\n        throw new Error(`Missing required header: ${name}`);\n    }\n    return value;\n}; //# sourceMappingURL=webhooks.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/resources/webhooks.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/streaming.mjs":
/*!*******************************************!*\
  !*** ./node_modules/openai/streaming.mjs ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Stream: () => (/* reexport safe */ _core_streaming_mjs__WEBPACK_IMPORTED_MODULE_0__.Stream),\n/* harmony export */   _iterSSEMessages: () => (/* reexport safe */ _core_streaming_mjs__WEBPACK_IMPORTED_MODULE_0__._iterSSEMessages)\n/* harmony export */ });\n/* harmony import */ var _core_streaming_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core/streaming.mjs */ \"(rsc)/./node_modules/openai/core/streaming.mjs\");\n //# sourceMappingURL=streaming.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvb3BlbmFpL3N0cmVhbWluZy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXFDLENBQ3JDLHNDQUFzQyIsInNvdXJjZXMiOlsid2VicGFjazovL3N5c3RlbS1wcm9tcHQtdG9vbC13ZWIvLi9ub2RlX21vZHVsZXMvb3BlbmFpL3N0cmVhbWluZy5tanM/YTc3OSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tIFwiLi9jb3JlL3N0cmVhbWluZy5tanNcIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXN0cmVhbWluZy5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/streaming.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/openai/version.mjs":
/*!*****************************************!*\
  !*** ./node_modules/openai/version.mjs ***!
  \*****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   VERSION: () => (/* binding */ VERSION)\n/* harmony export */ });\nconst VERSION = \"5.19.1\"; // x-release-please-version\n //# sourceMappingURL=version.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvb3BlbmFpL3ZlcnNpb24ubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTyxNQUFNQSxVQUFVLFNBQVMsQ0FBQywyQkFBMkI7Q0FDNUQsb0NBQW9DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3lzdGVtLXByb21wdC10b29sLXdlYi8uL25vZGVfbW9kdWxlcy9vcGVuYWkvdmVyc2lvbi5tanM/ZGMyZiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgVkVSU0lPTiA9ICc1LjE5LjEnOyAvLyB4LXJlbGVhc2UtcGxlYXNlLXZlcnNpb25cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXZlcnNpb24ubWpzLm1hcCJdLCJuYW1lcyI6WyJWRVJTSU9OIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/openai/version.mjs\n");

/***/ })

};
;